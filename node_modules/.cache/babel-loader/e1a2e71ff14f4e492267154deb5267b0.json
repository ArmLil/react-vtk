{"ast":null,"code":"var _jsxFileName = \"/home/lilit/workspace/vtk/from_scratch_frontend_vtk/src/components/Location/LocationTable.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { XGrid } from \"@material-ui/x-grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { GridToolbarContainer, GridToolbar } from \"@material-ui/x-grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteForeverOutlinedIcon from \"@material-ui/icons/DeleteForeverOutlined\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport russian from \"../../constants/localeTextConstants.js\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport LocationAddDialog from \"./LocationAddDialog\";\nimport LocationUpdateDialog from \"./LocationUpdateDialog\";\nimport WorningDialog from \"../WorningDialog\";\nimport { useSnackbar } from \"notistack\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  toolbarContainer: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  tools: {\n    width: \"100%\",\n    paddingLeft: 20,\n    paddingRight: 20,\n    marginBottom: 30,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  iconButton: {\n    \"&:hover\": {\n      backgroundColor: \"#bdbdbd\"\n    }\n  }\n});\nexport default function LocationTable({\n  locations,\n  deleteLocation,\n  addLocation,\n  updateLocation\n}) {\n  _s();\n\n  console.log(locations);\n  const [openAddDialog, setOpenAddDialog] = React.useState(false);\n  const [openUpdateDialog, setOpenUpdateDialog] = React.useState(false);\n  const [parameters, setParameters] = React.useState({});\n  const [openWorning, setOpenWorning] = React.useState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const classes = useStyles();\n\n  const handleAddDialogOpen = () => {\n    setOpenAddDialog(true);\n  };\n\n  const handleAddDialogClose = (event, number, name, note) => {\n    setOpenAddDialog(false);\n  };\n\n  const handleUpdateDialogClose = (event, number, name, note) => {\n    setOpenUpdateDialog(false);\n  };\n\n  const handleUpdateDialogOpen = params => {\n    setParameters(Object.assign({}, params.row));\n    setOpenUpdateDialog(true);\n  };\n\n  const handleCreate = (event, number, name, note, id) => {\n    console.log({\n      number\n    }, {\n      name\n    }, {\n      note\n    });\n\n    if (!number || !name) {\n      enqueueSnackbar(\"Нобходимо заполнить поля Номер и Название\", {\n        variant: \"warning\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    } else if (isNaN(Number(number))) {\n      enqueueSnackbar('В поле \"номер\" необходимо ввести число!', {\n        variant: \"warning\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    } else {\n      let location = {};\n      location.name = name;\n      location.number = number;\n      if (!!note) location.note = note;\n\n      try {\n        addLocation(location);\n        setOpenAddDialog(false);\n      } catch (err) {\n        console.log({\n          err\n        });\n      }\n    }\n  };\n\n  const handleUpdate = (event, number, name, note, id) => {\n    let location = {};\n    location.id = id;\n    if (!!name) location.name = name;\n    if (!!number) location.number = number;\n    if (!!note) location.note = note;\n    updateLocation(location);\n    setOpenUpdateDialog(false);\n  };\n\n  const handleDeleteWorningClose = action => {\n    setOpenWorning(false);\n    if (action === \"submit\") deleteLocation(parameters);\n  };\n\n  const handleDeleteWorningOpen = params => {\n    setOpenWorning(true);\n    setParameters(Object.assign({}, params.row));\n  };\n\n  function editRow(params) {\n    console.log(\"editRow\", params);\n  }\n\n  const editColumn = {\n    field: \"edit\",\n    headerName: \"Редактировать\",\n    sortable: false,\n    width: 135,\n    renderCell: params => /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"edit\",\n      color: \"primary\",\n      className: classes.iconButton,\n      onClick: () => {\n        console.log({\n          params\n        });\n        handleUpdateDialogOpen(params);\n      },\n      children: /*#__PURE__*/_jsxDEV(EditOutlinedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  };\n  const deleteColumn = {\n    field: \"delete\",\n    headerName: \"Удалить\",\n    sortable: false,\n    renderCell: params => /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"delete\",\n      color: \"secondary\",\n      className: classes.iconButton,\n      onClick: () => handleDeleteWorningOpen(params),\n      children: /*#__PURE__*/_jsxDEV(DeleteForeverOutlinedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)\n  };\n\n  if (locations.columns && locations.columns.length > 0) {\n    locations.columns.push(editColumn);\n    locations.columns.push(deleteColumn);\n  }\n\n  const columns = locations.columns ? locations.columns : [];\n  const rows = locations.rows ? locations.rows : [];\n\n  function CustomToolbar() {\n    return /*#__PURE__*/_jsxDEV(GridToolbarContainer, {\n      className: classes.toolbarContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: \"\\u041C\\u0435\\u0441\\u0442\\u0430 \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0441\\u0442\\u0432\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.tools,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(GridToolbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",\n          children: /*#__PURE__*/_jsxDEV(Fab, {\n            size: \"medium\",\n            color: \"primary\",\n            \"aria-label\": \"add\",\n            className: classes.add,\n            onClick: handleAddDialogOpen,\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LocationAddDialog, {\n        handleClose: handleAddDialogClose,\n        handleCreate: handleCreate,\n        open: openAddDialog\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LocationUpdateDialog, {\n        handleClose: handleUpdateDialogClose,\n        handleUpdate: handleUpdate,\n        open: openUpdateDialog,\n        params: parameters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WorningDialog, {\n        openWorning: openWorning,\n        parameters: parameters,\n        handleClose: handleDeleteWorningClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      height: 700,\n      width: \"100%\",\n      justifyContent: \"space-between\",\n      flexGrow: 1,\n      fontSize: \"18px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(XGrid, {\n      localeText: russian,\n      rowHeight: 50,\n      pageSize: 20,\n      headerHeight: 80,\n      columnBuffer: 2,\n      rowsPerPageOptions: [5, 10, 20, 50, 100],\n      pagination: true,\n      density: \"standard\",\n      rows: rows,\n      columns: columns,\n      disableColumnMenu: true,\n      showColumnRightBorder: true,\n      showCellRightBorder: true,\n      disableExtendRowFullWidth: true,\n      components: {\n        Toolbar: CustomToolbar\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LocationTable, \"1X0d7zPfKMwms1ygljccqofP2JI=\", false, function () {\n  return [useSnackbar, useStyles];\n});\n\n_c = LocationTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationTable\");","map":{"version":3,"sources":["/home/lilit/workspace/vtk/from_scratch_frontend_vtk/src/components/Location/LocationTable.js"],"names":["React","XGrid","Typography","makeStyles","AddIcon","Fab","GridToolbarContainer","GridToolbar","IconButton","DeleteForeverOutlinedIcon","EditOutlinedIcon","russian","Tooltip","LocationAddDialog","LocationUpdateDialog","WorningDialog","useSnackbar","useStyles","toolbarContainer","display","flexDirection","tools","width","paddingLeft","paddingRight","marginBottom","justifyContent","iconButton","backgroundColor","LocationTable","locations","deleteLocation","addLocation","updateLocation","console","log","openAddDialog","setOpenAddDialog","useState","openUpdateDialog","setOpenUpdateDialog","parameters","setParameters","openWorning","setOpenWorning","enqueueSnackbar","classes","handleAddDialogOpen","handleAddDialogClose","event","number","name","note","handleUpdateDialogClose","handleUpdateDialogOpen","params","Object","assign","row","handleCreate","id","variant","anchorOrigin","vertical","horizontal","isNaN","Number","location","err","handleUpdate","handleDeleteWorningClose","action","handleDeleteWorningOpen","editRow","editColumn","field","headerName","sortable","renderCell","deleteColumn","columns","length","push","rows","CustomToolbar","add","height","flexGrow","fontSize","Toolbar"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { XGrid } from \"@material-ui/x-grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { GridToolbarContainer, GridToolbar } from \"@material-ui/x-grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteForeverOutlinedIcon from \"@material-ui/icons/DeleteForeverOutlined\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport russian from \"../../constants/localeTextConstants.js\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport LocationAddDialog from \"./LocationAddDialog\";\nimport LocationUpdateDialog from \"./LocationUpdateDialog\";\nimport WorningDialog from \"../WorningDialog\";\nimport { useSnackbar } from \"notistack\";\n\nconst useStyles = makeStyles({\n  toolbarContainer: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  tools: {\n    width: \"100%\",\n    paddingLeft: 20,\n    paddingRight: 20,\n    marginBottom: 30,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  iconButton: {\n    \"&:hover\": {\n      backgroundColor: \"#bdbdbd\"\n    }\n  }\n});\n\nexport default function LocationTable({\n  locations,\n  deleteLocation,\n  addLocation,\n  updateLocation\n}) {\n  console.log(locations);\n  const [openAddDialog, setOpenAddDialog] = React.useState(false);\n  const [openUpdateDialog, setOpenUpdateDialog] = React.useState(false);\n  const [parameters, setParameters] = React.useState({});\n  const [openWorning, setOpenWorning] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const classes = useStyles();\n\n  const handleAddDialogOpen = () => {\n    setOpenAddDialog(true);\n  };\n\n  const handleAddDialogClose = (event, number, name, note) => {\n    setOpenAddDialog(false);\n  };\n\n  const handleUpdateDialogClose = (event, number, name, note) => {\n    setOpenUpdateDialog(false);\n  };\n  const handleUpdateDialogOpen = params => {\n    setParameters(Object.assign({}, params.row));\n    setOpenUpdateDialog(true);\n  };\n\n  const handleCreate = (event, number, name, note, id) => {\n    console.log({ number }, { name }, { note });\n    if (!number || !name) {\n      enqueueSnackbar(\"Нобходимо заполнить поля Номер и Название\", {\n        variant: \"warning\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    } else if (isNaN(Number(number))) {\n      enqueueSnackbar('В поле \"номер\" необходимо ввести число!', {\n        variant: \"warning\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    } else {\n      let location = {};\n      location.name = name;\n      location.number = number;\n      if (!!note) location.note = note;\n      try {\n        addLocation(location);\n        setOpenAddDialog(false);\n      } catch (err) {\n        console.log({ err });\n      }\n    }\n  };\n  const handleUpdate = (event, number, name, note, id) => {\n    let location = {};\n    location.id = id;\n    if (!!name) location.name = name;\n    if (!!number) location.number = number;\n    if (!!note) location.note = note;\n    updateLocation(location);\n    setOpenUpdateDialog(false);\n  };\n\n  const handleDeleteWorningClose = action => {\n    setOpenWorning(false);\n    if (action === \"submit\") deleteLocation(parameters);\n  };\n\n  const handleDeleteWorningOpen = params => {\n    setOpenWorning(true);\n    setParameters(Object.assign({}, params.row));\n  };\n\n  function editRow(params) {\n    console.log(\"editRow\", params);\n  }\n\n  const editColumn = {\n    field: \"edit\",\n    headerName: \"Редактировать\",\n    sortable: false,\n\n    width: 135,\n    renderCell: (params: CellParams) => (\n      <IconButton\n        aria-label=\"edit\"\n        color=\"primary\"\n        className={classes.iconButton}\n        onClick={() => {\n          console.log({ params });\n          handleUpdateDialogOpen(params);\n        }}\n      >\n        <EditOutlinedIcon />\n      </IconButton>\n    )\n  };\n\n  const deleteColumn = {\n    field: \"delete\",\n    headerName: \"Удалить\",\n    sortable: false,\n    renderCell: (params: CellParams) => (\n      <IconButton\n        aria-label=\"delete\"\n        color=\"secondary\"\n        className={classes.iconButton}\n        onClick={() => handleDeleteWorningOpen(params)}\n      >\n        <DeleteForeverOutlinedIcon />\n      </IconButton>\n    )\n  };\n\n  if (locations.columns && locations.columns.length > 0) {\n    locations.columns.push(editColumn);\n    locations.columns.push(deleteColumn);\n  }\n\n  const columns: ColDef[] = locations.columns ? locations.columns : [];\n  const rows = locations.rows ? locations.rows : [];\n\n  function CustomToolbar() {\n    return (\n      <GridToolbarContainer className={classes.toolbarContainer}>\n        <div>\n          <Typography variant=\"h5\" gutterBottom>\n            Места производства\n          </Typography>\n        </div>\n        <div className={classes.tools}>\n          <div>\n            <GridToolbar />\n          </div>\n          <Tooltip title=\"Создать\">\n            <Fab\n              size=\"medium\"\n              color=\"primary\"\n              aria-label=\"add\"\n              className={classes.add}\n              onClick={handleAddDialogOpen}\n            >\n              <AddIcon />\n            </Fab>\n          </Tooltip>\n        </div>\n        <LocationAddDialog\n          handleClose={handleAddDialogClose}\n          handleCreate={handleCreate}\n          open={openAddDialog}\n        />\n        <LocationUpdateDialog\n          handleClose={handleUpdateDialogClose}\n          handleUpdate={handleUpdate}\n          open={openUpdateDialog}\n          params={parameters}\n        />\n        <WorningDialog\n          openWorning={openWorning}\n          parameters={parameters}\n          handleClose={handleDeleteWorningClose}\n        />\n      </GridToolbarContainer>\n    );\n  }\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        height: 700,\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        flexGrow: 1,\n        fontSize: \"18px\"\n      }}\n    >\n      <XGrid\n        localeText={russian}\n        rowHeight={50}\n        pageSize={20}\n        headerHeight={80}\n        columnBuffer={2}\n        rowsPerPageOptions={[5, 10, 20, 50, 100]}\n        pagination\n        density=\"standard\"\n        rows={rows}\n        columns={columns}\n        disableColumnMenu={true}\n        showColumnRightBorder={true}\n        showCellRightBorder={true}\n        disableExtendRowFullWidth={true}\n        components={{\n          Toolbar: CustomToolbar\n        }}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}