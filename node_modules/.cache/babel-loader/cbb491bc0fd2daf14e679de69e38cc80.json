{"ast":null,"code":"var _jsxFileName = \"/home/lilit/workspace/vtk/from_scratch_frontend_vtk/src/components/Naming/NamingUpdateDialog.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"55ch\"\n    }\n  }\n}));\nexport default function NamingUpdateDialog({\n  handleUpdate,\n  handleClose,\n  open,\n  params,\n  types\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [name, setName] = React.useState(params.name);\n  const [decimalNumber, setDecimalNumber] = React.useState(params.name);\n  const [note, setNote] = React.useState(params.note);\n  const [type, setType] = React.useState(params.type);\n\n  const handleChangeName = event => {\n    setName(event.target.value);\n  };\n\n  const handleChangeDecimalNumber = event => {\n    setDecimalNumber(event.target.value);\n  };\n\n  const handleChangeNote = event => {\n    setNote(event.target.value);\n  };\n\n  const handleChangeType = event => {\n    setType(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"form-dialog-title\",\n      children: \"\\u041D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: \"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u043E\\u0442\\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435 \\u043D\\u0443\\u0436\\u043D\\u044B\\u0435 \\u043F\\u043E\\u043B\\u044F!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.root,\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-multiline-name\",\n          required: true,\n          label: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n          multiline: true,\n          rowsMax: 4,\n          value: name,\n          onChange: handleChangeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-select-type\",\n          select: true,\n          label: \"\\u0422\\u0438\\u043F\",\n          value: type,\n          onChange: handleChangeType,\n          helperText: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0442\\u0438\\u043F\",\n          children: types.map(option => {\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option.name,\n              children: option.name\n            }, option.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-multiline-decNumber\",\n          label: \"\\u0414\\u0435\\u0446\\u0438\\u043C\\u0430\\u043B\\u044C\\u043D\\u044B\\u0439 \\u043D\\u043E\\u043C\\u0435\\u0440\",\n          multiline: true,\n          rowsMax: 4,\n          value: decimalNumber,\n          onChange: handleChangeDecimalNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-multiline-note\",\n          label: \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0447\\u0430\\u043D\\u0438\\u0435\",\n          multiline: true,\n          rowsMax: 4,\n          value: note,\n          onChange: handleChangeNote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        color: \"primary\",\n        children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: ev => handleUpdate(ev, name, note, type, params.id),\n        color: \"primary\",\n        children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NamingUpdateDialog, \"SrXJ5CdcDX+F4hO+p0MhKE8Hbk4=\", false, function () {\n  return [useStyles];\n});\n\n_c = NamingUpdateDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"NamingUpdateDialog\");","map":{"version":3,"sources":["/home/lilit/workspace/vtk/from_scratch_frontend_vtk/src/components/Naming/NamingUpdateDialog.js"],"names":["React","TextField","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","MenuItem","createStyles","makeStyles","Theme","useStyles","theme","root","margin","spacing","width","NamingUpdateDialog","handleUpdate","handleClose","open","params","types","classes","name","setName","useState","decimalNumber","setDecimalNumber","note","setNote","type","setType","handleChangeName","event","target","value","handleChangeDecimalNumber","handleChangeNote","handleChangeType","map","option","id","ev"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \"& .MuiTextField-root\": {\n        margin: theme.spacing(1),\n        width: \"55ch\"\n      }\n    }\n  })\n);\n\nexport default function NamingUpdateDialog({\n  handleUpdate,\n  handleClose,\n  open,\n  params,\n  types\n}) {\n  const classes = useStyles();\n  const [name, setName] = React.useState(params.name);\n  const [decimalNumber, setDecimalNumber] = React.useState(params.name);\n  const [note, setNote] = React.useState(params.note);\n  const [type, setType] = React.useState(params.type);\n\n  const handleChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value);\n  };\n  const handleChangeDecimalNumber = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setDecimalNumber(event.target.value);\n  };\n  const handleChangeNote = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNote(event.target.value);\n  };\n  const handleChangeType = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setType(event.target.value);\n  };\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">Наименование</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Пожалуйста, отредактируйте нужные поля!\n        </DialogContentText>\n        <form className={classes.root} noValidate autoComplete=\"off\">\n          <TextField\n            id=\"standard-multiline-name\"\n            required\n            label=\"Название\"\n            multiline\n            rowsMax={4}\n            value={name}\n            onChange={handleChangeName}\n          />\n          <TextField\n            id=\"standard-select-type\"\n            select\n            label=\"Тип\"\n            value={type}\n            onChange={handleChangeType}\n            helperText=\"Выберите тип\"\n          >\n            {types.map(option => {\n              return (\n                <MenuItem key={option.id} value={option.name}>\n                  {option.name}\n                </MenuItem>\n              );\n            })}\n          </TextField>\n          <TextField\n            id=\"standard-multiline-decNumber\"\n            label=\"Децимальный номер\"\n            multiline\n            rowsMax={4}\n            value={decimalNumber}\n            onChange={handleChangeDecimalNumber}\n          />\n          <TextField\n            id=\"standard-multiline-note\"\n            label=\"Примечание\"\n            multiline\n            rowsMax={4}\n            value={note}\n            onChange={handleChangeNote}\n          />\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Отменить\n        </Button>\n        <Button\n          onClick={ev => handleUpdate(ev, name, note, type, params.id)}\n          color=\"primary\"\n        >\n          Редактировать\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}