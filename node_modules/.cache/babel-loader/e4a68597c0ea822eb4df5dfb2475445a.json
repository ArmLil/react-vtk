{"ast":null,"code":"var _jsxFileName = \"/home/lilit/workspace/vtk/from_scratch_frontend_vtk/src/components/Product/ProductTable.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { XGrid } from \"@material-ui/x-grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { GridToolbarContainer, GridToolbar } from \"@material-ui/x-grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteForeverOutlinedIcon from \"@material-ui/icons/DeleteForeverOutlined\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport russian from \"../../constants/localeTextConstants.js\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport ProductAddDialog from \"./ProductAddDialog\";\nimport ProductUpdateDialog from \"./ProductUpdateDialog\";\nimport WorningDialog from \"../WorningDialog\";\nimport { useSnackbar } from \"notistack\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  toolbarContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 0.5\n  },\n  tableContainer: {\n    display: \"flex\",\n    height: 900,\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    flexGrow: 0.5,\n    fontSize: \"18px\"\n  },\n  tools: {\n    width: \"100%\",\n    paddingLeft: 20,\n    paddingRight: 20,\n    marginBottom: 30,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  iconButton: {\n    \"&:hover\": {\n      backgroundColor: \"#bdbdbd\"\n    }\n  }\n});\nexport default function ProductTable({\n  products,\n  deleteProduct,\n  addProduct,\n  updateProduct\n}) {\n  _s();\n\n  const [openAddDialog, setOpenAddDialog] = React.useState(false);\n  const [openUpdateDialog, setOpenUpdateDialog] = React.useState(false);\n  const [parameters, setParameters] = React.useState({});\n  const [types, setTypes] = React.useState([]);\n  const [namings, setNamings] = React.useState([]);\n  const [openWorning, setOpenWorning] = React.useState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const classes = useStyles();\n\n  const handleAddDialogOpen = async () => {\n    const resTypes = await fetch(\"http://localhost:3001/api/v1/types\");\n    const dataTypes = await res.json();\n    setTypes(dataTypes.types.rows);\n    const resNamings = await fetch(\"http://localhost:3001/api/v1/namings\");\n    const dataNamings = await res.json();\n    setNamings(dataNamings.namings.rows);\n    setOpenAddDialog(true);\n  };\n\n  const handleAddDialogClose = (event, name, note) => {\n    setOpenAddDialog(false);\n  };\n\n  const handleUpdateDialogClose = (event, name, note) => {\n    setOpenUpdateDialog(false);\n  };\n\n  const handleUpdateDialogOpen = async params => {\n    const res = await fetch(\"http://localhost:3001/api/v1/types\");\n    const data = await res.json();\n    setTypes(data.types.rows);\n    setParameters(Object.assign({}, params.row));\n    setOpenUpdateDialog(true);\n  };\n\n  const handleCreate = (event, name, note, type) => {\n    if (!name) {\n      enqueueSnackbar(\"Необходимо заполнить поле Название\", {\n        variant: \"warning\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    } else if (!type) {\n      enqueueSnackbar(\"Необходимо создать тип в списке <<Типы изделий>>, далее выбрать при создании наименования.\", {\n        variant: \"warning\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    } else {\n      let product = {};\n      product.name = name;\n      if (!!note) product.note = note;\n      if (!!type) product.type = type;\n      addProduct(product);\n      setOpenAddDialog(false);\n    }\n  };\n\n  const handleUpdate = (event, name, note, type, id) => {\n    let product = {};\n    product.id = id;\n    if (!!name) product.name = name;\n    if (!!note) product.note = note;\n    if (!!note) product.type = type;\n    updateProduct(product);\n    setOpenUpdateDialog(false);\n  };\n\n  const handleDeleteWorningClose = action => {\n    setOpenWorning(false);\n    if (action === \"submit\") deleteProduct(parameters);\n  };\n\n  const handleDeleteWorningOpen = params => {\n    setOpenWorning(true);\n    setParameters(Object.assign({}, params.row));\n  };\n\n  const editColumn = {\n    field: \"edit\",\n    headerName: \"Редактировать\",\n    sortable: false,\n    width: 135,\n    renderCell: params => /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"edit\",\n      color: \"primary\",\n      className: classes.iconButton,\n      onClick: () => {\n        handleUpdateDialogOpen(params);\n      },\n      children: /*#__PURE__*/_jsxDEV(EditOutlinedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  };\n  const deleteColumn = {\n    field: \"delete\",\n    headerName: \"Удалить\",\n    sortable: false,\n    renderCell: params => /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"delete\",\n      color: \"secondary\",\n      className: classes.iconButton,\n      onClick: () => handleDeleteWorningOpen(params),\n      children: /*#__PURE__*/_jsxDEV(DeleteForeverOutlinedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)\n  };\n\n  if (products.columns && products.columns.length > 0) {\n    products.columns.push(editColumn);\n    products.columns.push(deleteColumn);\n  }\n\n  const columns = products.columns ? products.columns : [];\n  const rows = products.rows ? products.rows : [];\n\n  function CustomToolbar() {\n    return /*#__PURE__*/_jsxDEV(GridToolbarContainer, {\n      className: classes.toolbarContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: \"\\u0418\\u0437\\u0434\\u0435\\u043B\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.tools,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(GridToolbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",\n          children: /*#__PURE__*/_jsxDEV(Fab, {\n            size: \"medium\",\n            color: \"primary\",\n            \"aria-label\": \"add\",\n            className: classes.add,\n            onClick: () => handleAddDialogOpen(),\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProductAddDialog, {\n        handleClose: handleAddDialogClose,\n        handleCreate: handleCreate,\n        open: openAddDialog,\n        types: types\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProductUpdateDialog, {\n        handleClose: handleUpdateDialogClose,\n        handleUpdate: handleUpdate,\n        open: openUpdateDialog,\n        params: parameters,\n        types: types\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WorningDialog, {\n        openWorning: openWorning,\n        parameters: parameters,\n        handleClose: handleDeleteWorningClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.tableContainer,\n    children: /*#__PURE__*/_jsxDEV(XGrid, {\n      localeText: russian,\n      rowHeight: 50,\n      pageSize: 20,\n      headerHeight: 80,\n      columnBuffer: 2,\n      rowsPerPageOptions: [5, 10, 20, 50, 100],\n      pagination: true,\n      density: \"standard\",\n      rows: rows,\n      columns: columns,\n      disableColumnMenu: true,\n      showColumnRightBorder: true,\n      showCellRightBorder: true,\n      disableExtendRowFullWidth: true,\n      components: {\n        Toolbar: CustomToolbar\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductTable, \"WT8FO3WigD66yQjXnyaRRU4KTBc=\", false, function () {\n  return [useSnackbar, useStyles];\n});\n\n_c = ProductTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductTable\");","map":{"version":3,"sources":["/home/lilit/workspace/vtk/from_scratch_frontend_vtk/src/components/Product/ProductTable.js"],"names":["React","XGrid","Typography","makeStyles","AddIcon","Fab","GridToolbarContainer","GridToolbar","IconButton","DeleteForeverOutlinedIcon","EditOutlinedIcon","russian","Tooltip","ProductAddDialog","ProductUpdateDialog","WorningDialog","useSnackbar","useStyles","toolbarContainer","display","flexDirection","flexGrow","tableContainer","height","width","justifyContent","fontSize","tools","paddingLeft","paddingRight","marginBottom","iconButton","backgroundColor","ProductTable","products","deleteProduct","addProduct","updateProduct","openAddDialog","setOpenAddDialog","useState","openUpdateDialog","setOpenUpdateDialog","parameters","setParameters","types","setTypes","namings","setNamings","openWorning","setOpenWorning","enqueueSnackbar","classes","handleAddDialogOpen","resTypes","fetch","dataTypes","res","json","rows","resNamings","dataNamings","handleAddDialogClose","event","name","note","handleUpdateDialogClose","handleUpdateDialogOpen","params","data","Object","assign","row","handleCreate","type","variant","anchorOrigin","vertical","horizontal","product","handleUpdate","id","handleDeleteWorningClose","action","handleDeleteWorningOpen","editColumn","field","headerName","sortable","renderCell","deleteColumn","columns","length","push","CustomToolbar","add","Toolbar"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { XGrid } from \"@material-ui/x-grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { GridToolbarContainer, GridToolbar } from \"@material-ui/x-grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteForeverOutlinedIcon from \"@material-ui/icons/DeleteForeverOutlined\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport russian from \"../../constants/localeTextConstants.js\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport ProductAddDialog from \"./ProductAddDialog\";\nimport ProductUpdateDialog from \"./ProductUpdateDialog\";\nimport WorningDialog from \"../WorningDialog\";\nimport { useSnackbar } from \"notistack\";\n\nconst useStyles = makeStyles({\n  toolbarContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 0.5\n  },\n  tableContainer: {\n    display: \"flex\",\n    height: 900,\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    flexGrow: 0.5,\n    fontSize: \"18px\"\n  },\n  tools: {\n    width: \"100%\",\n    paddingLeft: 20,\n    paddingRight: 20,\n    marginBottom: 30,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  iconButton: {\n    \"&:hover\": {\n      backgroundColor: \"#bdbdbd\"\n    }\n  }\n});\n\nexport default function ProductTable({\n  products,\n  deleteProduct,\n  addProduct,\n  updateProduct\n}) {\n  const [openAddDialog, setOpenAddDialog] = React.useState(false);\n  const [openUpdateDialog, setOpenUpdateDialog] = React.useState(false);\n  const [parameters, setParameters] = React.useState({});\n  const [types, setTypes] = React.useState([]);\n  const [namings, setNamings] = React.useState([]);\n  const [openWorning, setOpenWorning] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const classes = useStyles();\n\n  const handleAddDialogOpen = async () => {\n    const resTypes = await fetch(\"http://localhost:3001/api/v1/types\");\n    const dataTypes = await res.json();\n    setTypes(dataTypes.types.rows);\n    const resNamings = await fetch(\"http://localhost:3001/api/v1/namings\");\n    const dataNamings = await res.json();\n    setNamings(dataNamings.namings.rows);\n    setOpenAddDialog(true);\n  };\n\n  const handleAddDialogClose = (event, name, note) => {\n    setOpenAddDialog(false);\n  };\n\n  const handleUpdateDialogClose = (event, name, note) => {\n    setOpenUpdateDialog(false);\n  };\n  const handleUpdateDialogOpen = async params => {\n    const res = await fetch(\"http://localhost:3001/api/v1/types\");\n    const data = await res.json();\n    setTypes(data.types.rows);\n    setParameters(Object.assign({}, params.row));\n    setOpenUpdateDialog(true);\n  };\n\n  const handleCreate = (event, name, note, type) => {\n    if (!name) {\n      enqueueSnackbar(\"Необходимо заполнить поле Название\", {\n        variant: \"warning\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    } else if (!type) {\n      enqueueSnackbar(\n        \"Необходимо создать тип в списке <<Типы изделий>>, далее выбрать при создании наименования.\",\n        {\n          variant: \"warning\",\n          anchorOrigin: {\n            vertical: \"top\",\n            horizontal: \"center\"\n          }\n        }\n      );\n    } else {\n      let product = {};\n      product.name = name;\n      if (!!note) product.note = note;\n      if (!!type) product.type = type;\n      addProduct(product);\n      setOpenAddDialog(false);\n    }\n  };\n\n  const handleUpdate = (event, name, note, type, id) => {\n    let product = {};\n    product.id = id;\n    if (!!name) product.name = name;\n    if (!!note) product.note = note;\n    if (!!note) product.type = type;\n    updateProduct(product);\n    setOpenUpdateDialog(false);\n  };\n\n  const handleDeleteWorningClose = action => {\n    setOpenWorning(false);\n    if (action === \"submit\") deleteProduct(parameters);\n  };\n\n  const handleDeleteWorningOpen = params => {\n    setOpenWorning(true);\n    setParameters(Object.assign({}, params.row));\n  };\n\n  const editColumn = {\n    field: \"edit\",\n    headerName: \"Редактировать\",\n    sortable: false,\n\n    width: 135,\n    renderCell: (params: CellParams) => (\n      <IconButton\n        aria-label=\"edit\"\n        color=\"primary\"\n        className={classes.iconButton}\n        onClick={() => {\n          handleUpdateDialogOpen(params);\n        }}\n      >\n        <EditOutlinedIcon />\n      </IconButton>\n    )\n  };\n\n  const deleteColumn = {\n    field: \"delete\",\n    headerName: \"Удалить\",\n    sortable: false,\n    renderCell: (params: CellParams) => (\n      <IconButton\n        aria-label=\"delete\"\n        color=\"secondary\"\n        className={classes.iconButton}\n        onClick={() => handleDeleteWorningOpen(params)}\n      >\n        <DeleteForeverOutlinedIcon />\n      </IconButton>\n    )\n  };\n\n  if (products.columns && products.columns.length > 0) {\n    products.columns.push(editColumn);\n    products.columns.push(deleteColumn);\n  }\n\n  const columns: ColDef[] = products.columns ? products.columns : [];\n  const rows = products.rows ? products.rows : [];\n\n  function CustomToolbar() {\n    return (\n      <GridToolbarContainer className={classes.toolbarContainer}>\n        <div>\n          <Typography variant=\"h5\" gutterBottom>\n            Изделия\n          </Typography>\n        </div>\n        <div className={classes.tools}>\n          <div>\n            <GridToolbar />\n          </div>\n          <Tooltip title=\"Создать\">\n            <Fab\n              size=\"medium\"\n              color=\"primary\"\n              aria-label=\"add\"\n              className={classes.add}\n              onClick={() => handleAddDialogOpen()}\n            >\n              <AddIcon />\n            </Fab>\n          </Tooltip>\n        </div>\n        <ProductAddDialog\n          handleClose={handleAddDialogClose}\n          handleCreate={handleCreate}\n          open={openAddDialog}\n          types={types}\n        />\n        <ProductUpdateDialog\n          handleClose={handleUpdateDialogClose}\n          handleUpdate={handleUpdate}\n          open={openUpdateDialog}\n          params={parameters}\n          types={types}\n        />\n        <WorningDialog\n          openWorning={openWorning}\n          parameters={parameters}\n          handleClose={handleDeleteWorningClose}\n        />\n      </GridToolbarContainer>\n    );\n  }\n  return (\n    <div className={classes.tableContainer}>\n      <XGrid\n        localeText={russian}\n        rowHeight={50}\n        pageSize={20}\n        headerHeight={80}\n        columnBuffer={2}\n        rowsPerPageOptions={[5, 10, 20, 50, 100]}\n        pagination\n        density=\"standard\"\n        rows={rows}\n        columns={columns}\n        disableColumnMenu={true}\n        showColumnRightBorder={true}\n        showCellRightBorder={true}\n        disableExtendRowFullWidth={true}\n        components={{\n          Toolbar: CustomToolbar\n        }}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}