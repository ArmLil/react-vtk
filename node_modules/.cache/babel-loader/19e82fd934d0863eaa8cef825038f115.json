{"ast":null,"code":"var _jsxFileName = \"/home/lilit/workspace/vtk/from_sratch_frontend_vtk/src/components/LocationTable.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { XGrid } from \"@material-ui/x-grid\";\nimport { useDemoData } from \"@material-ui/x-grid-data-generator\"; // import Paper from \"@material-ui/core/Paper\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { GridToolbarContainer, GridToolbar } from \"@material-ui/x-grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LocationTable() {\n  _s();\n\n  const {\n    data\n  } = useDemoData({\n    dataSet: \"Commodity\",\n    rowLength: 200,\n    maxColumns: 6\n  });\n  const useStyles = makeStyles({\n    toolbarContainer: {\n      padding: 10,\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    title: {\n      alignSelf: \"flex-start\"\n    }\n  });\n  const classes = useStyles();\n\n  function CustomToolbar() {\n    return /*#__PURE__*/_jsxDEV(GridToolbarContainer, {\n      className: classes.toolbarContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: \"\\u041C\\u0435\\u0441\\u0442\\u0430 \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0441\\u0442\\u0432\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.title,\n        children: /*#__PURE__*/_jsxDEV(GridToolbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      height: 700,\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flexGrow: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(XGrid, {\n        localeText: {\n          columnMenuLabel: \"Меню\",\n          columnMenuSortAsc: \"По возрастанию\",\n          columnMenuSortDesc: \"По убыванию\",\n          columnMenuFilter: \"Фильтр\",\n          columnMenuHideColumn: \"Скрыть\",\n          columnMenuShowColumns: \"Показать колонки\",\n          columnMenuUnsort: \"Не сортировать\",\n          toolbarDensity: \"Плотность\",\n          toolbarDensityLabel: \"Плотность\",\n          toolbarDensityCompact: \"Компактный\",\n          toolbarDensityStandard: \"Стандартный\",\n          toolbarDensityComfortable: \"Комфортный\",\n          toolbarColumns: \"Колонки\",\n          toolbarColumnsLabel: \"Выбрать колонки\",\n          toolbarFilters: \"Фильтры\",\n          toolbarFiltersLabel: \"Показать филтры\",\n          toolbarFiltersTooltipHide: \"Скрыть фильтры\",\n          toolbarFiltersTooltipShow: \"Показать филтры\",\n          toolbarFiltersTooltipActive: count => count !== 1 ? `${count} активные фильтры` : `${count} активный фильтр`,\n          columnsPanelTextFieldLabel: \"Найти колонку\",\n          columnsPanelTextFieldPlaceholder: \"Название колонки\",\n          columnsPanelDragIconLabel: \"Подвижка колонки\",\n          columnsPanelShowAllButton: \"Показать все\",\n          columnsPanelHideAllButton: \"Скрыть все\",\n          filterPanelAddFilter: \"Добавить фильтр\",\n          filterPanelDeleteIconLabel: \"Удалить\",\n          filterPanelOperators: \"Оераторы\",\n          filterPanelOperatorAnd: \"И\",\n          filterPanelOperatorOr: \"Или\",\n          filterPanelColumns: \"Колонки\",\n          filterPanelInputLabel: \"Значение\",\n          filterPanelInputPlaceholder: \"Значение фильтра\",\n          filterOperatorContains: \"включает\",\n          filterOperatorEquals: \"совпадает\",\n          filterOperatorStartsWith: \"в начале\",\n          filterOperatorEndsWith: \"в конце\",\n          filterOperatorIs: \"является\",\n          filterOperatorNot: \"не является\",\n          filterOperatorAfter: \"следует\",\n          filterOperatorOnOrAfter: \"нинешьный или следующий\",\n          filterOperatorBefore: \"предыдущий\",\n          filterOperatorOnOrBefore: \"нинешьный или предыдущий\",\n          columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} активные фильтры` : `${count} активные фильтр`,\n          columnHeaderFiltersLabel: \"показать фильтры\",\n          columnHeaderSortIconLabel: \"Сортировать\",\n          // Rows selected footer text\n          footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rows selected` : `${count.toLocaleString()} row selected`,\n          // Total rows footer text\n          footerTotalRows: \"Total Rows:\",\n          // Pagination footer text\n          footerPaginationRowsPerPage: \"Rows per page:\"\n        },\n        loading: data.rows.length === 0,\n        rowHeight: 38,\n        pageSize: 20,\n        headerHeight: 80,\n        columnBuffer: 2,\n        rowsPerPageOptions: [5, 10, 20, 50, 100],\n        pagination: true,\n        density: \"standard\",\n        ...data,\n        components: {\n          Toolbar: CustomToolbar\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LocationTable, \"HKraZ24DsfWoKJeWbNaMIwIjRxw=\", true, function () {\n  return [useDemoData];\n});\n\n_c = LocationTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationTable\");","map":{"version":3,"sources":["/home/lilit/workspace/vtk/from_sratch_frontend_vtk/src/components/LocationTable.js"],"names":["React","XGrid","useDemoData","Typography","makeStyles","GridToolbarContainer","GridToolbar","LocationTable","data","dataSet","rowLength","maxColumns","useStyles","toolbarContainer","padding","display","flexDirection","title","alignSelf","classes","CustomToolbar","height","width","flexGrow","columnMenuLabel","columnMenuSortAsc","columnMenuSortDesc","columnMenuFilter","columnMenuHideColumn","columnMenuShowColumns","columnMenuUnsort","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","count","columnsPanelTextFieldLabel","columnsPanelTextFieldPlaceholder","columnsPanelDragIconLabel","columnsPanelShowAllButton","columnsPanelHideAllButton","filterPanelAddFilter","filterPanelDeleteIconLabel","filterPanelOperators","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","filterPanelInputLabel","filterPanelInputPlaceholder","filterOperatorContains","filterOperatorEquals","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIs","filterOperatorNot","filterOperatorAfter","filterOperatorOnOrAfter","filterOperatorBefore","filterOperatorOnOrBefore","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerRowSelected","toLocaleString","footerTotalRows","footerPaginationRowsPerPage","rows","length","Toolbar"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { XGrid } from \"@material-ui/x-grid\";\nimport { useDemoData } from \"@material-ui/x-grid-data-generator\";\n// import Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { GridToolbarContainer, GridToolbar } from \"@material-ui/x-grid\";\n\nexport default function LocationTable() {\n  const { data } = useDemoData({\n    dataSet: \"Commodity\",\n    rowLength: 200,\n    maxColumns: 6\n  });\n  const useStyles = makeStyles({\n    toolbarContainer: {\n      padding: 10,\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    title: {\n      alignSelf: \"flex-start\"\n    }\n  });\n\n  const classes = useStyles();\n\n  function CustomToolbar() {\n    return (\n      <GridToolbarContainer className={classes.toolbarContainer}>\n        <div>\n          <Typography variant=\"h5\" gutterBottom>\n            Места производства\n          </Typography>\n        </div>\n        <div className={classes.title}>\n          <GridToolbar />\n        </div>\n      </GridToolbarContainer>\n    );\n  }\n  return (\n    <div style={{ display: \"flex\", height: 700, width: \"100%\" }}>\n      <div style={{ flexGrow: 1 }}>\n        <XGrid\n          localeText={{\n            columnMenuLabel: \"Меню\",\n            columnMenuSortAsc: \"По возрастанию\",\n            columnMenuSortDesc: \"По убыванию\",\n            columnMenuFilter: \"Фильтр\",\n            columnMenuHideColumn: \"Скрыть\",\n            columnMenuShowColumns: \"Показать колонки\",\n            columnMenuUnsort: \"Не сортировать\",\n            toolbarDensity: \"Плотность\",\n            toolbarDensityLabel: \"Плотность\",\n            toolbarDensityCompact: \"Компактный\",\n            toolbarDensityStandard: \"Стандартный\",\n            toolbarDensityComfortable: \"Комфортный\",\n            toolbarColumns: \"Колонки\",\n            toolbarColumnsLabel: \"Выбрать колонки\",\n            toolbarFilters: \"Фильтры\",\n            toolbarFiltersLabel: \"Показать филтры\",\n            toolbarFiltersTooltipHide: \"Скрыть фильтры\",\n            toolbarFiltersTooltipShow: \"Показать филтры\",\n            toolbarFiltersTooltipActive: count =>\n              count !== 1\n                ? `${count} активные фильтры`\n                : `${count} активный фильтр`,\n            columnsPanelTextFieldLabel: \"Найти колонку\",\n            columnsPanelTextFieldPlaceholder: \"Название колонки\",\n            columnsPanelDragIconLabel: \"Подвижка колонки\",\n            columnsPanelShowAllButton: \"Показать все\",\n            columnsPanelHideAllButton: \"Скрыть все\",\n            filterPanelAddFilter: \"Добавить фильтр\",\n            filterPanelDeleteIconLabel: \"Удалить\",\n            filterPanelOperators: \"Оераторы\",\n            filterPanelOperatorAnd: \"И\",\n            filterPanelOperatorOr: \"Или\",\n            filterPanelColumns: \"Колонки\",\n            filterPanelInputLabel: \"Значение\",\n            filterPanelInputPlaceholder: \"Значение фильтра\",\n            filterOperatorContains: \"включает\",\n            filterOperatorEquals: \"совпадает\",\n            filterOperatorStartsWith: \"в начале\",\n            filterOperatorEndsWith: \"в конце\",\n            filterOperatorIs: \"является\",\n            filterOperatorNot: \"не является\",\n            filterOperatorAfter: \"следует\",\n            filterOperatorOnOrAfter: \"нинешьный или следующий\",\n            filterOperatorBefore: \"предыдущий\",\n            filterOperatorOnOrBefore: \"нинешьный или предыдущий\",\n            columnHeaderFiltersTooltipActive: count =>\n              count !== 1\n                ? `${count} активные фильтры`\n                : `${count} активные фильтр`,\n            columnHeaderFiltersLabel: \"показать фильтры\",\n            columnHeaderSortIconLabel: \"Сортировать\",\n\n            // Rows selected footer text\n            footerRowSelected: count =>\n              count !== 1\n                ? `${count.toLocaleString()} rows selected`\n                : `${count.toLocaleString()} row selected`,\n\n            // Total rows footer text\n            footerTotalRows: \"Total Rows:\",\n\n            // Pagination footer text\n            footerPaginationRowsPerPage: \"Rows per page:\"\n          }}\n          loading={data.rows.length === 0}\n          rowHeight={38}\n          pageSize={20}\n          headerHeight={80}\n          columnBuffer={2}\n          rowsPerPageOptions={[5, 10, 20, 50, 100]}\n          pagination\n          density=\"standard\"\n          {...data}\n          components={{\n            Toolbar: CustomToolbar\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}