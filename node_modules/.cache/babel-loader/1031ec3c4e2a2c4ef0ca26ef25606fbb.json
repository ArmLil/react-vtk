{"ast":null,"code":"var _jsxFileName = \"/home/lilit/workspace/vtk/from_scratch_frontend_vtk/src/components/Naming/NamingTable.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { XGrid } from \"@material-ui/x-grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { GridToolbarContainer, GridToolbar } from \"@material-ui/x-grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteForeverOutlinedIcon from \"@material-ui/icons/DeleteForeverOutlined\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport russian from \"../../constants/localeTextConstants.js\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport NamingAddDialog from \"./NamingAddDialog\";\nimport NamingUpdateDialog from \"./NamingUpdateDialog\";\nimport WorningDialog from \"../WorningDialog\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSnackbar } from \"notistack\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  toolbarContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 0.5\n  },\n  tableContainer: {\n    display: \"flex\",\n    height: \"85vh\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    flexGrow: 0.5,\n    fontSize: \"18px\"\n  },\n  tools: {\n    width: \"100%\",\n    paddingLeft: 20,\n    paddingRight: 20,\n    marginBottom: 30,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  iconButton: {\n    \"&:hover\": {\n      backgroundColor: \"#bdbdbd\"\n    }\n  },\n  root: {\n    \"& .MuiDataGrid-columnsContainer\": {\n      backgroundColor: \"#e8eaf6\",\n      border: \"#bdbdbd solid 1px\"\n    },\n    \"& .MuiDataGrid-colCellTitle\": {\n      fontWeight: \"bold\"\n    }\n  }\n});\nexport default function NamingTable({\n  namings,\n  deleteNaming,\n  addNaming,\n  updateNaming\n}) {\n  _s();\n\n  const [openAddDialog, setOpenAddDialog] = React.useState(false);\n  const [openUpdateDialog, setOpenUpdateDialog] = React.useState(false);\n  const [parameters, setParameters] = React.useState({});\n  const [types, setTypes] = React.useState([]);\n  const [openWorning, setOpenWorning] = React.useState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const classes = useStyles();\n\n  const handleAddDialogOpen = async () => {\n    const res = await fetch(\"http://localhost:3001/api/v1/types\");\n    const data = await res.json();\n    setTypes(data.types.rows);\n    setOpenAddDialog(true);\n  };\n\n  const handleAddDialogClose = (event, name, note) => {\n    setOpenAddDialog(false);\n  };\n\n  const handleUpdateDialogClose = (event, name, note) => {\n    setOpenUpdateDialog(false);\n  };\n\n  const handleUpdateDialogOpen = async params => {\n    const res = await fetch(\"http://localhost:3001/api/v1/types\");\n    const data = await res.json();\n    setTypes(data.types.rows);\n    setParameters(Object.assign({}, params.row));\n    setOpenUpdateDialog(true);\n  };\n\n  const handleCreate = (event, decimalNumber, name, note, type) => {\n    if (!name) {\n      enqueueSnackbar(\"Необходимо заполнить поле Название\", {\n        variant: \"warning\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    } else if (!type) {\n      enqueueSnackbar(\"Необходимо создать тип в списке <<Типы изделий>>, далее выбрать при создании наименования.\", {\n        variant: \"warning\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    } else {\n      let naming = {};\n      naming.name = name;\n      if (!!note) naming.note = note;\n      if (!!type) naming.type = type;\n      if (!!decimalNumber) naming.decimalNumber = decimalNumber;\n      addNaming(naming);\n      setOpenAddDialog(false);\n    }\n  };\n\n  const handleUpdate = (ev, name, decimalNumber, note, type, id) => {\n    let naming = {};\n    naming.id = id;\n    if (!!name) naming.name = name;\n    if (!!note) naming.note = note;\n    if (!!note) naming.type = type;\n    updateNaming(naming);\n    setOpenUpdateDialog(false);\n  };\n\n  const handleDeleteWorningClose = action => {\n    setOpenWorning(false);\n    if (action === \"submit\") deleteNaming(parameters);\n  };\n\n  const handleDeleteWorningOpen = params => {\n    setOpenWorning(true);\n    setParameters(Object.assign({}, params.row));\n  };\n\n  const editColumn = {\n    field: \"edit\",\n    headerName: \"Редактировать\",\n    sortable: false,\n    width: 135,\n    renderCell: params => /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"edit\",\n      color: \"primary\",\n      className: classes.iconButton,\n      onClick: () => {\n        handleUpdateDialogOpen(params);\n      },\n      children: /*#__PURE__*/_jsxDEV(EditOutlinedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)\n  };\n  const deleteColumn = {\n    field: \"delete\",\n    headerName: \"Удалить\",\n    sortable: false,\n    renderCell: params => /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"delete\",\n      color: \"secondary\",\n      className: classes.iconButton,\n      onClick: () => handleDeleteWorningOpen(params),\n      children: /*#__PURE__*/_jsxDEV(DeleteForeverOutlinedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)\n  };\n\n  if (namings.columns && namings.columns.length > 0) {\n    namings.columns.push(editColumn);\n    namings.columns.push(deleteColumn);\n  }\n\n  const columns = namings.columns ? namings.columns : [];\n  const rows = namings.rows ? namings.rows : [];\n\n  function CustomToolbar() {\n    return /*#__PURE__*/_jsxDEV(GridToolbarContainer, {\n      className: classes.toolbarContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: \"\\u041D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.tools,\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043D\\u043E\\u0432\\u044B\\u0439 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.add,\n            onClick: handleAddDialogOpen,\n            children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(GridToolbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NamingAddDialog, {\n        handleClose: handleAddDialogClose,\n        handleCreate: handleCreate,\n        open: openAddDialog,\n        types: types\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NamingUpdateDialog, {\n        handleClose: handleUpdateDialogClose,\n        handleUpdate: handleUpdate,\n        open: openUpdateDialog,\n        params: parameters,\n        types: types\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WorningDialog, {\n        openWorning: openWorning,\n        parameters: parameters,\n        handleClose: handleDeleteWorningClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.tableContainer,\n    children: /*#__PURE__*/_jsxDEV(XGrid, {\n      className: classes.root,\n      localeText: russian,\n      rowHeight: 50,\n      pageSize: 20,\n      headerHeight: 60,\n      columnBuffer: 2,\n      rowsPerPageOptions: [5, 10, 20, 50, 100],\n      pagination: true,\n      density: \"standard\",\n      rows: rows,\n      columns: columns,\n      disableColumnMenu: true,\n      showColumnRightBorder: true,\n      showCellRightBorder: true,\n      disableExtendRowFullWidth: true,\n      components: {\n        Toolbar: CustomToolbar\n      },\n      sortModel: [{\n        field: \"name\",\n        sort: \"asc\"\n      }],\n      checkboxSelection: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NamingTable, \"/d4grLZZpNdjeqqPp9OWCq/Lnho=\", false, function () {\n  return [useSnackbar, useStyles];\n});\n\n_c = NamingTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"NamingTable\");","map":{"version":3,"sources":["/home/lilit/workspace/vtk/from_scratch_frontend_vtk/src/components/Naming/NamingTable.js"],"names":["React","XGrid","Typography","makeStyles","AddIcon","Fab","GridToolbarContainer","GridToolbar","IconButton","DeleteForeverOutlinedIcon","EditOutlinedIcon","russian","Tooltip","NamingAddDialog","NamingUpdateDialog","WorningDialog","Button","useSnackbar","useStyles","toolbarContainer","display","flexDirection","flexGrow","tableContainer","height","width","justifyContent","fontSize","tools","paddingLeft","paddingRight","marginBottom","iconButton","backgroundColor","root","border","fontWeight","NamingTable","namings","deleteNaming","addNaming","updateNaming","openAddDialog","setOpenAddDialog","useState","openUpdateDialog","setOpenUpdateDialog","parameters","setParameters","types","setTypes","openWorning","setOpenWorning","enqueueSnackbar","classes","handleAddDialogOpen","res","fetch","data","json","rows","handleAddDialogClose","event","name","note","handleUpdateDialogClose","handleUpdateDialogOpen","params","Object","assign","row","handleCreate","decimalNumber","type","variant","anchorOrigin","vertical","horizontal","naming","handleUpdate","ev","id","handleDeleteWorningClose","action","handleDeleteWorningOpen","editColumn","field","headerName","sortable","renderCell","deleteColumn","columns","length","push","CustomToolbar","add","Toolbar","sort"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { XGrid } from \"@material-ui/x-grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { GridToolbarContainer, GridToolbar } from \"@material-ui/x-grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteForeverOutlinedIcon from \"@material-ui/icons/DeleteForeverOutlined\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport russian from \"../../constants/localeTextConstants.js\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport NamingAddDialog from \"./NamingAddDialog\";\nimport NamingUpdateDialog from \"./NamingUpdateDialog\";\nimport WorningDialog from \"../WorningDialog\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSnackbar } from \"notistack\";\n\nconst useStyles = makeStyles({\n  toolbarContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 0.5\n  },\n  tableContainer: {\n    display: \"flex\",\n    height: \"85vh\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    flexGrow: 0.5,\n    fontSize: \"18px\"\n  },\n  tools: {\n    width: \"100%\",\n    paddingLeft: 20,\n    paddingRight: 20,\n    marginBottom: 30,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  iconButton: {\n    \"&:hover\": {\n      backgroundColor: \"#bdbdbd\"\n    }\n  },\n  root: {\n    \"& .MuiDataGrid-columnsContainer\": {\n      backgroundColor: \"#e8eaf6\",\n      border: \"#bdbdbd solid 1px\"\n    },\n    \"& .MuiDataGrid-colCellTitle\": {\n      fontWeight: \"bold\"\n    }\n  }\n});\n\nexport default function NamingTable({\n  namings,\n  deleteNaming,\n  addNaming,\n  updateNaming\n}) {\n  const [openAddDialog, setOpenAddDialog] = React.useState(false);\n  const [openUpdateDialog, setOpenUpdateDialog] = React.useState(false);\n  const [parameters, setParameters] = React.useState({});\n  const [types, setTypes] = React.useState([]);\n  const [openWorning, setOpenWorning] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const classes = useStyles();\n\n  const handleAddDialogOpen = async () => {\n    const res = await fetch(\"http://localhost:3001/api/v1/types\");\n    const data = await res.json();\n    setTypes(data.types.rows);\n    setOpenAddDialog(true);\n  };\n\n  const handleAddDialogClose = (event, name, note) => {\n    setOpenAddDialog(false);\n  };\n\n  const handleUpdateDialogClose = (event, name, note) => {\n    setOpenUpdateDialog(false);\n  };\n  const handleUpdateDialogOpen = async params => {\n    const res = await fetch(\"http://localhost:3001/api/v1/types\");\n    const data = await res.json();\n    setTypes(data.types.rows);\n    setParameters(Object.assign({}, params.row));\n    setOpenUpdateDialog(true);\n  };\n\n  const handleCreate = (event, decimalNumber, name, note, type) => {\n    if (!name) {\n      enqueueSnackbar(\"Необходимо заполнить поле Название\", {\n        variant: \"warning\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    } else if (!type) {\n      enqueueSnackbar(\n        \"Необходимо создать тип в списке <<Типы изделий>>, далее выбрать при создании наименования.\",\n        {\n          variant: \"warning\",\n          anchorOrigin: {\n            vertical: \"top\",\n            horizontal: \"center\"\n          }\n        }\n      );\n    } else {\n      let naming = {};\n      naming.name = name;\n      if (!!note) naming.note = note;\n      if (!!type) naming.type = type;\n      if (!!decimalNumber) naming.decimalNumber = decimalNumber;\n      addNaming(naming);\n      setOpenAddDialog(false);\n    }\n  };\n\n  const handleUpdate = (ev, name, decimalNumber, note, type, id) => {\n    let naming = {};\n    naming.id = id;\n    if (!!name) naming.name = name;\n    if (!!note) naming.note = note;\n    if (!!note) naming.type = type;\n    updateNaming(naming);\n    setOpenUpdateDialog(false);\n  };\n\n  const handleDeleteWorningClose = action => {\n    setOpenWorning(false);\n    if (action === \"submit\") deleteNaming(parameters);\n  };\n\n  const handleDeleteWorningOpen = params => {\n    setOpenWorning(true);\n    setParameters(Object.assign({}, params.row));\n  };\n\n  const editColumn = {\n    field: \"edit\",\n    headerName: \"Редактировать\",\n    sortable: false,\n\n    width: 135,\n    renderCell: (params: CellParams) => (\n      <IconButton\n        aria-label=\"edit\"\n        color=\"primary\"\n        className={classes.iconButton}\n        onClick={() => {\n          handleUpdateDialogOpen(params);\n        }}\n      >\n        <EditOutlinedIcon />\n      </IconButton>\n    )\n  };\n\n  const deleteColumn = {\n    field: \"delete\",\n    headerName: \"Удалить\",\n    sortable: false,\n    renderCell: (params: CellParams) => (\n      <IconButton\n        aria-label=\"delete\"\n        color=\"secondary\"\n        className={classes.iconButton}\n        onClick={() => handleDeleteWorningOpen(params)}\n      >\n        <DeleteForeverOutlinedIcon />\n      </IconButton>\n    )\n  };\n\n  if (namings.columns && namings.columns.length > 0) {\n    namings.columns.push(editColumn);\n    namings.columns.push(deleteColumn);\n  }\n\n  const columns: ColDef[] = namings.columns ? namings.columns : [];\n  const rows = namings.rows ? namings.rows : [];\n\n  function CustomToolbar() {\n    return (\n      <GridToolbarContainer className={classes.toolbarContainer}>\n        <div>\n          <Typography variant=\"h5\" gutterBottom>\n            Наименования\n          </Typography>\n        </div>\n        <div className={classes.tools}>\n          <Tooltip title=\"Создать новый элемент\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.add}\n              onClick={handleAddDialogOpen}\n            >\n              Создать\n            </Button>\n          </Tooltip>\n          <div>\n            <GridToolbar />\n          </div>\n        </div>\n        <NamingAddDialog\n          handleClose={handleAddDialogClose}\n          handleCreate={handleCreate}\n          open={openAddDialog}\n          types={types}\n        />\n        <NamingUpdateDialog\n          handleClose={handleUpdateDialogClose}\n          handleUpdate={handleUpdate}\n          open={openUpdateDialog}\n          params={parameters}\n          types={types}\n        />\n        <WorningDialog\n          openWorning={openWorning}\n          parameters={parameters}\n          handleClose={handleDeleteWorningClose}\n        />\n      </GridToolbarContainer>\n    );\n  }\n  return (\n    <div className={classes.tableContainer}>\n      <XGrid\n        className={classes.root}\n        localeText={russian}\n        rowHeight={50}\n        pageSize={20}\n        headerHeight={60}\n        columnBuffer={2}\n        rowsPerPageOptions={[5, 10, 20, 50, 100]}\n        pagination\n        density=\"standard\"\n        rows={rows}\n        columns={columns}\n        disableColumnMenu={true}\n        showColumnRightBorder={true}\n        showCellRightBorder={true}\n        disableExtendRowFullWidth={true}\n        components={{\n          Toolbar: CustomToolbar\n        }}\n        sortModel={[\n          {\n            field: \"name\",\n            sort: \"asc\"\n          }\n        ]}\n        checkboxSelection\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}