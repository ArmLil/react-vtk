{"ast":null,"code":"var _jsxFileName = \"/home/lilit/workspace/vtk/from_scratch_frontend_vtk/src/components/Product/ProductTable.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { XGrid } from \"@material-ui/x-grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { GridToolbarContainer, GridToolbar } from \"@material-ui/x-grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteForeverOutlinedIcon from \"@material-ui/icons/DeleteForeverOutlined\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport russian from \"../../constants/localeTextConstants.js\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport ProductAddDialog from \"./ProductAddDialog\";\nimport ProductUpdateDialog from \"./ProductUpdateDialog\";\nimport WorningDialog from \"../WorningDialog\";\nimport { useSnackbar } from \"notistack\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  toolbarContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 0.5\n  },\n  tableContainer: {\n    display: \"flex\",\n    height: 900,\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    flexGrow: 0.5,\n    fontSize: \"18px\"\n  },\n  tools: {\n    width: \"100%\",\n    paddingLeft: 20,\n    paddingRight: 20,\n    marginBottom: 30,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  iconButton: {\n    \"&:hover\": {\n      backgroundColor: \"#bdbdbd\"\n    }\n  }\n});\nexport default function ProductTable({\n  products,\n  deleteProduct,\n  addProduct,\n  updateProduct\n}) {\n  _s();\n\n  const [openAddDialog, setOpenAddDialog] = React.useState(false);\n  const [openUpdateDialog, setOpenUpdateDialog] = React.useState(false);\n  const [parameters, setParameters] = React.useState({});\n  const [namings, setNamings] = React.useState([]);\n  const [decimalNumbers, setDecimalNumbers] = React.useState([]);\n  const [locations, setLocations] = React.useState([]);\n  const [notes, setNotes] = React.useState([]);\n  const [employees, setEmployees] = React.useState([]);\n  const [openWorning, setOpenWorning] = React.useState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const classes = useStyles();\n  React.useEffect(() => {\n    const setItemsStates = async () => {\n      const resNamings = await fetch(\"http://localhost:3001/api/v1/namings\");\n      const dataNamings = await resNamings.json();\n      setNamings(dataNamings.namings.rows);\n      const resDecimalNumbers = await fetch(\"http://localhost:3001/api/v1/decimalNumbers\");\n      const dataDecimalNumbers = await resDecimalNumbers.json();\n      setDecimalNumbers(dataDecimalNumbers.decimalNumbers.rows);\n      const resLocations = await fetch(\"http://localhost:3001/api/v1/locations\");\n      const dataLocations = await resLocations.json();\n      setLocations(dataLocations.locations.rows);\n      const resNotes = await fetch(\"http://localhost:3001/api/v1/notes\");\n      const dataNotes = await resNotes.json();\n      setNotes(dataNotes.notes.rows);\n      const resEmployees = await fetch(\"http://localhost:3001/api/v1/employees\");\n      const dataEmployees = await resEmployees.json();\n      setEmployees(dataEmployees.employees.rows);\n    };\n\n    setItemsStates();\n  }, []);\n\n  const handleAddDialogOpen = async () => {\n    setOpenAddDialog(true);\n  };\n\n  const handleUpdateDialogOpen = async params => {\n    setParameters(Object.assign({}, params.row));\n    setOpenUpdateDialog(true);\n  };\n\n  const showNotification = text => {\n    enqueueSnackbar(text, {\n      variant: \"warning\",\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      }\n    });\n  };\n\n  const handleCreate = (event, product) => {\n    if (!product.namingId) showNotification(\"Необходимо выбрать Наименование.\");else if (!product.locationId) showNotification(\"Необходимо выбрать Место производства.\");else {\n      addProduct(product);\n      setOpenAddDialog(false);\n    }\n  };\n\n  const handleUpdate = (event, product) => {\n    updateProduct(product);\n    setOpenUpdateDialog(false);\n  };\n\n  const handleDeleteWorningClose = action => {\n    setOpenWorning(false);\n    if (action === \"submit\") deleteProduct(parameters);\n  };\n\n  const handleDeleteWorningOpen = params => {\n    setOpenWorning(true);\n    setParameters(Object.assign({}, params.row));\n  };\n\n  const editColumn = {\n    field: \"edit\",\n    headerName: \"Редактировать\",\n    sortable: false,\n    width: 135,\n    renderCell: params => /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"edit\",\n      color: \"primary\",\n      className: classes.iconButton,\n      onClick: () => {\n        console.log(params);\n        params.map(param => {\n          console.log({\n            param\n          });\n        });\n        handleUpdateDialogOpen(params);\n      },\n      children: /*#__PURE__*/_jsxDEV(EditOutlinedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)\n  };\n  const deleteColumn = {\n    field: \"delete\",\n    headerName: \"Удалить\",\n    sortable: false,\n    renderCell: params => /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"delete\",\n      color: \"secondary\",\n      className: classes.iconButton,\n      onClick: () => handleDeleteWorningOpen(params),\n      children: /*#__PURE__*/_jsxDEV(DeleteForeverOutlinedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)\n  };\n\n  if (products.columns && products.columns.length > 0) {\n    products.columns.push(editColumn);\n    products.columns.push(deleteColumn);\n  }\n\n  const columns = products.columns ? products.columns : [];\n  const rows = products.rows ? products.rows : [];\n\n  function CustomToolbar() {\n    return /*#__PURE__*/_jsxDEV(GridToolbarContainer, {\n      className: classes.toolbarContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: \"\\u0418\\u0437\\u0434\\u0435\\u043B\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.tools,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(GridToolbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",\n          children: /*#__PURE__*/_jsxDEV(Fab, {\n            size: \"medium\",\n            color: \"primary\",\n            \"aria-label\": \"add\",\n            className: classes.add,\n            onClick: () => handleAddDialogOpen(),\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProductAddDialog, {\n        handleClose: () => setOpenAddDialog(false),\n        handleCreate: handleCreate,\n        open: openAddDialog,\n        namings: namings,\n        locations: locations,\n        decimalNumbers: decimalNumbers,\n        notes: notes,\n        employees: employees\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProductUpdateDialog, {\n        handleClose: () => setOpenUpdateDialog(false),\n        handleUpdate: handleUpdate,\n        open: openUpdateDialog,\n        params: parameters,\n        namings: namings,\n        locations: locations,\n        decimalNumbers: decimalNumbers,\n        notes: notes,\n        employees: employees\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WorningDialog, {\n        openWorning: openWorning,\n        parameters: parameters,\n        handleClose: handleDeleteWorningClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.tableContainer,\n    children: /*#__PURE__*/_jsxDEV(XGrid, {\n      localeText: russian,\n      rowHeight: 50,\n      pageSize: 20,\n      headerHeight: 80,\n      columnBuffer: 2,\n      rowsPerPageOptions: [5, 10, 20, 50, 100],\n      pagination: true,\n      density: \"standard\",\n      rows: rows,\n      columns: columns,\n      disableColumnMenu: true,\n      showColumnRightBorder: true,\n      showCellRightBorder: true,\n      disableExtendRowFullWidth: true,\n      components: {\n        Toolbar: CustomToolbar\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductTable, \"qhDaWH7G5Db29U5K8AD6lE8N/Bg=\", false, function () {\n  return [useSnackbar, useStyles];\n});\n\n_c = ProductTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductTable\");","map":{"version":3,"sources":["/home/lilit/workspace/vtk/from_scratch_frontend_vtk/src/components/Product/ProductTable.js"],"names":["React","XGrid","Typography","makeStyles","AddIcon","Fab","GridToolbarContainer","GridToolbar","IconButton","DeleteForeverOutlinedIcon","EditOutlinedIcon","russian","Tooltip","ProductAddDialog","ProductUpdateDialog","WorningDialog","useSnackbar","useStyles","toolbarContainer","display","flexDirection","flexGrow","tableContainer","height","width","justifyContent","fontSize","tools","paddingLeft","paddingRight","marginBottom","iconButton","backgroundColor","ProductTable","products","deleteProduct","addProduct","updateProduct","openAddDialog","setOpenAddDialog","useState","openUpdateDialog","setOpenUpdateDialog","parameters","setParameters","namings","setNamings","decimalNumbers","setDecimalNumbers","locations","setLocations","notes","setNotes","employees","setEmployees","openWorning","setOpenWorning","enqueueSnackbar","classes","useEffect","setItemsStates","resNamings","fetch","dataNamings","json","rows","resDecimalNumbers","dataDecimalNumbers","resLocations","dataLocations","resNotes","dataNotes","resEmployees","dataEmployees","handleAddDialogOpen","handleUpdateDialogOpen","params","Object","assign","row","showNotification","text","variant","anchorOrigin","vertical","horizontal","handleCreate","event","product","namingId","locationId","handleUpdate","handleDeleteWorningClose","action","handleDeleteWorningOpen","editColumn","field","headerName","sortable","renderCell","console","log","map","param","deleteColumn","columns","length","push","CustomToolbar","add","Toolbar"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { XGrid } from \"@material-ui/x-grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { GridToolbarContainer, GridToolbar } from \"@material-ui/x-grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteForeverOutlinedIcon from \"@material-ui/icons/DeleteForeverOutlined\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport russian from \"../../constants/localeTextConstants.js\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport ProductAddDialog from \"./ProductAddDialog\";\nimport ProductUpdateDialog from \"./ProductUpdateDialog\";\nimport WorningDialog from \"../WorningDialog\";\nimport { useSnackbar } from \"notistack\";\n\nconst useStyles = makeStyles({\n  toolbarContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 0.5\n  },\n  tableContainer: {\n    display: \"flex\",\n    height: 900,\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    flexGrow: 0.5,\n    fontSize: \"18px\"\n  },\n  tools: {\n    width: \"100%\",\n    paddingLeft: 20,\n    paddingRight: 20,\n    marginBottom: 30,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  iconButton: {\n    \"&:hover\": {\n      backgroundColor: \"#bdbdbd\"\n    }\n  }\n});\n\nexport default function ProductTable({\n  products,\n  deleteProduct,\n  addProduct,\n  updateProduct\n}) {\n  const [openAddDialog, setOpenAddDialog] = React.useState(false);\n  const [openUpdateDialog, setOpenUpdateDialog] = React.useState(false);\n  const [parameters, setParameters] = React.useState({});\n  const [namings, setNamings] = React.useState([]);\n  const [decimalNumbers, setDecimalNumbers] = React.useState([]);\n  const [locations, setLocations] = React.useState([]);\n  const [notes, setNotes] = React.useState([]);\n  const [employees, setEmployees] = React.useState([]);\n  const [openWorning, setOpenWorning] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    const setItemsStates = async () => {\n      const resNamings = await fetch(\"http://localhost:3001/api/v1/namings\");\n      const dataNamings = await resNamings.json();\n      setNamings(dataNamings.namings.rows);\n\n      const resDecimalNumbers = await fetch(\n        \"http://localhost:3001/api/v1/decimalNumbers\"\n      );\n      const dataDecimalNumbers = await resDecimalNumbers.json();\n      setDecimalNumbers(dataDecimalNumbers.decimalNumbers.rows);\n\n      const resLocations = await fetch(\n        \"http://localhost:3001/api/v1/locations\"\n      );\n      const dataLocations = await resLocations.json();\n      setLocations(dataLocations.locations.rows);\n\n      const resNotes = await fetch(\"http://localhost:3001/api/v1/notes\");\n      const dataNotes = await resNotes.json();\n      setNotes(dataNotes.notes.rows);\n\n      const resEmployees = await fetch(\n        \"http://localhost:3001/api/v1/employees\"\n      );\n      const dataEmployees = await resEmployees.json();\n      setEmployees(dataEmployees.employees.rows);\n    };\n    setItemsStates();\n  }, []);\n\n  const handleAddDialogOpen = async () => {\n    setOpenAddDialog(true);\n  };\n\n  const handleUpdateDialogOpen = async params => {\n    setParameters(Object.assign({}, params.row));\n    setOpenUpdateDialog(true);\n  };\n\n  const showNotification = text => {\n    enqueueSnackbar(text, {\n      variant: \"warning\",\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      }\n    });\n  };\n\n  const handleCreate = (event, product) => {\n    if (!product.namingId) showNotification(\"Необходимо выбрать Наименование.\");\n    else if (!product.locationId)\n      showNotification(\"Необходимо выбрать Место производства.\");\n    else {\n      addProduct(product);\n      setOpenAddDialog(false);\n    }\n  };\n\n  const handleUpdate = (event, product) => {\n    updateProduct(product);\n    setOpenUpdateDialog(false);\n  };\n\n  const handleDeleteWorningClose = action => {\n    setOpenWorning(false);\n    if (action === \"submit\") deleteProduct(parameters);\n  };\n\n  const handleDeleteWorningOpen = params => {\n    setOpenWorning(true);\n    setParameters(Object.assign({}, params.row));\n  };\n\n  const editColumn = {\n    field: \"edit\",\n    headerName: \"Редактировать\",\n    sortable: false,\n\n    width: 135,\n    renderCell: (params: CellParams) => (\n      <IconButton\n        aria-label=\"edit\"\n        color=\"primary\"\n        className={classes.iconButton}\n        onClick={() => {\n          console.log(params);\n          params.map(param => {\n            console.log({ param });\n          });\n          handleUpdateDialogOpen(params);\n        }}\n      >\n        <EditOutlinedIcon />\n      </IconButton>\n    )\n  };\n\n  const deleteColumn = {\n    field: \"delete\",\n    headerName: \"Удалить\",\n    sortable: false,\n    renderCell: (params: CellParams) => (\n      <IconButton\n        aria-label=\"delete\"\n        color=\"secondary\"\n        className={classes.iconButton}\n        onClick={() => handleDeleteWorningOpen(params)}\n      >\n        <DeleteForeverOutlinedIcon />\n      </IconButton>\n    )\n  };\n\n  if (products.columns && products.columns.length > 0) {\n    products.columns.push(editColumn);\n    products.columns.push(deleteColumn);\n  }\n\n  const columns: ColDef[] = products.columns ? products.columns : [];\n  const rows = products.rows ? products.rows : [];\n\n  function CustomToolbar() {\n    return (\n      <GridToolbarContainer className={classes.toolbarContainer}>\n        <div>\n          <Typography variant=\"h5\" gutterBottom>\n            Изделия\n          </Typography>\n        </div>\n        <div className={classes.tools}>\n          <div>\n            <GridToolbar />\n          </div>\n          <Tooltip title=\"Создать\">\n            <Fab\n              size=\"medium\"\n              color=\"primary\"\n              aria-label=\"add\"\n              className={classes.add}\n              onClick={() => handleAddDialogOpen()}\n            >\n              <AddIcon />\n            </Fab>\n          </Tooltip>\n        </div>\n        <ProductAddDialog\n          handleClose={() => setOpenAddDialog(false)}\n          handleCreate={handleCreate}\n          open={openAddDialog}\n          namings={namings}\n          locations={locations}\n          decimalNumbers={decimalNumbers}\n          notes={notes}\n          employees={employees}\n        />\n        <ProductUpdateDialog\n          handleClose={() => setOpenUpdateDialog(false)}\n          handleUpdate={handleUpdate}\n          open={openUpdateDialog}\n          params={parameters}\n          namings={namings}\n          locations={locations}\n          decimalNumbers={decimalNumbers}\n          notes={notes}\n          employees={employees}\n        />\n        <WorningDialog\n          openWorning={openWorning}\n          parameters={parameters}\n          handleClose={handleDeleteWorningClose}\n        />\n      </GridToolbarContainer>\n    );\n  }\n  return (\n    <div className={classes.tableContainer}>\n      <XGrid\n        localeText={russian}\n        rowHeight={50}\n        pageSize={20}\n        headerHeight={80}\n        columnBuffer={2}\n        rowsPerPageOptions={[5, 10, 20, 50, 100]}\n        pagination\n        density=\"standard\"\n        rows={rows}\n        columns={columns}\n        disableColumnMenu={true}\n        showColumnRightBorder={true}\n        showCellRightBorder={true}\n        disableExtendRowFullWidth={true}\n        components={{\n          Toolbar: CustomToolbar\n        }}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}