{"ast":null,"code":"var _jsxFileName = \"/home/lilit/workspace/vtk/from_scratch_frontend_vtk/src/components/Product/ProductUpdateDialog.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport SelectTextField from \"./SelectTextField\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"55ch\"\n    }\n  }\n}));\nexport default function ProductUpdateDialog({\n  params,\n  handleUpdate,\n  handleClose,\n  open,\n  namings,\n  locations,\n  employees\n}) {\n  _s();\n\n  console.log({\n    params\n  });\n  const classes = useStyles();\n  const [product, setProduct] = React.useState(params || []);\n  const [number, setNumber] = React.useState(params.number || \"\");\n  const [bookingDate, setBookingDate] = React.useState(new Date(params.bookingDate) || \"\");\n  const [note, setNote] = React.useState(params.note || \"\");\n\n  const handleChangeNumber = event => {\n    setNumber(event.target.value);\n    setProduct(Object.assign(product, {\n      number: event.target.value\n    }));\n  };\n\n  const handleChangeBookingDate = event => {\n    console.log(bookingDate);\n    setBookingDate(event.target.value);\n    setProduct(Object.assign(product, {\n      bookingDate: event.target.value\n    }));\n  };\n\n  const handleChangeNote = event => {\n    setNote(event.target.value);\n    setProduct(Object.assign(product, {\n      note: event.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"form-dialog-title\",\n      children: \"\\u0418\\u0437\\u0434\\u0435\\u043B\\u0438\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: \"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u043E\\u0442\\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435 \\u043D\\u0443\\u0436\\u043D\\u044B\\u0435 \\u043F\\u043E\\u043B\\u044F!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.root,\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-number\",\n          label: \"\\u2116\\u043F.\\u043F.\",\n          value: number,\n          onChange: handleChangeNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectTextField, {\n          items: namings,\n          needId: true,\n          value: params.namingId,\n          title: \"\\u041D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\",\n          getItem: item => {\n            setProduct(Object.assign(product, {\n              namingId: item\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          value: bookingDate,\n          label: \"\\u0414\\u0430\\u0442\\u0430 \\u0431\\u0440\\u043E\\u043D\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F\",\n          onChange: handleChangeBookingDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectTextField, {\n          items: locations,\n          needId: true,\n          title: \"\\u041C\\u0435\\u0441\\u0442\\u043E \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0441\\u0442\\u0432\\u0430\",\n          value: params.locationId,\n          getItem: item => {\n            setProduct(Object.assign(product, {\n              locationId: item\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectTextField, {\n          items: employees,\n          needId: true,\n          title: \"\\u0421\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0438\",\n          value: params.employeeId,\n          getItem: item => {\n            setProduct(Object.assign(product, {\n              employeeId: item\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-multiline-description\",\n          label: \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0447\\u0430\\u043D\\u0438\\u0435\",\n          value: note,\n          onChange: handleChangeNote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        color: \"primary\",\n        children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: ev => handleUpdate(ev, product),\n        color: \"primary\",\n        children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductUpdateDialog, \"P0aWsM60+7BVU/TmQA4+pcT7OQQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = ProductUpdateDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductUpdateDialog\");","map":{"version":3,"sources":["/home/lilit/workspace/vtk/from_scratch_frontend_vtk/src/components/Product/ProductUpdateDialog.js"],"names":["React","TextField","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","SelectTextField","createStyles","makeStyles","Theme","useStyles","theme","root","margin","spacing","width","ProductUpdateDialog","params","handleUpdate","handleClose","open","namings","locations","employees","console","log","classes","product","setProduct","useState","number","setNumber","bookingDate","setBookingDate","Date","note","setNote","handleChangeNumber","event","target","value","Object","assign","handleChangeBookingDate","handleChangeNote","namingId","item","locationId","employeeId","ev"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport SelectTextField from \"./SelectTextField\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \"& .MuiTextField-root\": {\n        margin: theme.spacing(1),\n        width: \"55ch\"\n      }\n    }\n  })\n);\n\nexport default function ProductUpdateDialog({\n  params,\n  handleUpdate,\n  handleClose,\n  open,\n  namings,\n  locations,\n  employees\n}) {\n  console.log({ params });\n  const classes = useStyles();\n  const [product, setProduct] = React.useState(params || []);\n  const [number, setNumber] = React.useState(params.number || \"\");\n  const [bookingDate, setBookingDate] = React.useState(\n    new Date(params.bookingDate) || \"\"\n  );\n  const [note, setNote] = React.useState(params.note || \"\");\n\n  const handleChangeNumber = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNumber(event.target.value);\n    setProduct(Object.assign(product, { number: event.target.value }));\n  };\n\n  const handleChangeBookingDate = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    console.log(bookingDate);\n    setBookingDate(event.target.value);\n    setProduct(Object.assign(product, { bookingDate: event.target.value }));\n  };\n  const handleChangeNote = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNote(event.target.value);\n    setProduct(Object.assign(product, { note: event.target.value }));\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">Изделие</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Пожалуйста, отредактируйте нужные поля!\n        </DialogContentText>\n        <form className={classes.root} noValidate autoComplete=\"off\">\n          <TextField\n            id=\"standard-number\"\n            label=\"№п.п.\"\n            value={number}\n            onChange={handleChangeNumber}\n          />\n          <SelectTextField\n            items={namings}\n            needId={true}\n            value={params.namingId}\n            title=\"Наименование\"\n            getItem={item => {\n              setProduct(Object.assign(product, { namingId: item }));\n            }}\n          />\n          <TextField\n            value={bookingDate}\n            label=\"Дата бронирования\"\n            onChange={handleChangeBookingDate}\n          />\n          <SelectTextField\n            items={locations}\n            needId={true}\n            title=\"Место производства\"\n            value={params.locationId}\n            getItem={item => {\n              setProduct(Object.assign(product, { locationId: item }));\n            }}\n          />\n\n          <SelectTextField\n            items={employees}\n            needId={true}\n            title=\"Сотрудники\"\n            value={params.employeeId}\n            getItem={item => {\n              setProduct(Object.assign(product, { employeeId: item }));\n            }}\n          />\n          <TextField\n            id=\"standard-multiline-description\"\n            label=\"Примечание\"\n            value={note}\n            onChange={handleChangeNote}\n          />\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Отменить\n        </Button>\n        <Button onClick={ev => handleUpdate(ev, product)} color=\"primary\">\n          Редактировать\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}