{"ast":null,"code":"var _jsxFileName = \"/home/lilit/workspace/vtk/from_scratch_frontend_vtk/src/components/Product/ProductUpdateDialog.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport SelectTextField from \"./SelectTextField\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"55ch\"\n    }\n  }\n}));\nexport default function ProductUpdateDialog({\n  params,\n  handleUpdate,\n  handleClose,\n  open,\n  namings,\n  decimalNumbers,\n  locations,\n  notes,\n  employees\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [product, setProduct] = React.useState({});\n  const [number, setNumber] = React.useState(params.number);\n  const [namingId, setNamingId] = React.useState(0);\n  const [decimalNumberId, setDecimalNumberId] = React.useState(0);\n  const [locationId, setLocationId] = React.useState(params.locationId);\n  const [noteId, setNoteId] = React.useState(0);\n  const [employeeId, setEmployeeId] = React.useState(0);\n  const [description, setDescription] = React.useState(params.description);\n  console.log({\n    params\n  });\n  React.useEffect(() => {\n    const setItemsNames = () => {\n      if (Object.keys(params).length > 0) {\n        // if (params.number) setNumber(params.number);\n        if (params.namingId) setNamingId(params.namingId);\n        if (params.decimalNumberId) setDecimalNumberId(params.decimalNumberId); // if (params.locationId) setLocationId(params.locationId);\n\n        if (params.noteId) setNoteId(params.noteId);\n        if (params.employeeId) setEmployeeId(params.employeeId);\n        if (params.description == null) params.description = \"\";\n      }\n    };\n\n    setItemsNames();\n  });\n\n  const handleChangeNumber = event => {\n    setNumber(Object.assign(event.target.value));\n    setProduct(Object.assign(product, {\n      number: event.target.value\n    }));\n  };\n\n  const handleChangeDescription = event => {\n    setDescription(event.target.value);\n    setProduct(Object.assign(product, {\n      description: event.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"form-dialog-title\",\n      children: \"\\u0418\\u0437\\u0434\\u0435\\u043B\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: \"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u043E\\u0442\\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435 \\u043D\\u0443\\u0436\\u043D\\u044B\\u0435 \\u043F\\u043E\\u043B\\u044F!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.root,\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-number\",\n          label: \"\\u041D\\u043E\\u043C\\u0435\\u0440\",\n          value: number,\n          onChange: handleChangeNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectTextField, {\n          items: namings,\n          required: true,\n          needId: true,\n          value: namingId,\n          title: \"\\u041D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\",\n          getItem: item => {\n            setProduct(Object.assign(product, {\n              namingId: item\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectTextField, {\n          items: decimalNumbers,\n          needId: true,\n          title: \"\\u0414\\u0435\\u0446\\u0438\\u043C\\u0430\\u043B\\u044C\\u043D\\u044B\\u0439 \\u043D\\u043E\\u043C\\u0435\\u0440\",\n          value: decimalNumberId,\n          getItem: item => {\n            setProduct(Object.assign(product, {\n              decimalNumberId: item\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectTextField, {\n          items: locations,\n          needId: true,\n          title: \"\\u041C\\u0435\\u0441\\u0442\\u043E \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0441\\u0442\\u0432\\u0430\",\n          value: locationId,\n          getItem: item => {\n            setProduct(Object.assign(product, {\n              locationId: item\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectTextField, {\n          items: notes,\n          needId: true,\n          title: \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0447\\u0430\\u043D\\u0438\\u0435\",\n          value: noteId,\n          getItem: item => {\n            setProduct(Object.assign(product, {\n              noteId: item\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectTextField, {\n          items: employees,\n          needId: true,\n          title: \"\\u0421\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0438\",\n          value: employeeId,\n          getItem: item => {\n            setProduct(Object.assign(product, {\n              locationId: item\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-multiline-description\",\n          label: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n          value: description,\n          onChange: handleChangeDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        color: \"primary\",\n        children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: ev => handleUpdate(ev, product),\n        color: \"primary\",\n        children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductUpdateDialog, \"rxx5kSwXLj0be4Zo2QA/awycR20=\", false, function () {\n  return [useStyles];\n});\n\n_c = ProductUpdateDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductUpdateDialog\");","map":{"version":3,"sources":["/home/lilit/workspace/vtk/from_scratch_frontend_vtk/src/components/Product/ProductUpdateDialog.js"],"names":["React","TextField","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","SelectTextField","createStyles","makeStyles","Theme","useStyles","theme","root","margin","spacing","width","ProductUpdateDialog","params","handleUpdate","handleClose","open","namings","decimalNumbers","locations","notes","employees","classes","product","setProduct","useState","number","setNumber","namingId","setNamingId","decimalNumberId","setDecimalNumberId","locationId","setLocationId","noteId","setNoteId","employeeId","setEmployeeId","description","setDescription","console","log","useEffect","setItemsNames","Object","keys","length","handleChangeNumber","event","assign","target","value","handleChangeDescription","item","ev"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport SelectTextField from \"./SelectTextField\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \"& .MuiTextField-root\": {\n        margin: theme.spacing(1),\n        width: \"55ch\"\n      }\n    }\n  })\n);\n\nexport default function ProductUpdateDialog({\n  params,\n  handleUpdate,\n  handleClose,\n  open,\n  namings,\n  decimalNumbers,\n  locations,\n  notes,\n  employees\n}) {\n  const classes = useStyles();\n  const [product, setProduct] = React.useState({});\n  const [number, setNumber] = React.useState(params.number);\n  const [namingId, setNamingId] = React.useState(0);\n  const [decimalNumberId, setDecimalNumberId] = React.useState(0);\n  const [locationId, setLocationId] = React.useState(params.locationId);\n  const [noteId, setNoteId] = React.useState(0);\n  const [employeeId, setEmployeeId] = React.useState(0);\n  const [description, setDescription] = React.useState(params.description);\n\n  console.log({ params });\n\n  React.useEffect(() => {\n    const setItemsNames = () => {\n      if (Object.keys(params).length > 0) {\n        // if (params.number) setNumber(params.number);\n        if (params.namingId) setNamingId(params.namingId);\n        if (params.decimalNumberId) setDecimalNumberId(params.decimalNumberId);\n        // if (params.locationId) setLocationId(params.locationId);\n        if (params.noteId) setNoteId(params.noteId);\n        if (params.employeeId) setEmployeeId(params.employeeId);\n        if (params.description == null) params.description = \"\";\n      }\n    };\n    setItemsNames();\n  });\n\n  const handleChangeNumber = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNumber(Object.assign(event.target.value));\n    setProduct(Object.assign(product, { number: event.target.value }));\n  };\n\n  const handleChangeDescription = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setDescription(event.target.value);\n    setProduct(Object.assign(product, { description: event.target.value }));\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">Изделия</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Пожалуйста, отредактируйте нужные поля!\n        </DialogContentText>\n        <form className={classes.root} noValidate autoComplete=\"off\">\n          <TextField\n            id=\"standard-number\"\n            label=\"Номер\"\n            value={number}\n            onChange={handleChangeNumber}\n          />\n          <SelectTextField\n            items={namings}\n            required={true}\n            needId={true}\n            value={namingId}\n            title=\"Наименование\"\n            getItem={item => {\n              setProduct(Object.assign(product, { namingId: item }));\n            }}\n          />\n          <SelectTextField\n            items={decimalNumbers}\n            needId={true}\n            title=\"Децимальный номер\"\n            value={decimalNumberId}\n            getItem={item => {\n              setProduct(Object.assign(product, { decimalNumberId: item }));\n            }}\n          />\n          <SelectTextField\n            items={locations}\n            needId={true}\n            title=\"Место производства\"\n            value={locationId}\n            getItem={item => {\n              setProduct(Object.assign(product, { locationId: item }));\n            }}\n          />\n          <SelectTextField\n            items={notes}\n            needId={true}\n            title=\"Примечание\"\n            value={noteId}\n            getItem={item => {\n              setProduct(Object.assign(product, { noteId: item }));\n            }}\n          />\n          <SelectTextField\n            items={employees}\n            needId={true}\n            title=\"Сотрудники\"\n            value={employeeId}\n            getItem={item => {\n              setProduct(Object.assign(product, { locationId: item }));\n            }}\n          />\n          <TextField\n            id=\"standard-multiline-description\"\n            label=\"Описание\"\n            value={description}\n            onChange={handleChangeDescription}\n          />\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Отменить\n        </Button>\n        <Button onClick={ev => handleUpdate(ev, product)} color=\"primary\">\n          Редактировать\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}