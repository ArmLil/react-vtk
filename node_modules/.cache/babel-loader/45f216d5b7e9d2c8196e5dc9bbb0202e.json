{"ast":null,"code":"var _jsxFileName = \"/home/lilit/workspace/vtk/from_sratch_frontend_vtk/src/components/LocationTable.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { XGrid } from \"@material-ui/x-grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { GridToolbarContainer, GridToolbar } from \"@material-ui/x-grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteForeverOutlinedIcon from \"@material-ui/icons/DeleteForeverOutlined\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport russian from \"../constants/localeTextConstants.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LocationTable() {\n  _s();\n\n  const useStyles = makeStyles({\n    toolbarContainer: {\n      padding: 10,\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    tools: {\n      width: \"100%\",\n      paddingLeft: 20,\n      paddingRight: 20,\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\"\n    },\n    reduct: {\n      display: \"flex\",\n      justifyContent: \"flex-end\"\n    },\n    iconButton: {\n      \"&:hover\": {\n        backgroundColor: \"#bdbdbd\"\n      }\n    }\n  });\n  const classes = useStyles();\n\n  function updateRow(params) {\n    console.log(\"updateRow\", params);\n  }\n\n  function deleteRow(params) {\n    console.log(\"deleteRow\", params);\n  }\n\n  const columns = [{\n    field: \"id\",\n    headerName: \"ID\"\n  }, {\n    field: \"firstName\",\n    headerName: \"First name\"\n  }, {\n    field: \"lastName\",\n    headerName: \"Last name\"\n  }, {\n    field: \"age\",\n    headerName: \"Age\",\n    type: \"number\"\n  }, {\n    field: \"fullName\",\n    headerName: \"Full name\",\n    description: \"This column has a value getter and is not sortable.\",\n    sortable: false,\n    valueGetter: params => `${params.getValue(\"firstName\") || \"\"} ${params.getValue(\"lastName\") || \"\"}`\n  }, {\n    field: \"delete\",\n    headerName: \"Удалить\",\n    sortable: false,\n    renderCell: params => /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"delete\",\n      color: \"secondary\",\n      className: classes.iconButton,\n      onClick: () => deleteRow(params),\n      children: /*#__PURE__*/_jsxDEV(DeleteForeverOutlinedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }, {\n    field: \"update\",\n    headerName: \"Редактировать\",\n    width: 120,\n    sortable: false,\n    align: \"right\",\n    renderCell: params => /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"edit\",\n      color: \"primary\",\n      className: classes.iconButton,\n      onClick: () => updateRow(params),\n      children: /*#__PURE__*/_jsxDEV(EditOutlinedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)\n  }];\n  const rows = [{\n    id: 1,\n    lastName: \"Snow\",\n    firstName: \"Jon\",\n    age: 35\n  }, {\n    id: 2,\n    lastName: \"Lannister\",\n    firstName: \"Cersei\",\n    age: 42\n  }, {\n    id: 3,\n    lastName: \"Lannister\",\n    firstName: \"Jaime\",\n    age: 45\n  }, {\n    id: 4,\n    lastName: \"Stark\",\n    firstName: \"Arya\",\n    age: 16\n  }, {\n    id: 5,\n    lastName: \"Targaryen\",\n    firstName: \"Daenerys\",\n    age: null\n  }, {\n    id: 6,\n    lastName: \"Melisandre\",\n    firstName: null,\n    age: 150\n  }, {\n    id: 7,\n    lastName: \"Clifford\",\n    firstName: \"Ferrara\",\n    age: 44\n  }, {\n    id: 8,\n    lastName: \"Frances\",\n    firstName: \"Rossini\",\n    age: 36\n  }, {\n    id: 9,\n    lastName: \"Roxie\",\n    firstName: \"Harvey\",\n    age: 65\n  }];\n\n  function CustomToolbar() {\n    return /*#__PURE__*/_jsxDEV(GridToolbarContainer, {\n      className: classes.toolbarContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: \"\\u041C\\u0435\\u0441\\u0442\\u0430 \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0441\\u0442\\u0432\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.tools,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(GridToolbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Fab, {\n          size: \"medium\",\n          color: \"primary\",\n          \"aria-label\": \"add\",\n          className: classes.add,\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      height: 700,\n      width: \"100%\",\n      justifyContent: \"space-between\",\n      flexGrow: 1\n    },\n    children: /*#__PURE__*/_jsxDEV(XGrid, {\n      localeText: russian,\n      rowHeight: 50,\n      pageSize: 20,\n      headerHeight: 80,\n      columnBuffer: 2,\n      rowsPerPageOptions: [5, 10, 20, 50, 100],\n      pagination: true,\n      density: \"standard\",\n      rows: rows,\n      columns: columns,\n      disableColumnMenu: true,\n      showColumnRightBorder: true,\n      showCellRightBorder: true,\n      disableExtendRowFullWidth: true,\n      components: {\n        Toolbar: CustomToolbar\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LocationTable, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", true);\n\n_c = LocationTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationTable\");","map":{"version":3,"sources":["/home/lilit/workspace/vtk/from_sratch_frontend_vtk/src/components/LocationTable.js"],"names":["React","XGrid","Typography","makeStyles","AddIcon","Fab","GridToolbarContainer","GridToolbar","IconButton","DeleteForeverOutlinedIcon","EditOutlinedIcon","russian","LocationTable","useStyles","toolbarContainer","padding","display","flexDirection","tools","width","paddingLeft","paddingRight","justifyContent","reduct","iconButton","backgroundColor","classes","updateRow","params","console","log","deleteRow","columns","field","headerName","type","description","sortable","valueGetter","getValue","renderCell","align","rows","id","lastName","firstName","age","CustomToolbar","add","height","flexGrow","Toolbar"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { XGrid } from \"@material-ui/x-grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { GridToolbarContainer, GridToolbar } from \"@material-ui/x-grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteForeverOutlinedIcon from \"@material-ui/icons/DeleteForeverOutlined\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport russian from \"../constants/localeTextConstants.js\";\n\nexport default function LocationTable() {\n  const useStyles = makeStyles({\n    toolbarContainer: {\n      padding: 10,\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    tools: {\n      width: \"100%\",\n      paddingLeft: 20,\n      paddingRight: 20,\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\"\n    },\n    reduct: {\n      display: \"flex\",\n      justifyContent: \"flex-end\"\n    },\n    iconButton: {\n      \"&:hover\": {\n        backgroundColor: \"#bdbdbd\"\n      }\n    }\n  });\n\n  const classes = useStyles();\n  function updateRow(params) {\n    console.log(\"updateRow\", params);\n  }\n  function deleteRow(params) {\n    console.log(\"deleteRow\", params);\n  }\n\n  const columns: ColDef[] = [\n    { field: \"id\", headerName: \"ID\" },\n    { field: \"firstName\", headerName: \"First name\" },\n    { field: \"lastName\", headerName: \"Last name\" },\n    {\n      field: \"age\",\n      headerName: \"Age\",\n      type: \"number\"\n    },\n    {\n      field: \"fullName\",\n      headerName: \"Full name\",\n      description: \"This column has a value getter and is not sortable.\",\n      sortable: false,\n\n      valueGetter: (params: ValueGetterParams) =>\n        `${params.getValue(\"firstName\") || \"\"} ${params.getValue(\"lastName\") ||\n          \"\"}`\n    },\n\n    {\n      field: \"delete\",\n      headerName: \"Удалить\",\n      sortable: false,\n      renderCell: (params: CellParams) => (\n        <IconButton\n          aria-label=\"delete\"\n          color=\"secondary\"\n          className={classes.iconButton}\n          onClick={() => deleteRow(params)}\n        >\n          <DeleteForeverOutlinedIcon />\n        </IconButton>\n      )\n    },\n    {\n      field: \"update\",\n      headerName: \"Редактировать\",\n      width: 120,\n      sortable: false,\n      align: \"right\",\n\n      renderCell: (params: CellParams) => (\n        <IconButton\n          aria-label=\"edit\"\n          color=\"primary\"\n          className={classes.iconButton}\n          onClick={() => updateRow(params)}\n        >\n          <EditOutlinedIcon />\n        </IconButton>\n      )\n    }\n  ];\n\n  const rows = [\n    { id: 1, lastName: \"Snow\", firstName: \"Jon\", age: 35 },\n    { id: 2, lastName: \"Lannister\", firstName: \"Cersei\", age: 42 },\n    { id: 3, lastName: \"Lannister\", firstName: \"Jaime\", age: 45 },\n    { id: 4, lastName: \"Stark\", firstName: \"Arya\", age: 16 },\n    { id: 5, lastName: \"Targaryen\", firstName: \"Daenerys\", age: null },\n    { id: 6, lastName: \"Melisandre\", firstName: null, age: 150 },\n    { id: 7, lastName: \"Clifford\", firstName: \"Ferrara\", age: 44 },\n    { id: 8, lastName: \"Frances\", firstName: \"Rossini\", age: 36 },\n    { id: 9, lastName: \"Roxie\", firstName: \"Harvey\", age: 65 }\n  ];\n\n  function CustomToolbar() {\n    return (\n      <GridToolbarContainer className={classes.toolbarContainer}>\n        <div>\n          <Typography variant=\"h5\" gutterBottom>\n            Места производства\n          </Typography>\n        </div>\n        <div className={classes.tools}>\n          <div>\n            <GridToolbar />\n          </div>\n          <Fab\n            size=\"medium\"\n            color=\"primary\"\n            aria-label=\"add\"\n            className={classes.add}\n          >\n            <AddIcon />\n          </Fab>\n        </div>\n      </GridToolbarContainer>\n    );\n  }\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        height: 700,\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        flexGrow: 1\n      }}\n    >\n      <XGrid\n        localeText={russian}\n        rowHeight={50}\n        pageSize={20}\n        headerHeight={80}\n        columnBuffer={2}\n        rowsPerPageOptions={[5, 10, 20, 50, 100]}\n        pagination\n        density=\"standard\"\n        rows={rows}\n        columns={columns}\n        disableColumnMenu={true}\n        showColumnRightBorder={true}\n        showCellRightBorder={true}\n        disableExtendRowFullWidth={true}\n        components={{\n          Toolbar: CustomToolbar\n        }}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}