{"ast":null,"code":"var _jsxFileName = \"/home/lilit/workspace/vtk/from_scratch_frontend_vtk/src/components/Product/ProductAddDialog.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"55ch\"\n    }\n  }\n}));\nexport default function NamingAddDialog({\n  handleCreate,\n  handleClose,\n  open,\n  types,\n  namings,\n  decimalNumbers,\n  locations,\n  notes,\n  employees\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [name, setName] = React.useState(\"\");\n  const [naming, setNaming] = React.useState(\"\");\n  const [number, setNumber] = React.useState(\"\");\n  const [decimalNumber, setDecimalNumber] = React.useState(\"\");\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [year, setYear] = React.useState(\"\");\n  const [location, setLocation] = React.useState(\"\");\n  const [type, setType] = React.useState(\"\");\n  const [serialNumber, setSerialNumber] = React.useState(\"\");\n  const [note, setNote] = React.useState(\"\");\n  const [employee, setEmployee] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n\n  const handleChangeName = event => {\n    setName(event.target.value);\n  };\n\n  const handleChangeNote = event => {\n    setNote(event.target.value);\n  };\n\n  const handleChangeType = event => {\n    setType(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"form-dialog-title\",\n      children: \"\\u041D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: \"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u0437\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435 \\u043F\\u043E\\u043B\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.root,\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-multiline-name\",\n          required: true,\n          label: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n          multiline: true,\n          rowsMax: 4,\n          value: name,\n          onChange: handleChangeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-select-type\",\n          select: true,\n          label: \"\\u0422\\u0438\\u043F\",\n          value: type,\n          onChange: handleChangeType,\n          helperText: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0442\\u0438\\u043F\",\n          children: types.map(option => {\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option.name,\n              children: option.name\n            }, option.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-multiline-note\",\n          label: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n          multiline: true,\n          rowsMax: 4,\n          value: note,\n          onChange: handleChangeNote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        color: \"primary\",\n        children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: ev => handleCreate(ev, name, note, type),\n        color: \"primary\",\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NamingAddDialog, \"X64nkByiq5pHlNndRZi3AmjWdmM=\", false, function () {\n  return [useStyles];\n});\n\n_c = NamingAddDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"NamingAddDialog\");","map":{"version":3,"sources":["/home/lilit/workspace/vtk/from_scratch_frontend_vtk/src/components/Product/ProductAddDialog.js"],"names":["React","TextField","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","MenuItem","createStyles","makeStyles","Theme","useStyles","theme","root","margin","spacing","width","NamingAddDialog","handleCreate","handleClose","open","types","namings","decimalNumbers","locations","notes","employees","classes","name","setName","useState","naming","setNaming","number","setNumber","decimalNumber","setDecimalNumber","bookingDate","setBookingDate","year","setYear","location","setLocation","type","setType","serialNumber","setSerialNumber","note","setNote","employee","setEmployee","description","setDescription","handleChangeName","event","target","value","handleChangeNote","handleChangeType","map","option","id","ev"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,KAAnC,QAAgD,0BAAhD;;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,IAC3BJ,YAAY,CAAC;AACXK,EAAAA,IAAI,EAAE;AACJ,4BAAwB;AACtBC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADc;AAEtBC,MAAAA,KAAK,EAAE;AAFe;AADpB;AADK,CAAD,CADc,CAA5B;AAWA,eAAe,SAASC,eAAT,CAAyB;AACtCC,EAAAA,YADsC;AAEtCC,EAAAA,WAFsC;AAGtCC,EAAAA,IAHsC;AAItCC,EAAAA,KAJsC;AAKtCC,EAAAA,OALsC;AAMtCC,EAAAA,cANsC;AAOtCC,EAAAA,SAPsC;AAQtCC,EAAAA,KARsC;AAStCC,EAAAA;AATsC,CAAzB,EAUZ;AAAA;;AACD,QAAMC,OAAO,GAAGhB,SAAS,EAAzB;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkB9B,KAAK,CAAC+B,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBjC,KAAK,CAAC+B,QAAN,CAAe,EAAf,CAA5B;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBnC,KAAK,CAAC+B,QAAN,CAAe,EAAf,CAA5B;AACA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCrC,KAAK,CAAC+B,QAAN,CAAe,EAAf,CAA1C;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCvC,KAAK,CAAC+B,QAAN,CAAe,EAAf,CAAtC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBzC,KAAK,CAAC+B,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0B3C,KAAK,CAAC+B,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkB7C,KAAK,CAAC+B,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAkC/C,KAAK,CAAC+B,QAAN,CAAe,EAAf,CAAxC;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBjD,KAAK,CAAC+B,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BnD,KAAK,CAAC+B,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACqB,WAAD,EAAcC,cAAd,IAAgCrD,KAAK,CAAC+B,QAAN,CAAe,EAAf,CAAtC;;AAEA,QAAMuB,gBAAgB,GAAIC,KAAD,IAAgD;AACvEzB,IAAAA,OAAO,CAACyB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,GAFD;;AAGA,QAAMC,gBAAgB,GAAIH,KAAD,IAAgD;AACvEN,IAAAA,OAAO,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,GAFD;;AAGA,QAAME,gBAAgB,GAAIJ,KAAD,IAAgD;AACvEV,IAAAA,OAAO,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,GAFD;;AAIA,sBACE,QAAC,MAAD;AACE,IAAA,IAAI,EAAEpC,IADR;AAEE,IAAA,OAAO,EAAED,WAFX;AAGE,uBAAgB,mBAHlB;AAAA,4BAKE,QAAC,WAAD;AAAa,MAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,aAAD;AAAA,8BACE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAEQ,OAAO,CAACd,IAAzB;AAA+B,QAAA,UAAU,MAAzC;AAA0C,QAAA,YAAY,EAAC,KAAvD;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,EAAE,EAAC,yBADL;AAEE,UAAA,QAAQ,MAFV;AAGE,UAAA,KAAK,EAAC,kDAHR;AAIE,UAAA,SAAS,MAJX;AAKE,UAAA,OAAO,EAAE,CALX;AAME,UAAA,KAAK,EAAEe,IANT;AAOE,UAAA,QAAQ,EAAEyB;AAPZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE,QAAC,SAAD;AACE,UAAA,EAAE,EAAC,sBADL;AAEE,UAAA,MAAM,MAFR;AAGE,UAAA,KAAK,EAAC,oBAHR;AAIE,UAAA,KAAK,EAAEV,IAJT;AAKE,UAAA,QAAQ,EAAEe,gBALZ;AAME,UAAA,UAAU,EAAC,qEANb;AAAA,oBAQGrC,KAAK,CAACsC,GAAN,CAAUC,MAAM,IAAI;AACnB,gCACE,QAAC,QAAD;AAA0B,cAAA,KAAK,EAAEA,MAAM,CAAChC,IAAxC;AAAA,wBACGgC,MAAM,CAAChC;AADV,eAAegC,MAAM,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD,WANA;AARH;AAAA;AAAA;AAAA;AAAA,gBAVF,eA0BE,QAAC,SAAD;AACE,UAAA,EAAE,EAAC,yBADL;AAEE,UAAA,KAAK,EAAC,kDAFR;AAGE,UAAA,SAAS,MAHX;AAIE,UAAA,OAAO,EAAE,CAJX;AAKE,UAAA,KAAK,EAAEd,IALT;AAME,UAAA,QAAQ,EAAEU;AANZ;AAAA;AAAA;AAAA;AAAA,gBA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eA4CE,QAAC,aAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEtC,WAAjB;AAA8B,QAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AACE,QAAA,OAAO,EAAE2C,EAAE,IAAI5C,YAAY,CAAC4C,EAAD,EAAKlC,IAAL,EAAWmB,IAAX,EAAiBJ,IAAjB,CAD7B;AAEE,QAAA,KAAK,EAAC,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YA5CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0DD;;GA7FuB1B,e;UAWNN,S;;;KAXMM,e","sourcesContent":["import * as React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \"& .MuiTextField-root\": {\n        margin: theme.spacing(1),\n        width: \"55ch\"\n      }\n    }\n  })\n);\n\nexport default function NamingAddDialog({\n  handleCreate,\n  handleClose,\n  open,\n  types,\n  namings,\n  decimalNumbers,\n  locations,\n  notes,\n  employees\n}) {\n  const classes = useStyles();\n  const [name, setName] = React.useState(\"\");\n  const [naming, setNaming] = React.useState(\"\");\n  const [number, setNumber] = React.useState(\"\");\n  const [decimalNumber, setDecimalNumber] = React.useState(\"\");\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [year, setYear] = React.useState(\"\");\n  const [location, setLocation] = React.useState(\"\");\n  const [type, setType] = React.useState(\"\");\n  const [serialNumber, setSerialNumber] = React.useState(\"\");\n  const [note, setNote] = React.useState(\"\");\n  const [employee, setEmployee] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n\n  const handleChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value);\n  };\n  const handleChangeNote = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNote(event.target.value);\n  };\n  const handleChangeType = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setType(event.target.value);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">Наименование</DialogTitle>\n      <DialogContent>\n        <DialogContentText>Пожалуйста, заполните поля</DialogContentText>\n        <form className={classes.root} noValidate autoComplete=\"off\">\n          <TextField\n            id=\"standard-multiline-name\"\n            required\n            label=\"Название\"\n            multiline\n            rowsMax={4}\n            value={name}\n            onChange={handleChangeName}\n          />\n          <TextField\n            id=\"standard-select-type\"\n            select\n            label=\"Тип\"\n            value={type}\n            onChange={handleChangeType}\n            helperText=\"Выберите тип\"\n          >\n            {types.map(option => {\n              return (\n                <MenuItem key={option.id} value={option.name}>\n                  {option.name}\n                </MenuItem>\n              );\n            })}\n          </TextField>\n          <TextField\n            id=\"standard-multiline-note\"\n            label=\"Описание\"\n            multiline\n            rowsMax={4}\n            value={note}\n            onChange={handleChangeNote}\n          />\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Отменить\n        </Button>\n        <Button\n          onClick={ev => handleCreate(ev, name, note, type)}\n          color=\"primary\"\n        >\n          Создать\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}