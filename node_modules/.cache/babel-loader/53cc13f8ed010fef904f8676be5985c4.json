{"ast":null,"code":"var _jsxFileName = \"/home/lilit/workspace/vtk/from_scratch_frontend_vtk/src/components/LocationTable.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { XGrid } from \"@material-ui/x-grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { GridToolbarContainer, GridToolbar } from \"@material-ui/x-grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteForeverOutlinedIcon from \"@material-ui/icons/DeleteForeverOutlined\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport russian from \"../constants/localeTextConstants.js\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport LocationAddDialog from \"./LocationAddDialog\";\nimport { useSnackbar } from \"notistack\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LocationTable({\n  locations,\n  handleDeleteRow,\n  addLocation\n}) {\n  _s();\n\n  console.log(locations);\n  const useStyles = makeStyles({\n    toolbarContainer: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    tools: {\n      width: \"100%\",\n      paddingLeft: 20,\n      paddingRight: 20,\n      marginBottom: 30,\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\"\n    },\n    iconButton: {\n      \"&:hover\": {\n        backgroundColor: \"#bdbdbd\"\n      }\n    }\n  });\n  const classes = useStyles();\n\n  function updateRow(params) {\n    console.log(\"updateRow\", params);\n  }\n\n  const editColumn = {\n    field: \"edit\",\n    headerName: \"Редактировать\",\n    sortable: false,\n    width: 135,\n    renderCell: params => /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"edit\",\n      color: \"primary\",\n      className: classes.iconButton,\n      onClick: () => updateRow(params),\n      children: /*#__PURE__*/_jsxDEV(EditOutlinedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  };\n  const deleteColumn = {\n    field: \"delete\",\n    headerName: \"Удалить\",\n    sortable: false,\n    renderCell: params => /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"delete\",\n      color: \"secondary\",\n      className: classes.iconButton,\n      onClick: () => handleDeleteRow(params.row.id),\n      children: /*#__PURE__*/_jsxDEV(DeleteForeverOutlinedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  };\n\n  if (locations.columns && locations.columns.length > 0) {\n    locations.columns.push(editColumn);\n    locations.columns.push(deleteColumn);\n  }\n\n  const columns = locations.columns ? locations.columns : [];\n  const rows = locations.rows ? locations.rows : [];\n  const [open, setOpen] = React.useState(false);\n  const {\n    enqueueSnackbar,\n    closeSnackbar\n  } = useSnackbar();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, number, name, note) => {\n    setOpen(false);\n  };\n\n  const handleCreate = (event, number, name, note) => {\n    console.log({\n      number\n    }, {\n      name\n    }, {\n      note\n    });\n\n    if (!number || !name) {\n      console.log(\"number is undefined\");\n      enqueueSnackbar(\"Нобходимо заполнить поля Номер и Название\", {\n        variant: \"warning\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    } else {\n      let location = {};\n      location.name = name;\n      location.number = number;\n      if (!!note) location.note = note;\n      console.log(!!note, \"location=\", location);\n      addLocation(location);\n      setOpen(false);\n    }\n  };\n\n  function CustomToolbar() {\n    return /*#__PURE__*/_jsxDEV(GridToolbarContainer, {\n      className: classes.toolbarContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: \"\\u041C\\u0435\\u0441\\u0442\\u0430 \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0441\\u0442\\u0432\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.tools,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(GridToolbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",\n          children: /*#__PURE__*/_jsxDEV(Fab, {\n            size: \"medium\",\n            color: \"primary\",\n            \"aria-label\": \"add\",\n            className: classes.add,\n            onClick: handleClickOpen,\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LocationAddDialog, {\n        handleClose: handleClose,\n        handleCreate: handleCreate,\n        open: open\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      height: 700,\n      width: \"100%\",\n      justifyContent: \"space-between\",\n      flexGrow: 1,\n      fontSize: \"18px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(XGrid, {\n      localeText: russian,\n      rowHeight: 50,\n      pageSize: 20,\n      headerHeight: 80,\n      columnBuffer: 2,\n      rowsPerPageOptions: [5, 10, 20, 50, 100],\n      pagination: true,\n      density: \"standard\",\n      rows: rows,\n      columns: columns,\n      disableColumnMenu: true,\n      showColumnRightBorder: true,\n      showCellRightBorder: true,\n      disableExtendRowFullWidth: true,\n      components: {\n        Toolbar: CustomToolbar\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LocationTable, \"WEJ6Wb80kNcOrII9Lv4P2zJi+vU=\", true, function () {\n  return [useSnackbar];\n});\n\n_c = LocationTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationTable\");","map":{"version":3,"sources":["/home/lilit/workspace/vtk/from_scratch_frontend_vtk/src/components/LocationTable.js"],"names":["React","XGrid","Typography","makeStyles","AddIcon","Fab","GridToolbarContainer","GridToolbar","IconButton","DeleteForeverOutlinedIcon","EditOutlinedIcon","russian","Tooltip","LocationAddDialog","useSnackbar","LocationTable","locations","handleDeleteRow","addLocation","console","log","useStyles","toolbarContainer","display","flexDirection","tools","width","paddingLeft","paddingRight","marginBottom","justifyContent","iconButton","backgroundColor","classes","updateRow","params","editColumn","field","headerName","sortable","renderCell","deleteColumn","row","id","columns","length","push","rows","open","setOpen","useState","enqueueSnackbar","closeSnackbar","handleClickOpen","handleClose","event","number","name","note","handleCreate","variant","anchorOrigin","vertical","horizontal","location","CustomToolbar","add","height","flexGrow","fontSize","Toolbar"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { XGrid } from \"@material-ui/x-grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { GridToolbarContainer, GridToolbar } from \"@material-ui/x-grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteForeverOutlinedIcon from \"@material-ui/icons/DeleteForeverOutlined\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport russian from \"../constants/localeTextConstants.js\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport LocationAddDialog from \"./LocationAddDialog\";\nimport { useSnackbar } from \"notistack\";\n\nexport default function LocationTable({\n  locations,\n  handleDeleteRow,\n  addLocation\n}) {\n  console.log(locations);\n\n  const useStyles = makeStyles({\n    toolbarContainer: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    tools: {\n      width: \"100%\",\n      paddingLeft: 20,\n      paddingRight: 20,\n      marginBottom: 30,\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\"\n    },\n    iconButton: {\n      \"&:hover\": {\n        backgroundColor: \"#bdbdbd\"\n      }\n    }\n  });\n\n  const classes = useStyles();\n\n  function updateRow(params) {\n    console.log(\"updateRow\", params);\n  }\n\n  const editColumn = {\n    field: \"edit\",\n    headerName: \"Редактировать\",\n    sortable: false,\n\n    width: 135,\n    renderCell: (params: CellParams) => (\n      <IconButton\n        aria-label=\"edit\"\n        color=\"primary\"\n        className={classes.iconButton}\n        onClick={() => updateRow(params)}\n      >\n        <EditOutlinedIcon />\n      </IconButton>\n    )\n  };\n\n  const deleteColumn = {\n    field: \"delete\",\n    headerName: \"Удалить\",\n    sortable: false,\n    renderCell: (params: CellParams) => (\n      <IconButton\n        aria-label=\"delete\"\n        color=\"secondary\"\n        className={classes.iconButton}\n        onClick={() => handleDeleteRow(params.row.id)}\n      >\n        <DeleteForeverOutlinedIcon />\n      </IconButton>\n    )\n  };\n\n  if (locations.columns && locations.columns.length > 0) {\n    locations.columns.push(editColumn);\n    locations.columns.push(deleteColumn);\n  }\n\n  const columns: ColDef[] = locations.columns ? locations.columns : [];\n  const rows = locations.rows ? locations.rows : [];\n\n  const [open, setOpen] = React.useState(false);\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, number, name, note) => {\n    setOpen(false);\n  };\n\n  const handleCreate = (event, number, name, note) => {\n    console.log({ number }, { name }, { note });\n    if (!number || !name) {\n      console.log(\"number is undefined\");\n      enqueueSnackbar(\"Нобходимо заполнить поля Номер и Название\", {\n        variant: \"warning\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    } else {\n      let location = {};\n      location.name = name;\n      location.number = number;\n      if (!!note) location.note = note;\n      console.log(!!note, \"location=\", location);\n      addLocation(location);\n      setOpen(false);\n    }\n  };\n\n  function CustomToolbar() {\n    return (\n      <GridToolbarContainer className={classes.toolbarContainer}>\n        <div>\n          <Typography variant=\"h5\" gutterBottom>\n            Места производства\n          </Typography>\n        </div>\n        <div className={classes.tools}>\n          <div>\n            <GridToolbar />\n          </div>\n          <Tooltip title=\"Создать\">\n            <Fab\n              size=\"medium\"\n              color=\"primary\"\n              aria-label=\"add\"\n              className={classes.add}\n              onClick={handleClickOpen}\n            >\n              <AddIcon />\n            </Fab>\n          </Tooltip>\n        </div>\n        <LocationAddDialog\n          handleClose={handleClose}\n          handleCreate={handleCreate}\n          open={open}\n        />\n      </GridToolbarContainer>\n    );\n  }\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        height: 700,\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        flexGrow: 1,\n        fontSize: \"18px\"\n      }}\n    >\n      <XGrid\n        localeText={russian}\n        rowHeight={50}\n        pageSize={20}\n        headerHeight={80}\n        columnBuffer={2}\n        rowsPerPageOptions={[5, 10, 20, 50, 100]}\n        pagination\n        density=\"standard\"\n        rows={rows}\n        columns={columns}\n        disableColumnMenu={true}\n        showColumnRightBorder={true}\n        showCellRightBorder={true}\n        disableExtendRowFullWidth={true}\n        components={{\n          Toolbar: CustomToolbar\n        }}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}