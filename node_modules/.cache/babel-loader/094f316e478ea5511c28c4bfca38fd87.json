{"ast":null,"code":"var _jsxFileName = \"/home/lilit/workspace/vtk/from_scratch_frontend_vtk/src/containers/Products.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useSnackbar } from \"notistack\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport ProductTable from \"../components/Product/ProductTable\";\nimport Button from \"@material-ui/core/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar moment = require(\"moment\");\n\nconst Product = () => {\n  _s();\n\n  const [products, setProducts] = useState({});\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  useEffect(() => {\n    const getProducts = async () => {\n      const productsFromServer = await fetchProducts();\n      setProducts(productsFromServer);\n    };\n\n    getProducts();\n  }, []); // Fetch Products\n\n  const fetchProducts = async () => {\n    const res = await fetch(\"http://localhost:3001/api/v1/products\");\n    const data = await res.json();\n    let columns = [];\n    let rows = data.products.rows.slice(0);\n    let products = {};\n    products.rows = rows.map(row => {\n      row.createdAt = moment(row.createdAt).format(\"YYYY.MM.DD HH:mm\");\n      row.updatedAt = moment(row.updatedAt).format(\"YYYY.MM.DD HH:mm\");\n      row.typeNumber = row.type.number;\n      row.type = row.type.name;\n      if (row.naming) row.naming = row.naming.name;\n      if (row.decimalNumber) row.decimalNumber = row.decimalNumber.name;\n      row.locationNumber = row.location.number;\n      if (row.location) row.location = row.location.name;\n      if (row.note) row.note = row.note.name;\n      if (row.employee) row.employee = row.employee.name;\n      return row;\n    });\n    let locColumns = [];\n    if (data.products.count > 0) locColumns = Object.keys(data.products.rows[0]);\n    locColumns.forEach(item => {\n      let obj = {};\n\n      switch (item) {\n        case \"id\":\n          obj.hide = true;\n          obj.headerName = \"ID\";\n          obj.field = item;\n          break;\n\n        case \"naming\":\n          obj.headerName = \"Наименование\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n\n        case \"number\":\n          obj.headerName = \"Номер\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n\n        case \"decimalNumber\":\n          obj.headerName = \"Децимальный номер\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n\n        case \"bookingDate\":\n          obj.headerName = \"Дата бронирования\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n\n        case \"year\":\n          obj.headerName = \"Год\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n\n        case \"location\":\n          obj.headerName = \"Место производства\";\n          obj.field = item;\n          obj.flex = 0.4;\n\n          obj.renderCell = params => /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: params.row.location,\n            placement: \"bottom\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                textTransform: \"lowercase\"\n              },\n              children: params.row.locationNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this);\n\n          break;\n\n        case \"type\":\n          obj.headerName = \"Тип изделия \";\n          obj.field = item;\n          obj.flex = 0.8;\n\n          obj.renderCell = params => /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: params.row.type,\n            placement: \"bottom\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                textTransform: \"lowercase\"\n              },\n              children: params.row.typeNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this);\n\n          break;\n\n        case \"serialNumber\":\n          obj.headerName = \"Порядковый номер\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n\n        case \"employee\":\n          obj.headerName = \"Сотрудник\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n\n        case \"description\":\n          obj.headerName = \"Описание\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n\n        case \"createdAt\":\n          obj.hide = true;\n          obj.headerName = \"Дата создания\";\n          obj.field = item;\n          obj.flex = 0.2;\n          break;\n\n        case \"updatedAt\":\n          obj.hide = true;\n          obj.headerName = \"Дата редактирования\";\n          obj.field = item;\n          obj.flex = 0.2;\n          break;\n\n        case \"note\":\n          obj.headerName = \"Примечание\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n\n        default:\n          break;\n      }\n\n      if (data.products.count > 0 && item !== \"deletedAt\" && item !== \"typeId\" && item !== \"namingId\" && item !== \"locationId\" && item !== \"noteId\" && item !== \"typeNumber\" && item !== \"locationNumber\" && item !== \"decimalNumberId\" && item !== \"employeeId\") {\n        columns.push(obj);\n      }\n    });\n    console.log({\n      columns\n    });\n    let _columns = [];\n    console.log({\n      _columns\n    });\n    columns.forEach((col, index) => {\n      console.log({\n        col\n      });\n      if (col.headerName === \"ID\") _columns.push(col);\n      if (col.headerName === \"number\") _columns.push(col);\n      if (col.headerName === \"naming\") _columns.push(col);\n      if (col.headerName === \"decimalNumber\") _columns.push(col);\n      if (col.headerName === \"bookingDate\") _columns.push(col);\n      if (col.headerName === \"year\") _columns.push(col);\n      if (col.headerName === \"location\") _columns.push(col);\n      if (col.headerName === \"type\") _columns.push(col);\n      if (col.headerName === \"year\") _columns.push(col);\n      if (col.headerName === \"serialNumber\") _columns.push(col);\n      if (col.headerName === \"note\") _columns.push(col);\n      if (col.headerName === \"employee\") _columns.push(col);\n      if (col.headerName === \"description\") _columns.push(col);\n      if (col.headerName === \"createdAt\") _columns.push(col);\n      if (col.headerName === \"updatedAt\") _columns.push(col);\n      if (col.headerName === \"deletedAt\") _columns.push(col);\n    });\n    products.columns = _columns;\n    return products;\n  }; // Add Product\n\n\n  const addProduct = async product => {\n    try {\n      const res = await fetch(\"http://localhost:3001/api/v1/products/\", {\n        method: \"POST\",\n        body: JSON.stringify(product),\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      });\n      const data = await res.json();\n      if (data[\"Bad Request\"]) throw new Error(data[\"Bad Request\"]);\n      if (data[\"errorMessage\"]) throw new Error(data[\"errorMessage\"]);\n      let newRows = [];\n      data.product.type = data.product.type.name;\n\n      if (products.columns.length > 0) {\n        data.product.createdAt = moment(data.product.createdAt).format(\"YYYY.MM.DD HH:mm\");\n        data.product.updatedAt = moment(data.product.updatedAt).format(\"YYYY.MM.DD HH:mm\");\n        newRows = [...products.rows, data.product];\n        let newProducts = Object.assign({}, {\n          columns: products.columns,\n          rows: newRows\n        });\n        setProducts(newProducts);\n      } else {\n        const productsFromServer = await fetchProducts();\n        setProducts(productsFromServer);\n      }\n    } catch (err) {\n      console.log(err);\n      enqueueSnackbar(`${err.message}`, {\n        variant: \"error\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    }\n  }; // Add Product\n\n\n  const updateProduct = async product => {\n    try {\n      const res = await fetch(`http://localhost:3001/api/v1/products/${product.id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(product)\n      });\n      const data = await res.json();\n      if (data[\"Bad Request\"]) throw new Error(data[\"Bad Request\"]);\n      if (data[\"errorMessage\"]) throw new Error(data[\"errorMessage\"]);\n      data.product.createdAt = moment(data.product.createdAt).format(\"YYYY.MM.DD HH:mm\");\n      data.product.updatedAt = moment(data.product.updatedAt).format(\"YYYY.MM.DD HH:mm\");\n      let newRows = [];\n      data.product.type = data.product.type.name;\n\n      if (products.columns.length > 0) {\n        newRows = products.rows.map(loc => loc.id === product.id ? data.product : loc);\n        let newProducts = Object.assign({}, {\n          columns: products.columns,\n          rows: newRows\n        });\n        setProducts(newProducts);\n      } else {\n        const productsFromServer = await fetchProducts();\n        setProducts(productsFromServer);\n      }\n    } catch (err) {\n      console.log(err);\n      enqueueSnackbar(`${err.message}`, {\n        variant: \"error\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    }\n  }; // Delete Product\n\n\n  const deleteProduct = async parameters => {\n    try {\n      await fetch(`http://localhost:3001/api/v1/products/${parameters.id}`, {\n        method: \"DELETE\"\n      });\n      let newRows = products.rows.filter(row => row.id !== parameters.id);\n      let newProducts = Object.assign({}, {\n        columns: products.columns,\n        rows: newRows\n      });\n      setProducts(newProducts);\n    } catch (err) {\n      console.log(err);\n      enqueueSnackbar(`${err.message}`, {\n        variant: \"error\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProductTable, {\n    products: products,\n    deleteProduct: deleteProduct,\n    addProduct: addProduct,\n    updateProduct: updateProduct\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 302,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Product, \"yOAbBplHxjJC3bxUwMqAivicWvs=\", false, function () {\n  return [useSnackbar];\n});\n\n_c = Product;\nexport default Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["/home/lilit/workspace/vtk/from_scratch_frontend_vtk/src/containers/Products.js"],"names":["useState","useEffect","useSnackbar","Tooltip","ProductTable","Button","moment","require","Product","products","setProducts","enqueueSnackbar","getProducts","productsFromServer","fetchProducts","res","fetch","data","json","columns","rows","slice","map","row","createdAt","format","updatedAt","typeNumber","type","number","name","naming","decimalNumber","locationNumber","location","note","employee","locColumns","count","Object","keys","forEach","item","obj","hide","headerName","field","flex","renderCell","params","textTransform","push","console","log","_columns","col","index","addProduct","product","method","body","JSON","stringify","headers","Error","newRows","length","newProducts","assign","err","message","variant","anchorOrigin","vertical","horizontal","updateProduct","id","loc","deleteProduct","parameters","filter"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useSnackbar } from \"notistack\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport ProductTable from \"../components/Product/ProductTable\";\nimport Button from \"@material-ui/core/Button\";\nvar moment = require(\"moment\");\n\nconst Product = () => {\n  const [products, setProducts] = useState({});\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    const getProducts = async () => {\n      const productsFromServer = await fetchProducts();\n      setProducts(productsFromServer);\n    };\n    getProducts();\n  }, []);\n\n  // Fetch Products\n  const fetchProducts = async () => {\n    const res = await fetch(\"http://localhost:3001/api/v1/products\");\n    const data = await res.json();\n    let columns = [];\n    let rows = data.products.rows.slice(0);\n    let products = {};\n\n    products.rows = rows.map(row => {\n      row.createdAt = moment(row.createdAt).format(\"YYYY.MM.DD HH:mm\");\n      row.updatedAt = moment(row.updatedAt).format(\"YYYY.MM.DD HH:mm\");\n      row.typeNumber = row.type.number;\n      row.type = row.type.name;\n      if (row.naming) row.naming = row.naming.name;\n      if (row.decimalNumber) row.decimalNumber = row.decimalNumber.name;\n      row.locationNumber = row.location.number;\n      if (row.location) row.location = row.location.name;\n      if (row.note) row.note = row.note.name;\n      if (row.employee) row.employee = row.employee.name;\n      return row;\n    });\n    let locColumns = [];\n    if (data.products.count > 0)\n      locColumns = Object.keys(data.products.rows[0]);\n\n    locColumns.forEach(item => {\n      let obj = {};\n      switch (item) {\n        case \"id\":\n          obj.hide = true;\n          obj.headerName = \"ID\";\n          obj.field = item;\n          break;\n        case \"naming\":\n          obj.headerName = \"Наименование\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n        case \"number\":\n          obj.headerName = \"Номер\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n        case \"decimalNumber\":\n          obj.headerName = \"Децимальный номер\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n        case \"bookingDate\":\n          obj.headerName = \"Дата бронирования\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n        case \"year\":\n          obj.headerName = \"Год\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n        case \"location\":\n          obj.headerName = \"Место производства\";\n          obj.field = item;\n          obj.flex = 0.4;\n          obj.renderCell = (params: CellParams) => (\n            <Tooltip title={params.row.location} placement=\"bottom\">\n              <Button style={{ textTransform: \"lowercase\" }}>\n                {params.row.locationNumber}\n              </Button>\n            </Tooltip>\n          );\n          break;\n        case \"type\":\n          obj.headerName = \"Тип изделия \";\n          obj.field = item;\n          obj.flex = 0.8;\n          obj.renderCell = (params: CellParams) => (\n            <Tooltip title={params.row.type} placement=\"bottom\">\n              <Button style={{ textTransform: \"lowercase\" }}>\n                {params.row.typeNumber}\n              </Button>\n            </Tooltip>\n          );\n          break;\n        case \"serialNumber\":\n          obj.headerName = \"Порядковый номер\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n        case \"employee\":\n          obj.headerName = \"Сотрудник\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n        case \"description\":\n          obj.headerName = \"Описание\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n        case \"createdAt\":\n          obj.hide = true;\n          obj.headerName = \"Дата создания\";\n          obj.field = item;\n          obj.flex = 0.2;\n          break;\n        case \"updatedAt\":\n          obj.hide = true;\n          obj.headerName = \"Дата редактирования\";\n          obj.field = item;\n          obj.flex = 0.2;\n          break;\n        case \"note\":\n          obj.headerName = \"Примечание\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n        default:\n          break;\n      }\n      if (\n        data.products.count > 0 &&\n        item !== \"deletedAt\" &&\n        item !== \"typeId\" &&\n        item !== \"namingId\" &&\n        item !== \"locationId\" &&\n        item !== \"noteId\" &&\n        item !== \"typeNumber\" &&\n        item !== \"locationNumber\" &&\n        item !== \"decimalNumberId\" &&\n        item !== \"employeeId\"\n      ) {\n        columns.push(obj);\n      }\n    });\n\n    console.log({ columns });\n    let _columns = [];\n    console.log({ _columns });\n\n    columns.forEach((col, index) => {\n      console.log({ col });\n      if (col.headerName === \"ID\") _columns.push(col);\n      if (col.headerName === \"number\") _columns.push(col);\n      if (col.headerName === \"naming\") _columns.push(col);\n      if (col.headerName === \"decimalNumber\") _columns.push(col);\n      if (col.headerName === \"bookingDate\") _columns.push(col);\n      if (col.headerName === \"year\") _columns.push(col);\n      if (col.headerName === \"location\") _columns.push(col);\n      if (col.headerName === \"type\") _columns.push(col);\n      if (col.headerName === \"year\") _columns.push(col);\n      if (col.headerName === \"serialNumber\") _columns.push(col);\n      if (col.headerName === \"note\") _columns.push(col);\n      if (col.headerName === \"employee\") _columns.push(col);\n      if (col.headerName === \"description\") _columns.push(col);\n      if (col.headerName === \"createdAt\") _columns.push(col);\n      if (col.headerName === \"updatedAt\") _columns.push(col);\n      if (col.headerName === \"deletedAt\") _columns.push(col);\n    });\n\n    products.columns = _columns;\n    return products;\n  };\n\n  // Add Product\n  const addProduct = async product => {\n    try {\n      const res = await fetch(\"http://localhost:3001/api/v1/products/\", {\n        method: \"POST\",\n        body: JSON.stringify(product),\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      });\n\n      const data = await res.json();\n      if (data[\"Bad Request\"]) throw new Error(data[\"Bad Request\"]);\n      if (data[\"errorMessage\"]) throw new Error(data[\"errorMessage\"]);\n      let newRows = [];\n      data.product.type = data.product.type.name;\n      if (products.columns.length > 0) {\n        data.product.createdAt = moment(data.product.createdAt).format(\n          \"YYYY.MM.DD HH:mm\"\n        );\n        data.product.updatedAt = moment(data.product.updatedAt).format(\n          \"YYYY.MM.DD HH:mm\"\n        );\n        newRows = [...products.rows, data.product];\n        let newProducts = Object.assign(\n          {},\n          { columns: products.columns, rows: newRows }\n        );\n        setProducts(newProducts);\n      } else {\n        const productsFromServer = await fetchProducts();\n        setProducts(productsFromServer);\n      }\n    } catch (err) {\n      console.log(err);\n      enqueueSnackbar(`${err.message}`, {\n        variant: \"error\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    }\n  };\n\n  // Add Product\n  const updateProduct = async product => {\n    try {\n      const res = await fetch(\n        `http://localhost:3001/api/v1/products/${product.id}`,\n        {\n          method: \"PUT\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify(product)\n        }\n      );\n\n      const data = await res.json();\n      if (data[\"Bad Request\"]) throw new Error(data[\"Bad Request\"]);\n      if (data[\"errorMessage\"]) throw new Error(data[\"errorMessage\"]);\n      data.product.createdAt = moment(data.product.createdAt).format(\n        \"YYYY.MM.DD HH:mm\"\n      );\n      data.product.updatedAt = moment(data.product.updatedAt).format(\n        \"YYYY.MM.DD HH:mm\"\n      );\n      let newRows = [];\n      data.product.type = data.product.type.name;\n      if (products.columns.length > 0) {\n        newRows = products.rows.map(loc =>\n          loc.id === product.id ? data.product : loc\n        );\n        let newProducts = Object.assign(\n          {},\n          { columns: products.columns, rows: newRows }\n        );\n        setProducts(newProducts);\n      } else {\n        const productsFromServer = await fetchProducts();\n        setProducts(productsFromServer);\n      }\n    } catch (err) {\n      console.log(err);\n      enqueueSnackbar(`${err.message}`, {\n        variant: \"error\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    }\n  };\n\n  // Delete Product\n  const deleteProduct = async parameters => {\n    try {\n      await fetch(`http://localhost:3001/api/v1/products/${parameters.id}`, {\n        method: \"DELETE\"\n      });\n\n      let newRows = products.rows.filter(row => row.id !== parameters.id);\n      let newProducts = Object.assign(\n        {},\n        { columns: products.columns, rows: newRows }\n      );\n      setProducts(newProducts);\n    } catch (err) {\n      console.log(err);\n      enqueueSnackbar(`${err.message}`, {\n        variant: \"error\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    }\n  };\n\n  return (\n    <ProductTable\n      products={products}\n      deleteProduct={deleteProduct}\n      addProduct={addProduct}\n      updateProduct={updateProduct}\n    ></ProductTable>\n  );\n};\n\nexport default Product;\n"]},"metadata":{},"sourceType":"module"}