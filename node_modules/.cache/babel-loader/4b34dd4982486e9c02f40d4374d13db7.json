{"ast":null,"code":"var _jsxFileName = \"/home/lilit/workspace/vtk/from_scratch_frontend_vtk/src/containers/Products.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useSnackbar } from \"notistack\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport ProductTable from \"../components/Product/ProductTable\";\nimport Button from \"@material-ui/core/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar moment = require(\"moment\");\n\nconst Product = () => {\n  _s();\n\n  const [products, setProducts] = useState({});\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  console.log(\"produc.js\");\n  useEffect(() => {\n    console.log(\"use effect\");\n\n    const getProducts = async () => {\n      const productsFromServer = await fetchProducts();\n      setProducts(Object.assign({}, productsFromServer));\n    };\n\n    getProducts();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n  // Fetch Products\n\n  const fetchProducts = async () => {\n    const res = await fetch(\"http://localhost:3001/api/v1/products\");\n    const data = await res.json();\n    let columns = [];\n    let rows = [];\n    data.products.rows.forEach(row => {\n      let rowObj = {};\n      rowObj.createdAt = moment(row.createdAt).format(\"YYYY.MM.DD HH:mm\");\n      rowObj.updatedAt = moment(row.updatedAt).format(\"YYYY.MM.DD HH:mm\");\n\n      if (row.type) {\n        rowObj.typeNumber = row.type.number;\n        rowObj.type = row.type.name;\n      } else {\n        rowObj.typeNumber = \"\";\n      }\n\n      if (row.naming) rowObj.naming = row.naming.name;\n      if (row.decimalNumber) rowObj.decimalNumber = row.decimalNumber;\n\n      if (row.location) {\n        rowObj.location = row.location.name;\n        rowObj.locationNumber = row.location.number;\n      } else {\n        rowObj.locationNumber = \"\";\n      }\n\n      if (row.note) rowObj.note = row.note;\n      if (row.employee) rowObj.employee = row.employee.name;\n      rowObj = Object.assign({}, row, rowObj);\n      rows.push(rowObj);\n    });\n    products.rows = rows;\n    let locColumns = [];\n    if (data.products.count > 0) locColumns = Object.keys(data.products.rows[0]);\n    locColumns.forEach(item => {\n      let obj = {};\n\n      switch (item) {\n        case \"id\":\n          obj.hide = true;\n          obj.headerName = \"ID\";\n          obj.field = item;\n          obj.flex = 0.2;\n          break;\n\n        case \"naming\":\n          obj.headerName = \"Наименование\";\n          obj.field = item;\n          obj.flex = 0.6;\n          break;\n\n        case \"number\":\n          obj.headerName = \"№п.п.\";\n          obj.field = item;\n          obj.flex = 0.3;\n          break;\n\n        case \"decimalNumber\":\n          obj.headerName = \"Децимальный номер\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n\n        case \"bookingDate\":\n          obj.headerName = \"Дата бронирования\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n\n        case \"year\":\n          obj.headerName = \"Год\";\n          obj.field = item;\n          obj.flex = 0.3;\n          break;\n\n        case \"location\":\n          obj.headerName = \"Место производства\";\n          obj.field = item;\n          obj.flex = 0.3;\n\n          obj.renderCell = params => /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: params.row.location || \"\",\n            placement: \"bottom\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                textTransform: \"lowercase\"\n              },\n              children: params.row.locationNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this);\n\n          break;\n\n        case \"type\":\n          obj.headerName = \"Тип изделия \";\n          obj.field = item;\n          obj.flex = 0.3;\n\n          obj.renderCell = params => /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: params.row.type || \"\",\n            placement: \"bottom\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                textTransform: \"lowercase\"\n              },\n              children: params.row.typeNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this);\n\n          break;\n\n        case \"serialNumber\":\n          obj.headerName = \"Порядковый номер\";\n          obj.field = item;\n          obj.flex = 0.3;\n          break;\n\n        case \"employee\":\n          obj.headerName = \"Сотрудник\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n\n        case \"createdAt\":\n          obj.hide = true;\n          obj.headerName = \"Дата создания\";\n          obj.field = item;\n          obj.flex = 0.3;\n          break;\n\n        case \"updatedAt\":\n          obj.hide = true;\n          obj.headerName = \"Дата редактирования\";\n          obj.field = item;\n          obj.flex = 0.3;\n          break;\n\n        case \"note\":\n          obj.headerName = \"Примечание\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n\n        default:\n          break;\n      }\n\n      if (data.products.count > 0 && item !== \"deletedAt\" && item !== \"typeId\" && item !== \"namingId\" && item !== \"locationId\" && item !== \"employeeId\") {\n        columns.push(obj);\n      }\n    });\n    let _columns = [];\n    columns.forEach((col, index) => {\n      if (col.field === \"id\") _columns[0] = col;\n      if (col.field === \"number\") _columns[1] = col;\n      if (col.field === \"naming\") _columns[2] = col;\n      if (col.field === \"decimalNumber\") _columns[3] = col;\n      if (col.field === \"bookingDate\") _columns[4] = col;\n      if (col.field === \"year\") _columns[5] = col;\n      if (col.field === \"location\") _columns[6] = col;\n      if (col.field === \"type\") _columns[7] = col;\n      if (col.field === \"serialNumber\") _columns[8] = col;\n      if (col.field === \"note\") _columns[9] = col;\n      if (col.field === \"employee\") _columns[10] = col;\n      if (col.field === \"createdAt\") _columns[11] = col;\n      if (col.field === \"updatedAt\") _columns[12] = col;\n    });\n    products.columns = _columns;\n    return products;\n  };\n\n  const addProduct = async product => {\n    try {\n      const res = await fetch(\"http://localhost:3001/api/v1/products/\", {\n        method: \"POST\",\n        body: JSON.stringify(product),\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      });\n      const data = await res.json();\n      if (data[\"Bad Request\"]) throw new Error(data[\"Bad Request\"]);\n      if (data[\"errorMessage\"]) throw new Error(data[\"errorMessage\"]);\n      let newRows = [];\n\n      if (products.columns.length > 0) {\n        data.product.createdAt = moment(data.product.createdAt).format(\"YYYY.MM.DD HH:mm\");\n        data.product.updatedAt = moment(data.product.updatedAt).format(\"YYYY.MM.DD HH:mm\");\n        newRows = [...products.rows, data.product];\n        let newProducts = Object.assign({}, {\n          columns: products.columns,\n          rows: newRows\n        });\n        setProducts(newProducts);\n      } else {\n        const productsFromServer = await fetchProducts();\n        setProducts(Object.assign({}, productsFromServer));\n      }\n    } catch (err) {\n      console.log(err);\n      enqueueSnackbar(`${err.message}`, {\n        variant: \"error\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    }\n  };\n\n  const updateProduct = async product => {\n    try {\n      const res = await fetch(`http://localhost:3001/api/v1/products/${product.id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(product)\n      });\n      const data = await res.json();\n      console.log({\n        data\n      });\n      if (data[\"Bad Request\"]) throw new Error(data[\"Bad Request\"]);\n      if (data[\"errorMessage\"]) throw new Error(data[\"errorMessage\"]);\n      data.product.createdAt = moment(data.product.createdAt).format(\"YYYY.MM.DD HH:mm\");\n      data.product.updatedAt = moment(data.product.updatedAt).format(\"YYYY.MM.DD HH:mm\");\n      let newRows = [];\n\n      if (products.columns.length > 0) {\n        newRows = products.rows.map(prod => prod.id === product.id ? data.product : prod);\n        let newProducts = Object.assign({}, {\n          columns: products.columns,\n          rows: newRows\n        });\n        setProducts(newProducts);\n      } else {\n        const productsFromServer = await fetchProducts();\n        setProducts(productsFromServer);\n      }\n    } catch (err) {\n      console.log(err);\n      enqueueSnackbar(`${err.message}`, {\n        variant: \"error\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    }\n  }; // Delete Product\n\n\n  const deleteProduct = async parameters => {\n    try {\n      await fetch(`http://localhost:3001/api/v1/products/${parameters.id}`, {\n        method: \"DELETE\"\n      });\n      let newRows = products.rows.filter(row => row.id !== parameters.id);\n      let newProducts = Object.assign({}, {\n        columns: products.columns,\n        rows: newRows\n      });\n      setProducts(newProducts);\n    } catch (err) {\n      console.log(err);\n      enqueueSnackbar(`${err.message}`, {\n        variant: \"error\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProductTable, {\n    products: products,\n    deleteProduct: deleteProduct,\n    addProduct: addProduct,\n    updateProduct: updateProduct\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Product, \"yOAbBplHxjJC3bxUwMqAivicWvs=\", false, function () {\n  return [useSnackbar];\n});\n\n_c = Product;\nexport default Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["/home/lilit/workspace/vtk/from_scratch_frontend_vtk/src/containers/Products.js"],"names":["useState","useEffect","useSnackbar","Tooltip","ProductTable","Button","moment","require","Product","products","setProducts","enqueueSnackbar","console","log","getProducts","productsFromServer","fetchProducts","Object","assign","res","fetch","data","json","columns","rows","forEach","row","rowObj","createdAt","format","updatedAt","type","typeNumber","number","name","naming","decimalNumber","location","locationNumber","note","employee","push","locColumns","count","keys","item","obj","hide","headerName","field","flex","renderCell","params","textTransform","_columns","col","index","addProduct","product","method","body","JSON","stringify","headers","Error","newRows","length","newProducts","err","message","variant","anchorOrigin","vertical","horizontal","updateProduct","id","map","prod","deleteProduct","parameters","filter"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useSnackbar } from \"notistack\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport ProductTable from \"../components/Product/ProductTable\";\nimport Button from \"@material-ui/core/Button\";\nvar moment = require(\"moment\");\n\nconst Product = () => {\n  const [products, setProducts] = useState({});\n  const { enqueueSnackbar } = useSnackbar();\n  console.log(\"produc.js\");\n  useEffect(() => {\n    console.log(\"use effect\");\n    const getProducts = async () => {\n      const productsFromServer = await fetchProducts();\n      setProducts(Object.assign({}, productsFromServer));\n    };\n    getProducts();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Fetch Products\n  const fetchProducts = async () => {\n    const res = await fetch(\"http://localhost:3001/api/v1/products\");\n    const data = await res.json();\n    let columns = [];\n    let rows = [];\n    data.products.rows.forEach(row => {\n      let rowObj = {};\n      rowObj.createdAt = moment(row.createdAt).format(\"YYYY.MM.DD HH:mm\");\n      rowObj.updatedAt = moment(row.updatedAt).format(\"YYYY.MM.DD HH:mm\");\n      if (row.type) {\n        rowObj.typeNumber = row.type.number;\n        rowObj.type = row.type.name;\n      } else {\n        rowObj.typeNumber = \"\";\n      }\n      if (row.naming) rowObj.naming = row.naming.name;\n      if (row.decimalNumber) rowObj.decimalNumber = row.decimalNumber;\n      if (row.location) {\n        rowObj.location = row.location.name;\n        rowObj.locationNumber = row.location.number;\n      } else {\n        rowObj.locationNumber = \"\";\n      }\n      if (row.note) rowObj.note = row.note;\n      if (row.employee) rowObj.employee = row.employee.name;\n      rowObj = Object.assign({}, row, rowObj);\n      rows.push(rowObj);\n    });\n    products.rows = rows;\n    let locColumns = [];\n    if (data.products.count > 0)\n      locColumns = Object.keys(data.products.rows[0]);\n    locColumns.forEach(item => {\n      let obj = {};\n      switch (item) {\n        case \"id\":\n          obj.hide = true;\n          obj.headerName = \"ID\";\n          obj.field = item;\n          obj.flex = 0.2;\n          break;\n        case \"naming\":\n          obj.headerName = \"Наименование\";\n          obj.field = item;\n          obj.flex = 0.6;\n          break;\n        case \"number\":\n          obj.headerName = \"№п.п.\";\n          obj.field = item;\n          obj.flex = 0.3;\n          break;\n        case \"decimalNumber\":\n          obj.headerName = \"Децимальный номер\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n        case \"bookingDate\":\n          obj.headerName = \"Дата бронирования\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n        case \"year\":\n          obj.headerName = \"Год\";\n          obj.field = item;\n          obj.flex = 0.3;\n          break;\n        case \"location\":\n          obj.headerName = \"Место производства\";\n          obj.field = item;\n          obj.flex = 0.3;\n          obj.renderCell = (params: CellParams) => (\n            <Tooltip title={params.row.location || \"\"} placement=\"bottom\">\n              <Button style={{ textTransform: \"lowercase\" }}>\n                {params.row.locationNumber}\n              </Button>\n            </Tooltip>\n          );\n          break;\n        case \"type\":\n          obj.headerName = \"Тип изделия \";\n          obj.field = item;\n          obj.flex = 0.3;\n          obj.renderCell = (params: CellParams) => (\n            <Tooltip title={params.row.type || \"\"} placement=\"bottom\">\n              <Button style={{ textTransform: \"lowercase\" }}>\n                {params.row.typeNumber}\n              </Button>\n            </Tooltip>\n          );\n          break;\n        case \"serialNumber\":\n          obj.headerName = \"Порядковый номер\";\n          obj.field = item;\n          obj.flex = 0.3;\n          break;\n        case \"employee\":\n          obj.headerName = \"Сотрудник\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n        case \"createdAt\":\n          obj.hide = true;\n          obj.headerName = \"Дата создания\";\n          obj.field = item;\n          obj.flex = 0.3;\n          break;\n        case \"updatedAt\":\n          obj.hide = true;\n          obj.headerName = \"Дата редактирования\";\n          obj.field = item;\n          obj.flex = 0.3;\n          break;\n        case \"note\":\n          obj.headerName = \"Примечание\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n        default:\n          break;\n      }\n      if (\n        data.products.count > 0 &&\n        item !== \"deletedAt\" &&\n        item !== \"typeId\" &&\n        item !== \"namingId\" &&\n        item !== \"locationId\" &&\n        item !== \"employeeId\"\n      ) {\n        columns.push(obj);\n      }\n    });\n\n    let _columns = [];\n\n    columns.forEach((col, index) => {\n      if (col.field === \"id\") _columns[0] = col;\n      if (col.field === \"number\") _columns[1] = col;\n      if (col.field === \"naming\") _columns[2] = col;\n      if (col.field === \"decimalNumber\") _columns[3] = col;\n      if (col.field === \"bookingDate\") _columns[4] = col;\n      if (col.field === \"year\") _columns[5] = col;\n      if (col.field === \"location\") _columns[6] = col;\n      if (col.field === \"type\") _columns[7] = col;\n      if (col.field === \"serialNumber\") _columns[8] = col;\n      if (col.field === \"note\") _columns[9] = col;\n      if (col.field === \"employee\") _columns[10] = col;\n      if (col.field === \"createdAt\") _columns[11] = col;\n      if (col.field === \"updatedAt\") _columns[12] = col;\n    });\n    products.columns = _columns;\n    return products;\n  };\n\n  const addProduct = async product => {\n    try {\n      const res = await fetch(\"http://localhost:3001/api/v1/products/\", {\n        method: \"POST\",\n        body: JSON.stringify(product),\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      });\n\n      const data = await res.json();\n      if (data[\"Bad Request\"]) throw new Error(data[\"Bad Request\"]);\n      if (data[\"errorMessage\"]) throw new Error(data[\"errorMessage\"]);\n      let newRows = [];\n      if (products.columns.length > 0) {\n        data.product.createdAt = moment(data.product.createdAt).format(\n          \"YYYY.MM.DD HH:mm\"\n        );\n        data.product.updatedAt = moment(data.product.updatedAt).format(\n          \"YYYY.MM.DD HH:mm\"\n        );\n\n        newRows = [...products.rows, data.product];\n        let newProducts = Object.assign(\n          {},\n          { columns: products.columns, rows: newRows }\n        );\n        setProducts(newProducts);\n      } else {\n        const productsFromServer = await fetchProducts();\n        setProducts(Object.assign({}, productsFromServer));\n      }\n    } catch (err) {\n      console.log(err);\n      enqueueSnackbar(`${err.message}`, {\n        variant: \"error\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    }\n  };\n\n  const updateProduct = async product => {\n    try {\n      const res = await fetch(\n        `http://localhost:3001/api/v1/products/${product.id}`,\n        {\n          method: \"PUT\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify(product)\n        }\n      );\n\n      const data = await res.json();\n      console.log({ data });\n      if (data[\"Bad Request\"]) throw new Error(data[\"Bad Request\"]);\n      if (data[\"errorMessage\"]) throw new Error(data[\"errorMessage\"]);\n      data.product.createdAt = moment(data.product.createdAt).format(\n        \"YYYY.MM.DD HH:mm\"\n      );\n      data.product.updatedAt = moment(data.product.updatedAt).format(\n        \"YYYY.MM.DD HH:mm\"\n      );\n      let newRows = [];\n\n      if (products.columns.length > 0) {\n        newRows = products.rows.map(prod =>\n          prod.id === product.id ? data.product : prod\n        );\n        let newProducts = Object.assign(\n          {},\n          { columns: products.columns, rows: newRows }\n        );\n        setProducts(newProducts);\n      } else {\n        const productsFromServer = await fetchProducts();\n        setProducts(productsFromServer);\n      }\n    } catch (err) {\n      console.log(err);\n      enqueueSnackbar(`${err.message}`, {\n        variant: \"error\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    }\n  };\n\n  // Delete Product\n  const deleteProduct = async parameters => {\n    try {\n      await fetch(`http://localhost:3001/api/v1/products/${parameters.id}`, {\n        method: \"DELETE\"\n      });\n\n      let newRows = products.rows.filter(row => row.id !== parameters.id);\n      let newProducts = Object.assign(\n        {},\n        { columns: products.columns, rows: newRows }\n      );\n      setProducts(newProducts);\n    } catch (err) {\n      console.log(err);\n      enqueueSnackbar(`${err.message}`, {\n        variant: \"error\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    }\n  };\n\n  return (\n    <ProductTable\n      products={products}\n      deleteProduct={deleteProduct}\n      addProduct={addProduct}\n      updateProduct={updateProduct}\n    ></ProductTable>\n  );\n};\n\nexport default Product;\n"]},"metadata":{},"sourceType":"module"}