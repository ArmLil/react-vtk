{"ast":null,"code":"var _jsxFileName = \"/home/lilit/workspace/vtk/from_scratch_frontend_vtk/src/components/LocationTable.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { XGrid } from \"@material-ui/x-grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { GridToolbarContainer, GridToolbar } from \"@material-ui/x-grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteForeverOutlinedIcon from \"@material-ui/icons/DeleteForeverOutlined\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport russian from \"../constants/localeTextConstants.js\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LocationTable({\n  locations\n}) {\n  _s();\n\n  console.log({\n    locations\n  });\n  const useStyles = makeStyles({\n    toolbarContainer: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    tools: {\n      width: \"100%\",\n      paddingLeft: 20,\n      paddingRight: 20,\n      marginBottom: 30,\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\"\n    },\n    iconButton: {\n      \"&:hover\": {\n        backgroundColor: \"#bdbdbd\"\n      }\n    }\n  });\n  const classes = useStyles();\n\n  function updateRow(params) {\n    console.log(\"updateRow\", params);\n  }\n\n  function deleteRow(params) {\n    console.log(\"deleteRow\", params);\n  } // console.log(locations);\n\n\n  const deleteEditArray = [{\n    field: \"delete\",\n    headerName: \"Удалить\",\n    sortable: false,\n    renderCell: params => /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"delete\",\n      color: \"secondary\",\n      className: classes.iconButton,\n      onClick: () => deleteRow(params),\n      children: /*#__PURE__*/_jsxDEV(DeleteForeverOutlinedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, {\n    field: \"edit\",\n    headerName: \"Редактировать\",\n    sortable: false,\n    width: 135,\n    renderCell: params => /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"edit\",\n      color: \"primary\",\n      className: classes.iconButton,\n      onClick: () => updateRow(params),\n      children: /*#__PURE__*/_jsxDEV(EditOutlinedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  }]; // const columns: ColDef[] = locations.columns;\n  // console.log({ columns });\n\n  const columns = [{\n    field: \"id\",\n    headerName: \"ID\"\n  }, {\n    field: \"firstName\",\n    headerName: \"First name\",\n    flex: 0.1\n  }, {\n    field: \"lastName\",\n    headerName: \"Last name\",\n    flex: 0.1\n  }, {\n    field: \"age\",\n    headerName: \"Age\",\n    type: \"number\"\n  }, {\n    field: \"fullName\",\n    headerName: \"Full name\",\n    description: \"This column has a value getter and is not sortable.\",\n    sortable: false,\n    flex: 0.5,\n    valueGetter: params => `${params.getValue(\"firstName\") || \"\"} ${params.getValue(\"lastName\") || \"\"}`\n  }, {\n    field: \"delete\",\n    headerName: \"Удалить\",\n    sortable: false,\n    renderCell: params => /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"delete\",\n      color: \"secondary\",\n      className: classes.iconButton,\n      onClick: () => deleteRow(params),\n      children: /*#__PURE__*/_jsxDEV(DeleteForeverOutlinedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)\n  }, {\n    field: \"edit\",\n    headerName: \"Редактировать\",\n    sortable: false,\n    width: 135,\n    renderCell: params => /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"edit\",\n      color: \"primary\",\n      className: classes.iconButton,\n      onClick: () => updateRow(params),\n      children: /*#__PURE__*/_jsxDEV(EditOutlinedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)\n  }];\n  const rows = locations.rows; // const rows = [\n  //   { id: 1, lastName: \"Snow\", firstName: \"Jon\", age: 35 },\n  //   { id: 2, lastName: \"Lannister\", firstName: \"Cersei\", age: 42 },\n  //   { id: 3, lastName: \"Lannister\", firstName: \"Jaime\", age: 45 },\n  //   { id: 4, lastName: \"Stark\", firstName: \"Arya\", age: 16 },\n  //   { id: 5, lastName: \"Targaryen\", firstName: \"Daenerys\", age: null },\n  //   { id: 6, lastName: \"Melisandre\", firstName: null, age: 150 },\n  //   { id: 7, lastName: \"Clifford\", firstName: \"Ferrara\", age: 44 },\n  //   { id: 8, lastName: \"Frances\", firstName: \"Rossini\", age: 36 },\n  //   { id: 9, lastName: \"Roxie\", firstName: \"Harvey\", age: 65 }\n  // ];\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function CustomToolbar() {\n    return /*#__PURE__*/_jsxDEV(GridToolbarContainer, {\n      className: classes.toolbarContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: \"\\u041C\\u0435\\u0441\\u0442\\u0430 \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0441\\u0442\\u0432\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.tools,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(GridToolbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",\n          children: /*#__PURE__*/_jsxDEV(Fab, {\n            size: \"medium\",\n            color: \"primary\",\n            \"aria-label\": \"add\",\n            className: classes.add,\n            onClick: handleClickOpen,\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: open,\n        onClose: handleClose,\n        \"aria-labelledby\": \"form-dialog-title\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"form-dialog-title\",\n          children: \"Subscribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: \"To subscribe to this website, please enter your email address here. We will send updates occasionally.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            margin: \"dense\",\n            id: \"name\",\n            label: \"Email Address\",\n            type: \"email\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            color: \"primary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            color: \"primary\",\n            children: \"Subscribe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      height: 700,\n      width: \"100%\",\n      justifyContent: \"space-between\",\n      flexGrow: 1\n    },\n    children: /*#__PURE__*/_jsxDEV(XGrid, {\n      localeText: russian,\n      rowHeight: 50,\n      pageSize: 20,\n      headerHeight: 80,\n      columnBuffer: 2,\n      rowsPerPageOptions: [5, 10, 20, 50, 100],\n      pagination: true,\n      density: \"standard\",\n      rows: rows,\n      columns: columns,\n      disableColumnMenu: true,\n      showColumnRightBorder: true,\n      showCellRightBorder: true,\n      disableExtendRowFullWidth: true,\n      components: {\n        Toolbar: CustomToolbar\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LocationTable, \"TsAExMDA6yuxA58uE+YzDgG8Jdg=\", true);\n\n_c = LocationTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationTable\");","map":{"version":3,"sources":["/home/lilit/workspace/vtk/from_scratch_frontend_vtk/src/components/LocationTable.js"],"names":["React","XGrid","Typography","makeStyles","AddIcon","Fab","GridToolbarContainer","GridToolbar","IconButton","DeleteForeverOutlinedIcon","EditOutlinedIcon","russian","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","Tooltip","LocationTable","locations","console","log","useStyles","toolbarContainer","display","flexDirection","tools","width","paddingLeft","paddingRight","marginBottom","justifyContent","iconButton","backgroundColor","classes","updateRow","params","deleteRow","deleteEditArray","field","headerName","sortable","renderCell","columns","flex","type","description","valueGetter","getValue","rows","open","setOpen","useState","handleClickOpen","handleClose","CustomToolbar","add","height","flexGrow","Toolbar"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { XGrid } from \"@material-ui/x-grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { GridToolbarContainer, GridToolbar } from \"@material-ui/x-grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteForeverOutlinedIcon from \"@material-ui/icons/DeleteForeverOutlined\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport russian from \"../constants/localeTextConstants.js\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nexport default function LocationTable({ locations }) {\n  console.log({ locations });\n  const useStyles = makeStyles({\n    toolbarContainer: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    tools: {\n      width: \"100%\",\n      paddingLeft: 20,\n      paddingRight: 20,\n      marginBottom: 30,\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\"\n    },\n    iconButton: {\n      \"&:hover\": {\n        backgroundColor: \"#bdbdbd\"\n      }\n    }\n  });\n\n  const classes = useStyles();\n\n  function updateRow(params) {\n    console.log(\"updateRow\", params);\n  }\n  function deleteRow(params) {\n    console.log(\"deleteRow\", params);\n  }\n\n  // console.log(locations);\n\n  const deleteEditArray = [\n    {\n      field: \"delete\",\n      headerName: \"Удалить\",\n      sortable: false,\n      renderCell: (params: CellParams) => (\n        <IconButton\n          aria-label=\"delete\"\n          color=\"secondary\"\n          className={classes.iconButton}\n          onClick={() => deleteRow(params)}\n        >\n          <DeleteForeverOutlinedIcon />\n        </IconButton>\n      )\n    },\n    {\n      field: \"edit\",\n      headerName: \"Редактировать\",\n      sortable: false,\n\n      width: 135,\n      renderCell: (params: CellParams) => (\n        <IconButton\n          aria-label=\"edit\"\n          color=\"primary\"\n          className={classes.iconButton}\n          onClick={() => updateRow(params)}\n        >\n          <EditOutlinedIcon />\n        </IconButton>\n      )\n    }\n  ];\n  // const columns: ColDef[] = locations.columns;\n  // console.log({ columns });\n  const columns: ColDef[] = [\n    { field: \"id\", headerName: \"ID\" },\n    { field: \"firstName\", headerName: \"First name\", flex: 0.1 },\n    { field: \"lastName\", headerName: \"Last name\", flex: 0.1 },\n    {\n      field: \"age\",\n      headerName: \"Age\",\n      type: \"number\"\n    },\n    {\n      field: \"fullName\",\n      headerName: \"Full name\",\n      description: \"This column has a value getter and is not sortable.\",\n      sortable: false,\n      flex: 0.5,\n\n      valueGetter: (params: ValueGetterParams) =>\n        `${params.getValue(\"firstName\") || \"\"} ${params.getValue(\"lastName\") ||\n          \"\"}`\n    },\n\n    {\n      field: \"delete\",\n      headerName: \"Удалить\",\n      sortable: false,\n      renderCell: (params: CellParams) => (\n        <IconButton\n          aria-label=\"delete\"\n          color=\"secondary\"\n          className={classes.iconButton}\n          onClick={() => deleteRow(params)}\n        >\n          <DeleteForeverOutlinedIcon />\n        </IconButton>\n      )\n    },\n    {\n      field: \"edit\",\n      headerName: \"Редактировать\",\n      sortable: false,\n\n      width: 135,\n      renderCell: (params: CellParams) => (\n        <IconButton\n          aria-label=\"edit\"\n          color=\"primary\"\n          className={classes.iconButton}\n          onClick={() => updateRow(params)}\n        >\n          <EditOutlinedIcon />\n        </IconButton>\n      )\n    }\n  ];\n\n  const rows = locations.rows;\n  // const rows = [\n  //   { id: 1, lastName: \"Snow\", firstName: \"Jon\", age: 35 },\n  //   { id: 2, lastName: \"Lannister\", firstName: \"Cersei\", age: 42 },\n  //   { id: 3, lastName: \"Lannister\", firstName: \"Jaime\", age: 45 },\n  //   { id: 4, lastName: \"Stark\", firstName: \"Arya\", age: 16 },\n  //   { id: 5, lastName: \"Targaryen\", firstName: \"Daenerys\", age: null },\n  //   { id: 6, lastName: \"Melisandre\", firstName: null, age: 150 },\n  //   { id: 7, lastName: \"Clifford\", firstName: \"Ferrara\", age: 44 },\n  //   { id: 8, lastName: \"Frances\", firstName: \"Rossini\", age: 36 },\n  //   { id: 9, lastName: \"Roxie\", firstName: \"Harvey\", age: 65 }\n  // ];\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function CustomToolbar() {\n    return (\n      <GridToolbarContainer className={classes.toolbarContainer}>\n        <div>\n          <Typography variant=\"h5\" gutterBottom>\n            Места производства\n          </Typography>\n        </div>\n        <div className={classes.tools}>\n          <div>\n            <GridToolbar />\n          </div>\n          <Tooltip title=\"Создать\">\n            <Fab\n              size=\"medium\"\n              color=\"primary\"\n              aria-label=\"add\"\n              className={classes.add}\n              onClick={handleClickOpen}\n            >\n              <AddIcon />\n            </Fab>\n          </Tooltip>\n        </div>\n        <Dialog\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              To subscribe to this website, please enter your email address\n              here. We will send updates occasionally.\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Email Address\"\n              type=\"email\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={handleClose} color=\"primary\">\n              Subscribe\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </GridToolbarContainer>\n    );\n  }\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        height: 700,\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        flexGrow: 1\n      }}\n    >\n      <XGrid\n        localeText={russian}\n        rowHeight={50}\n        pageSize={20}\n        headerHeight={80}\n        columnBuffer={2}\n        rowsPerPageOptions={[5, 10, 20, 50, 100]}\n        pagination\n        density=\"standard\"\n        rows={rows}\n        columns={columns}\n        disableColumnMenu={true}\n        showColumnRightBorder={true}\n        showCellRightBorder={true}\n        disableExtendRowFullWidth={true}\n        components={{\n          Toolbar: CustomToolbar\n        }}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}