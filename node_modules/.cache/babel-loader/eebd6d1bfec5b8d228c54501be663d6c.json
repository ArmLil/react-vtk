{"ast":null,"code":"var _jsxFileName = \"/home/lilit/workspace/vtk/from_scratch_frontend_vtk/src/containers/Products.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useSnackbar } from \"notistack\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport ProductTable from \"../components/Product/ProductTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar moment = require(\"moment\");\n\nconst Product = () => {\n  _s();\n\n  const [products, setProducts] = useState({});\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  useEffect(() => {\n    const getProducts = async () => {\n      const productsFromServer = await fetchProducts();\n      setProducts(productsFromServer);\n    };\n\n    getProducts();\n  }, []); // Fetch Products\n\n  const fetchProducts = async () => {\n    const res = await fetch(\"http://localhost:3001/api/v1/products\");\n    const data = await res.json();\n    let columns = [];\n    let rows = data.products.rows.map(row => {\n      console.log({\n        row\n      });\n      row.createdAt = moment(row.createdAt).format(\"YYYY.MM.DD HH:mm\");\n      row.updatedAt = moment(row.updatedAt).format(\"YYYY.MM.DD HH:mm\"); // if (row.type) row.type = row.type.name;\n\n      if (row.naming) row.naming = row.naming.name;\n      if (row.decimalNumber) row.decimalNumber = row.decimalNumber.name;\n      if (row.location) row.location = row.location.name;\n      if (row.note) row.note = row.note.name;\n      if (row.employee) row.employee = row.employee.name;\n      return row;\n    });\n    let locColumns = [];\n    if (data.products.count > 0) locColumns = Object.keys(data.products.rows[0]);\n    locColumns.forEach(item => {\n      let obj = {};\n\n      switch (item) {\n        case \"id\":\n          obj.hide = true;\n          obj.headerName = \"ID\";\n          obj.field = item;\n          break;\n\n        case \"name\":\n          obj.headerName = \"Наименование\";\n          obj.field = item.name;\n          obj.flex = 0.4;\n          break;\n\n        case \"number\":\n          obj.headerName = \"Номер\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n\n        case \"decimalNumber\":\n          obj.headerName = \"Децимальный номер\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n\n        case \"bookingDate\":\n          obj.headerName = \"Дата бронирования\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n\n        case \"year\":\n          obj.headerName = \"Год\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n\n        case \"location\":\n          obj.headerName = \"Место производства\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n\n        case \"type\":\n          obj.headerName = \"Тип изделия \";\n          obj.field = item.number;\n          obj.flex = 0.4; // obj.renderCell = (params: CellParams) => (\n          //   <Tooltip title={item.name}>{obj.field}</Tooltip>\n          // );\n\n          break;\n\n        case \"serialNumber\":\n          obj.headerName = \"Порядковый номер\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n\n        case \"employee\":\n          obj.headerName = \"Сотрудник\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n\n        case \"description\":\n          obj.headerName = \"Описание\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n\n        case \"createdAt\":\n          obj.hide = true;\n          obj.headerName = \"Дата создания\";\n          obj.field = item;\n          obj.flex = 0.2;\n          break;\n\n        case \"updatedAt\":\n          obj.hide = true;\n          obj.headerName = \"Дата редактирования\";\n          obj.field = item;\n          obj.flex = 0.2;\n          break;\n\n        case \"note\":\n          obj.headerName = \"Примечание\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n\n        default:\n          break;\n      }\n\n      if (data.products.count > 0 && item !== \"deletedAt\" && item !== \"typeId\" && item !== \"namingId\" && item !== \"locationId\" && item !== \"noteId\" && item !== \"employeeId\") {\n        columns.push(obj);\n      }\n    });\n    let products = {};\n    console.log({\n      columns\n    }); // move the type in 3 column left\n    // columns.forEach((col, index) => {\n    //   if (col.headerName === \"Тип\") {\n    //     columns.splice(index, 1);\n    //     columns.splice(index - 3, 0, col);\n    //   }\n    // });\n\n    products.rows = rows;\n    products.columns = columns;\n    return products;\n  }; // Add Product\n\n\n  const addProduct = async product => {\n    try {\n      const res = await fetch(\"http://localhost:3001/api/v1/products/\", {\n        method: \"POST\",\n        body: JSON.stringify(product),\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      });\n      const data = await res.json();\n      if (data[\"Bad Request\"]) throw new Error(data[\"Bad Request\"]);\n      if (data[\"errorMessage\"]) throw new Error(data[\"errorMessage\"]);\n      let newRows = [];\n      data.product.type = data.product.type.name;\n\n      if (products.columns.length > 0) {\n        data.product.createdAt = moment(data.product.createdAt).format(\"YYYY.MM.DD HH:mm\");\n        data.product.updatedAt = moment(data.product.updatedAt).format(\"YYYY.MM.DD HH:mm\");\n        newRows = [...products.rows, data.product];\n        let newProducts = Object.assign({}, {\n          columns: products.columns,\n          rows: newRows\n        });\n        setProducts(newProducts);\n      } else {\n        const productsFromServer = await fetchProducts();\n        setProducts(productsFromServer);\n      }\n    } catch (err) {\n      console.log(err);\n      enqueueSnackbar(`${err.message}`, {\n        variant: \"error\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    }\n  }; // Add Product\n\n\n  const updateProduct = async product => {\n    try {\n      const res = await fetch(`http://localhost:3001/api/v1/products/${product.id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(product)\n      });\n      const data = await res.json();\n      if (data[\"Bad Request\"]) throw new Error(data[\"Bad Request\"]);\n      if (data[\"errorMessage\"]) throw new Error(data[\"errorMessage\"]);\n      data.product.createdAt = moment(data.product.createdAt).format(\"YYYY.MM.DD HH:mm\");\n      data.product.updatedAt = moment(data.product.updatedAt).format(\"YYYY.MM.DD HH:mm\");\n      let newRows = [];\n      data.product.type = data.product.type.name;\n\n      if (products.columns.length > 0) {\n        newRows = products.rows.map(loc => loc.id === product.id ? data.product : loc);\n        let newProducts = Object.assign({}, {\n          columns: products.columns,\n          rows: newRows\n        });\n        setProducts(newProducts);\n      } else {\n        const productsFromServer = await fetchProducts();\n        setProducts(productsFromServer);\n      }\n    } catch (err) {\n      console.log(err);\n      enqueueSnackbar(`${err.message}`, {\n        variant: \"error\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    }\n  }; // Delete Product\n\n\n  const deleteProduct = async parameters => {\n    try {\n      await fetch(`http://localhost:3001/api/v1/products/${parameters.id}`, {\n        method: \"DELETE\"\n      });\n      let newRows = products.rows.filter(row => row.id !== parameters.id);\n      let newProducts = Object.assign({}, {\n        columns: products.columns,\n        rows: newRows\n      });\n      setProducts(newProducts);\n    } catch (err) {\n      console.log(err);\n      enqueueSnackbar(`${err.message}`, {\n        variant: \"error\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProductTable, {\n    products: products,\n    deleteProduct: deleteProduct,\n    addProduct: addProduct,\n    updateProduct: updateProduct\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Product, \"yOAbBplHxjJC3bxUwMqAivicWvs=\", false, function () {\n  return [useSnackbar];\n});\n\n_c = Product;\nexport default Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["/home/lilit/workspace/vtk/from_scratch_frontend_vtk/src/containers/Products.js"],"names":["useState","useEffect","useSnackbar","Tooltip","ProductTable","moment","require","Product","products","setProducts","enqueueSnackbar","getProducts","productsFromServer","fetchProducts","res","fetch","data","json","columns","rows","map","row","console","log","createdAt","format","updatedAt","naming","name","decimalNumber","location","note","employee","locColumns","count","Object","keys","forEach","item","obj","hide","headerName","field","flex","number","push","addProduct","product","method","body","JSON","stringify","headers","Error","newRows","type","length","newProducts","assign","err","message","variant","anchorOrigin","vertical","horizontal","updateProduct","id","loc","deleteProduct","parameters","filter"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useSnackbar } from \"notistack\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport ProductTable from \"../components/Product/ProductTable\";\nvar moment = require(\"moment\");\n\nconst Product = () => {\n  const [products, setProducts] = useState({});\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    const getProducts = async () => {\n      const productsFromServer = await fetchProducts();\n      setProducts(productsFromServer);\n    };\n    getProducts();\n  }, []);\n\n  // Fetch Products\n  const fetchProducts = async () => {\n    const res = await fetch(\"http://localhost:3001/api/v1/products\");\n    const data = await res.json();\n    let columns = [];\n    let rows = data.products.rows.map(row => {\n      console.log({ row });\n      row.createdAt = moment(row.createdAt).format(\"YYYY.MM.DD HH:mm\");\n      row.updatedAt = moment(row.updatedAt).format(\"YYYY.MM.DD HH:mm\");\n      // if (row.type) row.type = row.type.name;\n      if (row.naming) row.naming = row.naming.name;\n      if (row.decimalNumber) row.decimalNumber = row.decimalNumber.name;\n      if (row.location) row.location = row.location.name;\n      if (row.note) row.note = row.note.name;\n      if (row.employee) row.employee = row.employee.name;\n      return row;\n    });\n    let locColumns = [];\n    if (data.products.count > 0)\n      locColumns = Object.keys(data.products.rows[0]);\n\n    locColumns.forEach(item => {\n      let obj = {};\n      switch (item) {\n        case \"id\":\n          obj.hide = true;\n          obj.headerName = \"ID\";\n          obj.field = item;\n          break;\n        case \"name\":\n          obj.headerName = \"Наименование\";\n          obj.field = item.name;\n          obj.flex = 0.4;\n          break;\n        case \"number\":\n          obj.headerName = \"Номер\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n        case \"decimalNumber\":\n          obj.headerName = \"Децимальный номер\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n        case \"bookingDate\":\n          obj.headerName = \"Дата бронирования\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n        case \"year\":\n          obj.headerName = \"Год\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n        case \"location\":\n          obj.headerName = \"Место производства\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n        case \"type\":\n          obj.headerName = \"Тип изделия \";\n          obj.field = item.number;\n          obj.flex = 0.4;\n          // obj.renderCell = (params: CellParams) => (\n          //   <Tooltip title={item.name}>{obj.field}</Tooltip>\n          // );\n          break;\n        case \"serialNumber\":\n          obj.headerName = \"Порядковый номер\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n        case \"employee\":\n          obj.headerName = \"Сотрудник\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n        case \"description\":\n          obj.headerName = \"Описание\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n        case \"createdAt\":\n          obj.hide = true;\n          obj.headerName = \"Дата создания\";\n          obj.field = item;\n          obj.flex = 0.2;\n          break;\n        case \"updatedAt\":\n          obj.hide = true;\n          obj.headerName = \"Дата редактирования\";\n          obj.field = item;\n          obj.flex = 0.2;\n          break;\n        case \"note\":\n          obj.headerName = \"Примечание\";\n          obj.field = item;\n          obj.flex = 0.4;\n          break;\n        default:\n          break;\n      }\n      if (\n        data.products.count > 0 &&\n        item !== \"deletedAt\" &&\n        item !== \"typeId\" &&\n        item !== \"namingId\" &&\n        item !== \"locationId\" &&\n        item !== \"noteId\" &&\n        item !== \"employeeId\"\n      ) {\n        columns.push(obj);\n      }\n    });\n\n    let products = {};\n    console.log({ columns });\n    // move the type in 3 column left\n    // columns.forEach((col, index) => {\n    //   if (col.headerName === \"Тип\") {\n    //     columns.splice(index, 1);\n    //     columns.splice(index - 3, 0, col);\n    //   }\n    // });\n\n    products.rows = rows;\n    products.columns = columns;\n    return products;\n  };\n\n  // Add Product\n  const addProduct = async product => {\n    try {\n      const res = await fetch(\"http://localhost:3001/api/v1/products/\", {\n        method: \"POST\",\n        body: JSON.stringify(product),\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      });\n\n      const data = await res.json();\n      if (data[\"Bad Request\"]) throw new Error(data[\"Bad Request\"]);\n      if (data[\"errorMessage\"]) throw new Error(data[\"errorMessage\"]);\n      let newRows = [];\n      data.product.type = data.product.type.name;\n      if (products.columns.length > 0) {\n        data.product.createdAt = moment(data.product.createdAt).format(\n          \"YYYY.MM.DD HH:mm\"\n        );\n        data.product.updatedAt = moment(data.product.updatedAt).format(\n          \"YYYY.MM.DD HH:mm\"\n        );\n        newRows = [...products.rows, data.product];\n        let newProducts = Object.assign(\n          {},\n          { columns: products.columns, rows: newRows }\n        );\n        setProducts(newProducts);\n      } else {\n        const productsFromServer = await fetchProducts();\n        setProducts(productsFromServer);\n      }\n    } catch (err) {\n      console.log(err);\n      enqueueSnackbar(`${err.message}`, {\n        variant: \"error\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    }\n  };\n\n  // Add Product\n  const updateProduct = async product => {\n    try {\n      const res = await fetch(\n        `http://localhost:3001/api/v1/products/${product.id}`,\n        {\n          method: \"PUT\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify(product)\n        }\n      );\n\n      const data = await res.json();\n      if (data[\"Bad Request\"]) throw new Error(data[\"Bad Request\"]);\n      if (data[\"errorMessage\"]) throw new Error(data[\"errorMessage\"]);\n      data.product.createdAt = moment(data.product.createdAt).format(\n        \"YYYY.MM.DD HH:mm\"\n      );\n      data.product.updatedAt = moment(data.product.updatedAt).format(\n        \"YYYY.MM.DD HH:mm\"\n      );\n      let newRows = [];\n      data.product.type = data.product.type.name;\n      if (products.columns.length > 0) {\n        newRows = products.rows.map(loc =>\n          loc.id === product.id ? data.product : loc\n        );\n        let newProducts = Object.assign(\n          {},\n          { columns: products.columns, rows: newRows }\n        );\n        setProducts(newProducts);\n      } else {\n        const productsFromServer = await fetchProducts();\n        setProducts(productsFromServer);\n      }\n    } catch (err) {\n      console.log(err);\n      enqueueSnackbar(`${err.message}`, {\n        variant: \"error\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    }\n  };\n\n  // Delete Product\n  const deleteProduct = async parameters => {\n    try {\n      await fetch(`http://localhost:3001/api/v1/products/${parameters.id}`, {\n        method: \"DELETE\"\n      });\n\n      let newRows = products.rows.filter(row => row.id !== parameters.id);\n      let newProducts = Object.assign(\n        {},\n        { columns: products.columns, rows: newRows }\n      );\n      setProducts(newProducts);\n    } catch (err) {\n      console.log(err);\n      enqueueSnackbar(`${err.message}`, {\n        variant: \"error\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    }\n  };\n\n  return (\n    <ProductTable\n      products={products}\n      deleteProduct={deleteProduct}\n      addProduct={addProduct}\n      updateProduct={updateProduct}\n    ></ProductTable>\n  );\n};\n\nexport default Product;\n"]},"metadata":{},"sourceType":"module"}