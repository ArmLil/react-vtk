{"ast":null,"code":"var _jsxFileName = \"/home/lilit/workspace/vtk/from_scratch_frontend_vtk/src/containers/Products.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useSnackbar } from \"notistack\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport ProductTable from \"../components/Product/ProductTable\";\nimport Button from \"@material-ui/core/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar moment = require(\"moment\");\n\nconst Product = () => {\n  _s();\n\n  const [products, setProducts] = useState({});\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  useEffect(() => {\n    console.log(\"use effect\");\n\n    const getProducts = async () => {\n      const productsFromServer = await fetchProducts();\n      setProducts(Object.assign({}, productsFromServer));\n    };\n\n    getProducts();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n  // Fetch Products\n\n  const fetchProducts = async () => {\n    console.log(\"fetchProducts...\");\n    const res = await fetch(\"http://localhost:3001/api/v1/products\");\n    const data = await res.json();\n    console.log({\n      data\n    });\n    let columns = [];\n    let rows = [];\n    data.products.rows.forEach(row => {\n      let rowObj = {};\n      rowObj.createdAt = moment(row.createdAt).format(\"YYYY.MM.DD HH:mm\");\n      rowObj.updatedAt = moment(row.updatedAt).format(\"YYYY.MM.DD HH:mm\");\n\n      if (row.type) {\n        rowObj.typeNumber = row.type.number;\n        rowObj.type = row.type.name;\n      } else {\n        rowObj.typeNumber = \"\";\n      }\n\n      if (row.naming) rowObj.naming = row.naming.name;\n      if (row.decimalNumber) rowObj.decimalNumber = row.decimalNumber;\n\n      if (row.location) {\n        rowObj.location = row.location.name;\n        rowObj.locationNumber = row.location.number;\n      } else {\n        rowObj.locationNumber = \"\";\n      }\n\n      if (row.note) rowObj.note = row.note;\n      if (row.employee) rowObj.employee = `${row.employee.name} ${row.employee.secondName[0]}.${row.employee.fatherName[0]}.`;\n      rowObj = Object.assign({}, row, rowObj);\n      rows.push(rowObj);\n    });\n    console.log({\n      rows\n    });\n    setProducts(Object.assign({}, products, {\n      rows: rows\n    }));\n    console.log({\n      products\n    });\n    let locColumns = [];\n\n    if (!products.columns || products.columns.length === 0) {\n      if (data.products.count > 0) locColumns = Object.keys(data.products.rows[0]);\n      locColumns.forEach(item => {\n        let obj = {};\n\n        switch (item) {\n          case \"id\":\n            obj.hide = true;\n            obj.headerName = \"ID\";\n            obj.field = item;\n            obj.flex = 0.2;\n            break;\n\n          case \"naming\":\n            obj.headerName = \"Наименование\";\n            obj.field = item;\n            obj.flex = 0.6;\n            break;\n\n          case \"number\":\n            obj.headerName = \"№п.п.\";\n            obj.field = item;\n            obj.flex = 0.2;\n            break;\n\n          case \"decimalNumber\":\n            obj.headerName = \"Децимальный номер\";\n            obj.field = item;\n            obj.flex = 0.4;\n            break;\n\n          case \"bookingDate\":\n            obj.headerName = \"Дата бронирования\";\n            obj.field = item;\n            obj.flex = 0.4;\n            break;\n\n          case \"year\":\n            obj.headerName = \"Год\";\n            obj.field = item;\n            obj.flex = 0.2;\n            break;\n\n          case \"location\":\n            obj.headerName = \"Место производства\";\n            obj.field = item;\n            obj.flex = 0.2;\n\n            obj.renderCell = params => /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: params.row.location || \"\",\n              placement: \"bottom\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  textTransform: \"lowercase\",\n                  fontSize: 14,\n                  justifyContent: \"flex-start\"\n                },\n                children: params.row.locationNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this);\n\n            break;\n\n          case \"type\":\n            obj.headerName = \"Тип изделия \";\n            obj.field = item;\n            obj.flex = 0.2;\n\n            obj.renderCell = params => /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: params.row.type || \"\",\n              placement: \"bottom\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  textTransform: \"lowercase\",\n                  fontSize: 14,\n                  justifyContent: \"flex-start\"\n                },\n                children: params.row.typeNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this);\n\n            break;\n\n          case \"serialNumber\":\n            obj.headerName = \"Порядковый номер\";\n            obj.field = item;\n            obj.flex = 0.3;\n            break;\n\n          case \"employee\":\n            obj.headerName = \"Сотрудник\";\n            obj.field = item;\n            obj.flex = 0.4;\n            break;\n\n          case \"createdAt\":\n            obj.hide = true;\n            obj.headerName = \"Дата создания\";\n            obj.field = item;\n            obj.flex = 0.3;\n            break;\n\n          case \"updatedAt\":\n            obj.hide = true;\n            obj.headerName = \"Дата редактирования\";\n            obj.field = item;\n            obj.flex = 0.3;\n            break;\n\n          case \"note\":\n            obj.headerName = \"Примечание\";\n            obj.field = item;\n            obj.flex = 0.4;\n            break;\n\n          default:\n            break;\n        }\n\n        if (data.products.count > 0 && item !== \"deletedAt\" && item !== \"typeId\" && item !== \"namingId\" && item !== \"locationId\" && item !== \"employeeId\") {\n          columns.push(obj);\n        }\n      });\n      let _columns = [];\n      columns.forEach((col, index) => {\n        if (col.field === \"id\") _columns[0] = col;\n        if (col.field === \"number\") _columns[1] = col;\n        if (col.field === \"naming\") _columns[2] = col;\n        if (col.field === \"decimalNumber\") _columns[3] = col;\n        if (col.field === \"bookingDate\") _columns[4] = col;\n        if (col.field === \"year\") _columns[5] = col;\n        if (col.field === \"location\") _columns[6] = col;\n        if (col.field === \"type\") _columns[7] = col;\n        if (col.field === \"serialNumber\") _columns[8] = col;\n        if (col.field === \"note\") _columns[9] = col;\n        if (col.field === \"employee\") _columns[10] = col;\n        if (col.field === \"createdAt\") _columns[11] = col;\n        if (col.field === \"updatedAt\") _columns[12] = col;\n      });\n      console.log({\n        _columns\n      });\n      setProducts(Object.assign({}, products, {\n        columns: _columns\n      }));\n    }\n\n    console.log({\n      products\n    });\n    return products;\n  };\n\n  const addProduct = async product => {\n    for (let i = 0; i < product.count; ++i) {\n      try {\n        const res = await fetch(\"http://localhost:3001/api/v1/products/\", {\n          method: \"POST\",\n          body: JSON.stringify(product),\n          headers: {\n            \"Content-type\": \"application/json\"\n          }\n        });\n        const data = await res.json();\n        if (data[\"Bad Request\"]) throw new Error(data[\"Bad Request\"]);\n        if (data[\"errorMessage\"]) throw new Error(data[\"errorMessage\"]);\n        let newRows = [];\n\n        if (products.columns.length > 0 && product.count === 1) {\n          data.product.createdAt = moment(data.product.createdAt).format(\"YYYY.MM.DD HH:mm\");\n          data.product.updatedAt = moment(data.product.updatedAt).format(\"YYYY.MM.DD HH:mm\");\n          newRows = [...products.rows, data.product];\n          let newProducts = Object.assign({}, {\n            columns: products.columns,\n            rows: newRows\n          });\n          setProducts(newProducts);\n        } else {\n          const productsFromServer = await fetchProducts();\n          setProducts(Object.assign({}, productsFromServer));\n        }\n      } catch (err) {\n        console.log(err);\n        enqueueSnackbar(`${err.message}`, {\n          variant: \"error\",\n          anchorOrigin: {\n            vertical: \"top\",\n            horizontal: \"center\"\n          }\n        });\n      }\n    }\n  };\n\n  const updateProduct = async product => {\n    try {\n      const res = await fetch(`http://localhost:3001/api/v1/products/${product.id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(product)\n      });\n      const data = await res.json();\n      console.log({\n        data\n      });\n      if (data[\"Bad Request\"]) throw new Error(data[\"Bad Request\"]);\n      if (data[\"errorMessage\"]) throw new Error(data[\"errorMessage\"]);\n      data.product.createdAt = moment(data.product.createdAt).format(\"YYYY.MM.DD HH:mm\");\n      data.product.updatedAt = moment(data.product.updatedAt).format(\"YYYY.MM.DD HH:mm\");\n      let newRows = [];\n\n      if (products.columns.length > 0) {\n        newRows = products.rows.map(prod => prod.id === product.id ? data.product : prod);\n        let newProducts = Object.assign({}, {\n          columns: products.columns,\n          rows: newRows\n        });\n        setProducts(newProducts);\n      } else {\n        const productsFromServer = await fetchProducts();\n        setProducts(productsFromServer);\n      }\n    } catch (err) {\n      console.log(err);\n      enqueueSnackbar(`${err.message}`, {\n        variant: \"error\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    }\n  }; // Delete Product\n\n\n  const deleteProduct = async parameters => {\n    try {\n      await fetch(`http://localhost:3001/api/v1/products/${parameters.id}`, {\n        method: \"DELETE\"\n      });\n      let newRows = products.rows.filter(row => row.id !== parameters.id);\n      let newProducts = Object.assign({}, {\n        columns: products.columns,\n        rows: newRows\n      });\n      setProducts(newProducts);\n    } catch (err) {\n      console.log(err);\n      enqueueSnackbar(`${err.message}`, {\n        variant: \"error\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProductTable, {\n    products: products,\n    deleteProduct: deleteProduct,\n    addProduct: addProduct,\n    updateProduct: updateProduct\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 321,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Product, \"yOAbBplHxjJC3bxUwMqAivicWvs=\", false, function () {\n  return [useSnackbar];\n});\n\n_c = Product;\nexport default Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["/home/lilit/workspace/vtk/from_scratch_frontend_vtk/src/containers/Products.js"],"names":["useState","useEffect","useSnackbar","Tooltip","ProductTable","Button","moment","require","Product","products","setProducts","enqueueSnackbar","console","log","getProducts","productsFromServer","fetchProducts","Object","assign","res","fetch","data","json","columns","rows","forEach","row","rowObj","createdAt","format","updatedAt","type","typeNumber","number","name","naming","decimalNumber","location","locationNumber","note","employee","secondName","fatherName","push","locColumns","length","count","keys","item","obj","hide","headerName","field","flex","renderCell","params","textTransform","fontSize","justifyContent","_columns","col","index","addProduct","product","i","method","body","JSON","stringify","headers","Error","newRows","newProducts","err","message","variant","anchorOrigin","vertical","horizontal","updateProduct","id","map","prod","deleteProduct","parameters","filter"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useSnackbar } from \"notistack\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport ProductTable from \"../components/Product/ProductTable\";\nimport Button from \"@material-ui/core/Button\";\nvar moment = require(\"moment\");\n\nconst Product = () => {\n  const [products, setProducts] = useState({});\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    console.log(\"use effect\");\n    const getProducts = async () => {\n      const productsFromServer = await fetchProducts();\n      setProducts(Object.assign({}, productsFromServer));\n    };\n    getProducts();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Fetch Products\n  const fetchProducts = async () => {\n    console.log(\"fetchProducts...\");\n    const res = await fetch(\"http://localhost:3001/api/v1/products\");\n    const data = await res.json();\n    console.log({ data });\n    let columns = [];\n    let rows = [];\n    data.products.rows.forEach(row => {\n      let rowObj = {};\n      rowObj.createdAt = moment(row.createdAt).format(\"YYYY.MM.DD HH:mm\");\n      rowObj.updatedAt = moment(row.updatedAt).format(\"YYYY.MM.DD HH:mm\");\n      if (row.type) {\n        rowObj.typeNumber = row.type.number;\n        rowObj.type = row.type.name;\n      } else {\n        rowObj.typeNumber = \"\";\n      }\n      if (row.naming) rowObj.naming = row.naming.name;\n      if (row.decimalNumber) rowObj.decimalNumber = row.decimalNumber;\n      if (row.location) {\n        rowObj.location = row.location.name;\n        rowObj.locationNumber = row.location.number;\n      } else {\n        rowObj.locationNumber = \"\";\n      }\n      if (row.note) rowObj.note = row.note;\n      if (row.employee)\n        rowObj.employee = `${row.employee.name} ${row.employee.secondName[0]}.${\n          row.employee.fatherName[0]\n        }.`;\n      rowObj = Object.assign({}, row, rowObj);\n      rows.push(rowObj);\n    });\n    console.log({ rows });\n\n    setProducts(Object.assign({}, products, { rows: rows }));\n    console.log({ products });\n    let locColumns = [];\n    if (!products.columns || products.columns.length === 0) {\n      if (data.products.count > 0)\n        locColumns = Object.keys(data.products.rows[0]);\n      locColumns.forEach(item => {\n        let obj = {};\n        switch (item) {\n          case \"id\":\n            obj.hide = true;\n            obj.headerName = \"ID\";\n            obj.field = item;\n            obj.flex = 0.2;\n            break;\n          case \"naming\":\n            obj.headerName = \"Наименование\";\n            obj.field = item;\n            obj.flex = 0.6;\n            break;\n          case \"number\":\n            obj.headerName = \"№п.п.\";\n            obj.field = item;\n            obj.flex = 0.2;\n            break;\n          case \"decimalNumber\":\n            obj.headerName = \"Децимальный номер\";\n            obj.field = item;\n            obj.flex = 0.4;\n            break;\n          case \"bookingDate\":\n            obj.headerName = \"Дата бронирования\";\n            obj.field = item;\n            obj.flex = 0.4;\n            break;\n          case \"year\":\n            obj.headerName = \"Год\";\n            obj.field = item;\n            obj.flex = 0.2;\n            break;\n          case \"location\":\n            obj.headerName = \"Место производства\";\n            obj.field = item;\n            obj.flex = 0.2;\n            obj.renderCell = (params: CellParams) => (\n              <Tooltip title={params.row.location || \"\"} placement=\"bottom\">\n                <Button\n                  style={{\n                    textTransform: \"lowercase\",\n                    fontSize: 14,\n                    justifyContent: \"flex-start\"\n                  }}\n                >\n                  {params.row.locationNumber}\n                </Button>\n              </Tooltip>\n            );\n            break;\n          case \"type\":\n            obj.headerName = \"Тип изделия \";\n            obj.field = item;\n            obj.flex = 0.2;\n            obj.renderCell = (params: CellParams) => (\n              <Tooltip title={params.row.type || \"\"} placement=\"bottom\">\n                <Button\n                  style={{\n                    textTransform: \"lowercase\",\n                    fontSize: 14,\n                    justifyContent: \"flex-start\"\n                  }}\n                >\n                  {params.row.typeNumber}\n                </Button>\n              </Tooltip>\n            );\n            break;\n          case \"serialNumber\":\n            obj.headerName = \"Порядковый номер\";\n            obj.field = item;\n            obj.flex = 0.3;\n            break;\n          case \"employee\":\n            obj.headerName = \"Сотрудник\";\n            obj.field = item;\n            obj.flex = 0.4;\n            break;\n          case \"createdAt\":\n            obj.hide = true;\n            obj.headerName = \"Дата создания\";\n            obj.field = item;\n            obj.flex = 0.3;\n            break;\n          case \"updatedAt\":\n            obj.hide = true;\n            obj.headerName = \"Дата редактирования\";\n            obj.field = item;\n            obj.flex = 0.3;\n            break;\n          case \"note\":\n            obj.headerName = \"Примечание\";\n            obj.field = item;\n            obj.flex = 0.4;\n            break;\n          default:\n            break;\n        }\n        if (\n          data.products.count > 0 &&\n          item !== \"deletedAt\" &&\n          item !== \"typeId\" &&\n          item !== \"namingId\" &&\n          item !== \"locationId\" &&\n          item !== \"employeeId\"\n        ) {\n          columns.push(obj);\n        }\n      });\n\n      let _columns = [];\n\n      columns.forEach((col, index) => {\n        if (col.field === \"id\") _columns[0] = col;\n        if (col.field === \"number\") _columns[1] = col;\n        if (col.field === \"naming\") _columns[2] = col;\n        if (col.field === \"decimalNumber\") _columns[3] = col;\n        if (col.field === \"bookingDate\") _columns[4] = col;\n        if (col.field === \"year\") _columns[5] = col;\n        if (col.field === \"location\") _columns[6] = col;\n        if (col.field === \"type\") _columns[7] = col;\n        if (col.field === \"serialNumber\") _columns[8] = col;\n        if (col.field === \"note\") _columns[9] = col;\n        if (col.field === \"employee\") _columns[10] = col;\n        if (col.field === \"createdAt\") _columns[11] = col;\n        if (col.field === \"updatedAt\") _columns[12] = col;\n      });\n      console.log({ _columns });\n      setProducts(Object.assign({}, products, { columns: _columns }));\n    }\n    console.log({ products });\n    return products;\n  };\n\n  const addProduct = async product => {\n    for (let i = 0; i < product.count; ++i) {\n      try {\n        const res = await fetch(\"http://localhost:3001/api/v1/products/\", {\n          method: \"POST\",\n          body: JSON.stringify(product),\n          headers: {\n            \"Content-type\": \"application/json\"\n          }\n        });\n\n        const data = await res.json();\n        if (data[\"Bad Request\"]) throw new Error(data[\"Bad Request\"]);\n        if (data[\"errorMessage\"]) throw new Error(data[\"errorMessage\"]);\n        let newRows = [];\n        if (products.columns.length > 0 && product.count === 1) {\n          data.product.createdAt = moment(data.product.createdAt).format(\n            \"YYYY.MM.DD HH:mm\"\n          );\n          data.product.updatedAt = moment(data.product.updatedAt).format(\n            \"YYYY.MM.DD HH:mm\"\n          );\n\n          newRows = [...products.rows, data.product];\n          let newProducts = Object.assign(\n            {},\n            { columns: products.columns, rows: newRows }\n          );\n          setProducts(newProducts);\n        } else {\n          const productsFromServer = await fetchProducts();\n          setProducts(Object.assign({}, productsFromServer));\n        }\n      } catch (err) {\n        console.log(err);\n        enqueueSnackbar(`${err.message}`, {\n          variant: \"error\",\n          anchorOrigin: {\n            vertical: \"top\",\n            horizontal: \"center\"\n          }\n        });\n      }\n    }\n  };\n\n  const updateProduct = async product => {\n    try {\n      const res = await fetch(\n        `http://localhost:3001/api/v1/products/${product.id}`,\n        {\n          method: \"PUT\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify(product)\n        }\n      );\n\n      const data = await res.json();\n      console.log({ data });\n      if (data[\"Bad Request\"]) throw new Error(data[\"Bad Request\"]);\n      if (data[\"errorMessage\"]) throw new Error(data[\"errorMessage\"]);\n      data.product.createdAt = moment(data.product.createdAt).format(\n        \"YYYY.MM.DD HH:mm\"\n      );\n      data.product.updatedAt = moment(data.product.updatedAt).format(\n        \"YYYY.MM.DD HH:mm\"\n      );\n      let newRows = [];\n\n      if (products.columns.length > 0) {\n        newRows = products.rows.map(prod =>\n          prod.id === product.id ? data.product : prod\n        );\n        let newProducts = Object.assign(\n          {},\n          { columns: products.columns, rows: newRows }\n        );\n        setProducts(newProducts);\n      } else {\n        const productsFromServer = await fetchProducts();\n        setProducts(productsFromServer);\n      }\n    } catch (err) {\n      console.log(err);\n      enqueueSnackbar(`${err.message}`, {\n        variant: \"error\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    }\n  };\n\n  // Delete Product\n  const deleteProduct = async parameters => {\n    try {\n      await fetch(`http://localhost:3001/api/v1/products/${parameters.id}`, {\n        method: \"DELETE\"\n      });\n\n      let newRows = products.rows.filter(row => row.id !== parameters.id);\n      let newProducts = Object.assign(\n        {},\n        { columns: products.columns, rows: newRows }\n      );\n      setProducts(newProducts);\n    } catch (err) {\n      console.log(err);\n      enqueueSnackbar(`${err.message}`, {\n        variant: \"error\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        }\n      });\n    }\n  };\n\n  return (\n    <ProductTable\n      products={products}\n      deleteProduct={deleteProduct}\n      addProduct={addProduct}\n      updateProduct={updateProduct}\n    ></ProductTable>\n  );\n};\n\nexport default Product;\n"]},"metadata":{},"sourceType":"module"}