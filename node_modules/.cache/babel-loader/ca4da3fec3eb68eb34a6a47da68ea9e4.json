{"ast":null,"code":"var _jsxFileName = \"/home/lilit/workspace/vtk/from_scratch_frontend_vtk/src/components/Product/ProductAddDialog.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport SelectTextField from \"./SelectTextField\";\nimport { useSnackbar } from \"notistack\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"55ch\"\n    }\n  },\n  header: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginRight: 35\n  }\n}));\nexport default function NamingAddDialog({\n  handleCreate,\n  handleClose,\n  open,\n  namings,\n  locations,\n  employees\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [product, setProduct] = React.useState({});\n  const [number, setNumber] = React.useState(\"\");\n  const [naming, setNaming] = React.useState(\"\");\n  const [location, setLocation] = React.useState(\"\");\n  const [count, setCount] = React.useState(1);\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [note, setNote] = React.useState(\"\");\n  const [inputNaming, setInputNaming] = React.useState(\"\");\n  const [inputLocation, setInputLocation] = React.useState(\"\");\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const showNotification = text => {\n    enqueueSnackbar(text, {\n      variant: \"warning\",\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      }\n    });\n  };\n\n  const handleChangeNumber = event => {\n    setNumber(Object.assign(event.target.value));\n    setProduct(Object.assign(product, {\n      number: event.target.value\n    }));\n  };\n\n  const handleChangeNote = event => {\n    setNote(event.target.value);\n    setProduct(Object.assign(product, {\n      note: event.target.value\n    }));\n  };\n\n  const handleChangeCount = event => {\n    setCount(event.target.value);\n    setProduct(Object.assign(product, {\n      count: event.target.value\n    }));\n  };\n\n  const handleChangeBookingDate = event => {\n    setBookingDate(event.target.value);\n    setProduct(Object.assign(product, {\n      bookingDate: event.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.header,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"\\u0418\\u0437\\u0434\\u0435\\u043B\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          width: 150,\n          marginTop: 20\n        },\n        InputProps: {\n          inputProps: {\n            min: 1,\n            max: 50\n          }\n        },\n        id: \"standard-count\",\n        type: \"number\",\n        helperText: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0441\\u043E\\u0437\\u0434\\u0430\\u0432\\u0430\\u0435\\u043C\\u044B\\u0445 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u043E\\u0432\",\n        value: count,\n        onChange: handleChangeCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: \"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u0437\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435 \\u043F\\u043E\\u043B\\u044F!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.root,\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-multiline-number\",\n          label: \"\\u2116\\u043F.\\u043F.\",\n          value: number,\n          onChange: handleChangeNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          options: [...namings, \"\"],\n          inputValue: inputNaming,\n          value: naming,\n          onChange: (event, newValue) => {\n            console.log(\"onChange....\");\n            if (newValue && newValue.id) setProduct(Object.assign(product, {\n              namingId: newValue.id\n            }));else setProduct(Object.assign(product, {\n              namingId: null\n            }));\n            setNaming(newValue);\n          },\n          onOpen: () => {\n            console.log(\"onOpen\");\n\n            if (namings.length === 0) {\n              showNotification(`Чтобы выбрать Наименование, необходимо заранее создавать их в соответствующем списке.`);\n            }\n          },\n          onInputChange: (event, newInputNaming) => {\n            setInputNaming(newInputNaming);\n          },\n          getOptionLabel: option => {\n            let showValue = \"\";\n            if (option.name) showValue = `${option.name}, ${option.decimalNumber}(дец.ном), ${option.type.name}(тип)`;\n            return showValue;\n          },\n          id: \"controllable-states-demo\",\n          style: {\n            width: 300\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"\\u041D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\",\n            multiline: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-multiline-booking\",\n          label: \"\\u0414\\u0430\\u0442\\u0430 \\u0431\\u0440\\u043E\\u043D\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F\",\n          value: bookingDate,\n          onChange: handleChangeBookingDate,\n          placeholder: \"\\u0414\\u0414.\\u041C\\u041C.\\u0413\\u0413\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectTextField, {\n          items: locations,\n          needId: true,\n          title: \"\\u041C\\u0435\\u0441\\u0442\\u043E \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0441\\u0442\\u0432\\u0430\",\n          required: true,\n          value: \"\",\n          getItem: item => {\n            setProduct(Object.assign(product, {\n              locationId: item\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          options: [...locations, \"\"],\n          inputValue: inputLocation,\n          value: location,\n          onChange: (event, newValue) => {\n            console.log(\"onChange....\");\n            if (newValue && newValue.id) setProduct(Object.assign(product, {\n              locationId: newValue.id\n            }));else setProduct(Object.assign(product, {\n              locationId: null\n            }));\n            setLocation(newValue);\n          },\n          onOpen: () => {\n            console.log(\"onOpen\");\n\n            if (locations.length === 0) {\n              showNotification(`Чтобы выбрать Место, необходимо заранее создавать их в соответствующем списке.`);\n            }\n          },\n          onInputChange: (event, newInputLocation) => {\n            setInputLocation(newInputLocation);\n          },\n          getOptionLabel: option => {\n            let showValue = \"\";\n            if (option.name) showValue = `${option.name}, ${option.number}`;\n            return showValue;\n          },\n          id: \"controllable-states-demo\",\n          style: {\n            width: 300\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"\\u041C\\u0435\\u0441\\u0442\\u043E \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0441\\u0442\\u0432\\u0430\",\n            multiline: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectTextField, {\n          items: employees,\n          needId: true,\n          title: \"\\u0421\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0438\",\n          value: \"\",\n          getItem: item => {\n            setProduct(Object.assign(product, {\n              employeeId: item\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-multiline-description\",\n          label: \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0447\\u0430\\u043D\\u0438\\u0435\",\n          value: note,\n          onChange: handleChangeNote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        color: \"primary\",\n        children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: ev => handleCreate(ev, Object.assign(product, {\n          count: count\n        })),\n        color: \"primary\",\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NamingAddDialog, \"6b0Nl8lMBb4hdqNR0XU8CSeyw+M=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n\n_c = NamingAddDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"NamingAddDialog\");","map":{"version":3,"sources":["/home/lilit/workspace/vtk/from_scratch_frontend_vtk/src/components/Product/ProductAddDialog.js"],"names":["React","Button","TextField","Autocomplete","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","SelectTextField","useSnackbar","createStyles","makeStyles","Theme","useStyles","theme","root","margin","spacing","width","header","display","justifyContent","marginRight","NamingAddDialog","handleCreate","handleClose","open","namings","locations","employees","classes","product","setProduct","useState","number","setNumber","naming","setNaming","location","setLocation","count","setCount","bookingDate","setBookingDate","note","setNote","inputNaming","setInputNaming","inputLocation","setInputLocation","enqueueSnackbar","showNotification","text","variant","anchorOrigin","vertical","horizontal","handleChangeNumber","event","Object","assign","target","value","handleChangeNote","handleChangeCount","handleChangeBookingDate","marginTop","inputProps","min","max","newValue","console","log","id","namingId","length","newInputNaming","option","showValue","name","decimalNumber","type","params","item","locationId","newInputLocation","employeeId","ev"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport SelectTextField from \"./SelectTextField\";\nimport { useSnackbar } from \"notistack\";\n\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \"& .MuiTextField-root\": {\n        margin: theme.spacing(1),\n        width: \"55ch\"\n      }\n    },\n    header: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      marginRight: 35\n    }\n  })\n);\n\nexport default function NamingAddDialog({\n  handleCreate,\n  handleClose,\n  open,\n  namings,\n  locations,\n  employees\n}) {\n  const classes = useStyles();\n  const [product, setProduct] = React.useState({});\n  const [number, setNumber] = React.useState(\"\");\n  const [naming, setNaming] = React.useState(\"\");\n  const [location, setLocation] = React.useState(\"\");\n  const [count, setCount] = React.useState(1);\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [note, setNote] = React.useState(\"\");\n  const [inputNaming, setInputNaming] = React.useState(\"\");\n  const [inputLocation, setInputLocation] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n  const showNotification = text => {\n    enqueueSnackbar(text, {\n      variant: \"warning\",\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      }\n    });\n  };\n\n  const handleChangeNumber = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNumber(Object.assign(event.target.value));\n    setProduct(Object.assign(product, { number: event.target.value }));\n  };\n\n  const handleChangeNote = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNote(event.target.value);\n    setProduct(Object.assign(product, { note: event.target.value }));\n  };\n\n  const handleChangeCount = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCount(event.target.value);\n    setProduct(Object.assign(product, { count: event.target.value }));\n  };\n\n  const handleChangeBookingDate = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setBookingDate(event.target.value);\n    setProduct(Object.assign(product, { bookingDate: event.target.value }));\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <div className={classes.header}>\n        <DialogTitle id=\"form-dialog-title\">Изделие</DialogTitle>\n        <TextField\n          style={{ width: 150, marginTop: 20 }}\n          InputProps={{ inputProps: { min: 1, max: 50 } }}\n          id=\"standard-count\"\n          type=\"number\"\n          helperText=\"Количество создаваемых элементов\"\n          value={count}\n          onChange={handleChangeCount}\n        />\n      </div>\n\n      <DialogContent>\n        <DialogContentText>Пожалуйста, заполните поля!</DialogContentText>\n        <form className={classes.root} noValidate autoComplete=\"off\">\n          <TextField\n            id=\"standard-multiline-number\"\n            label=\"№п.п.\"\n            value={number}\n            onChange={handleChangeNumber}\n          />\n          <Autocomplete\n            options={[...namings, \"\"]}\n            inputValue={inputNaming}\n            value={naming}\n            onChange={(event, newValue) => {\n              console.log(\"onChange....\");\n              if (newValue && newValue.id)\n                setProduct(Object.assign(product, { namingId: newValue.id }));\n              else setProduct(Object.assign(product, { namingId: null }));\n              setNaming(newValue);\n            }}\n            onOpen={() => {\n              console.log(\"onOpen\");\n              if (namings.length === 0) {\n                showNotification(\n                  `Чтобы выбрать Наименование, необходимо заранее создавать их в соответствующем списке.`\n                );\n              }\n            }}\n            onInputChange={(event, newInputNaming) => {\n              setInputNaming(newInputNaming);\n            }}\n            getOptionLabel={option => {\n              let showValue = \"\";\n              if (option.name)\n                showValue = `${option.name}, ${option.decimalNumber}(дец.ном), ${option.type.name}(тип)`;\n              return showValue;\n            }}\n            id=\"controllable-states-demo\"\n            style={{ width: 300 }}\n            renderInput={params => (\n              <TextField {...params} label=\"Наименование\" multiline></TextField>\n            )}\n          />\n          <TextField\n            id=\"standard-multiline-booking\"\n            label=\"Дата бронирования\"\n            value={bookingDate}\n            onChange={handleChangeBookingDate}\n            placeholder=\"ДД.ММ.ГГ\"\n          />\n          <SelectTextField\n            items={locations}\n            needId={true}\n            title=\"Место производства\"\n            required={true}\n            value={\"\"}\n            getItem={item => {\n              setProduct(Object.assign(product, { locationId: item }));\n            }}\n          />\n          <Autocomplete\n            options={[...locations, \"\"]}\n            inputValue={inputLocation}\n            value={location}\n            onChange={(event, newValue) => {\n              console.log(\"onChange....\");\n              if (newValue && newValue.id)\n                setProduct(Object.assign(product, { locationId: newValue.id }));\n              else setProduct(Object.assign(product, { locationId: null }));\n              setLocation(newValue);\n            }}\n            onOpen={() => {\n              console.log(\"onOpen\");\n              if (locations.length === 0) {\n                showNotification(\n                  `Чтобы выбрать Место, необходимо заранее создавать их в соответствующем списке.`\n                );\n              }\n            }}\n            onInputChange={(event, newInputLocation) => {\n              setInputLocation(newInputLocation);\n            }}\n            getOptionLabel={option => {\n              let showValue = \"\";\n              if (option.name) showValue = `${option.name}, ${option.number}`;\n              return showValue;\n            }}\n            id=\"controllable-states-demo\"\n            style={{ width: 300 }}\n            renderInput={params => (\n              <TextField\n                {...params}\n                label=\"Место производства\"\n                multiline\n              ></TextField>\n            )}\n          />\n          <SelectTextField\n            items={employees}\n            needId={true}\n            title=\"Сотрудники\"\n            value={\"\"}\n            getItem={item => {\n              setProduct(Object.assign(product, { employeeId: item }));\n            }}\n          />\n          <TextField\n            id=\"standard-multiline-description\"\n            label=\"Примечание\"\n            value={note}\n            onChange={handleChangeNote}\n          />\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Отменить\n        </Button>\n        <Button\n          onClick={ev =>\n            handleCreate(ev, Object.assign(product, { count: count }))\n          }\n          color=\"primary\"\n        >\n          Создать\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}